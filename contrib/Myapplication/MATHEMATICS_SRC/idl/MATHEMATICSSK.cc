// This file is generated by omniidl (C++ backend)- omniORB_4_1. Do not edit.

#include "MATHEMATICS.hh"
#include <omniORB4/IOP_S.h>
#include <omniORB4/IOP_C.h>
#include <omniORB4/callDescriptor.h>
#include <omniORB4/callHandle.h>
#include <omniORB4/objTracker.h>


OMNI_USING_NAMESPACE(omni)

static const char* _0RL_library_version = omniORB_4_1;



MATHEMATICS_ORB::MATH_Gen_ptr MATHEMATICS_ORB::MATH_Gen_Helper::_nil() {
  return ::MATHEMATICS_ORB::MATH_Gen::_nil();
}

::CORBA::Boolean MATHEMATICS_ORB::MATH_Gen_Helper::is_nil(::MATHEMATICS_ORB::MATH_Gen_ptr p) {
  return ::CORBA::is_nil(p);

}

void MATHEMATICS_ORB::MATH_Gen_Helper::release(::MATHEMATICS_ORB::MATH_Gen_ptr p) {
  ::CORBA::release(p);
}

void MATHEMATICS_ORB::MATH_Gen_Helper::marshalObjRef(::MATHEMATICS_ORB::MATH_Gen_ptr obj, cdrStream& s) {
  ::MATHEMATICS_ORB::MATH_Gen::_marshalObjRef(obj, s);
}

MATHEMATICS_ORB::MATH_Gen_ptr MATHEMATICS_ORB::MATH_Gen_Helper::unmarshalObjRef(cdrStream& s) {
  return ::MATHEMATICS_ORB::MATH_Gen::_unmarshalObjRef(s);
}

void MATHEMATICS_ORB::MATH_Gen_Helper::duplicate(::MATHEMATICS_ORB::MATH_Gen_ptr obj) {
  if( obj && !obj->_NP_is_nil() )  omni::duplicateObjRef(obj);
}

MATHEMATICS_ORB::MATH_Gen_ptr
MATHEMATICS_ORB::MATH_Gen::_duplicate(::MATHEMATICS_ORB::MATH_Gen_ptr obj)
{
  if( obj && !obj->_NP_is_nil() )  omni::duplicateObjRef(obj);
  return obj;
}

MATHEMATICS_ORB::MATH_Gen_ptr
MATHEMATICS_ORB::MATH_Gen::_narrow(::CORBA::Object_ptr obj)
{
  if( !obj || obj->_NP_is_nil() || obj->_NP_is_pseudo() ) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_realNarrow(_PD_repoId);
  return e ? e : _nil();
}


MATHEMATICS_ORB::MATH_Gen_ptr
MATHEMATICS_ORB::MATH_Gen::_unchecked_narrow(::CORBA::Object_ptr obj)
{
  if( !obj || obj->_NP_is_nil() || obj->_NP_is_pseudo() ) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_uncheckedNarrow(_PD_repoId);
  return e ? e : _nil();
}

MATHEMATICS_ORB::MATH_Gen_ptr
MATHEMATICS_ORB::MATH_Gen::_nil()
{
#ifdef OMNI_UNLOADABLE_STUBS
  static _objref_MATH_Gen _the_nil_obj;
  return &_the_nil_obj;
#else
  static _objref_MATH_Gen* _the_nil_ptr = 0;
  if( !_the_nil_ptr ) {
    omni::nilRefLock().lock();
    if( !_the_nil_ptr ) {
      _the_nil_ptr = new _objref_MATH_Gen;
      registerNilCorbaObject(_the_nil_ptr);
    }
    omni::nilRefLock().unlock();
  }
  return _the_nil_ptr;
#endif
}

const char* MATHEMATICS_ORB::MATH_Gen::_PD_repoId = "IDL:MATHEMATICS_ORB/MATH_Gen:1.0";


typedef Engines::EngineComponent Engines_EngineComponent;
typedef Engines::_impl_EngineComponent Engines__impl_EngineComponent;
typedef Engines::_objref_EngineComponent Engines__objref_EngineComponent;

MATHEMATICS_ORB::_objref_MATH_Gen::~_objref_MATH_Gen() {
  
}


MATHEMATICS_ORB::_objref_MATH_Gen::_objref_MATH_Gen(omniIOR* ior, omniIdentity* id) :
   omniObjRef(::MATHEMATICS_ORB::MATH_Gen::_PD_repoId, ior, id, 1),
   Engines__objref_EngineComponent(ior, id)
   
{
  _PR_setobj(this);
}

void*
MATHEMATICS_ORB::_objref_MATH_Gen::_ptrToObjRef(const char* id)
{
  if( id == ::MATHEMATICS_ORB::MATH_Gen::_PD_repoId )
    return (::MATHEMATICS_ORB::MATH_Gen_ptr) this;
  if( id == ::Engines::EngineComponent::_PD_repoId )
    return (::Engines::EngineComponent_ptr) this;


  if( id == ::CORBA::Object::_PD_repoId )
    return (::CORBA::Object_ptr) this;

  if( omni::strMatch(id, ::MATHEMATICS_ORB::MATH_Gen::_PD_repoId) )
    return (::MATHEMATICS_ORB::MATH_Gen_ptr) this;
  if( omni::strMatch(id, ::Engines::EngineComponent::_PD_repoId) )
    return (::Engines::EngineComponent_ptr) this;


  if( omni::strMatch(id, ::CORBA::Object::_PD_repoId) )
    return (::CORBA::Object_ptr) this;

  return 0;
}

// Proxy call descriptor class. Mangled signature:
//  _cdouble_i_cMATHEMATICS__ORB_mdblevec_e_cSALOME_mSALOME__Exception
class _0RL_cd_05cfda589b73d340_00000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_05cfda589b73d340_00000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 1, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  void userException(cdrStream&,_OMNI_NS(IOP_C)*,const char*);
  static const char* const _user_exns[];

  MATHEMATICS_ORB::dblevec_var arg_0_;
  const MATHEMATICS_ORB::dblevec* arg_0;
  ::CORBA::Double result;
};

void _0RL_cd_05cfda589b73d340_00000000::marshalArguments(cdrStream& _n)
{
  (const MATHEMATICS_ORB::dblevec&) *arg_0 >>= _n;

}

void _0RL_cd_05cfda589b73d340_00000000::unmarshalArguments(cdrStream& _n)
{
  arg_0_ = new MATHEMATICS_ORB::dblevec;
  (MATHEMATICS_ORB::dblevec&)arg_0_ <<= _n;
  arg_0 = &arg_0_.in();

}

void _0RL_cd_05cfda589b73d340_00000000::marshalReturnedValues(cdrStream& _n)
{
  result >>= _n;

}

void _0RL_cd_05cfda589b73d340_00000000::unmarshalReturnedValues(cdrStream& _n)
{
  (::CORBA::Double&)result <<= _n;

}

const char* const _0RL_cd_05cfda589b73d340_00000000::_user_exns[] = {
  SALOME::SALOME_Exception::_PD_repoId
};

void _0RL_cd_05cfda589b73d340_00000000::userException(cdrStream& s, _OMNI_NS(IOP_C)* iop_client, const char* repoId)
{
  if ( omni::strMatch(repoId, SALOME::SALOME_Exception::_PD_repoId) ) {
    SALOME::SALOME_Exception _ex;
    _ex <<= s;
    if (iop_client) iop_client->RequestCompleted();
    throw _ex;
  }


  else {
    if (iop_client) iop_client->RequestCompleted(1);
    OMNIORB_THROW(UNKNOWN,UNKNOWN_UserException,
                  (::CORBA::CompletionStatus)s.completion());
  }
}

// Local call call-back function.
static void
_0RL_lcfn_05cfda589b73d340_10000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_05cfda589b73d340_00000000* tcd = (_0RL_cd_05cfda589b73d340_00000000*)cd;
  MATHEMATICS_ORB::_impl_MATH_Gen* impl = (MATHEMATICS_ORB::_impl_MATH_Gen*) svnt->_ptrToInterface(MATHEMATICS_ORB::MATH_Gen::_PD_repoId);
#ifdef HAS_Cplusplus_catch_exception_by_base
  tcd->result = impl->sum(*tcd->arg_0);
#else
  if (!cd->is_upcall())
    tcd->result = impl->sum(*tcd->arg_0);
  else {
    try {
      tcd->result = impl->sum(*tcd->arg_0);
    }
    catch(SALOME::SALOME_Exception& ex) {
      throw omniORB::StubUserException(ex._NP_duplicate());
    }


  }
#endif


}

::CORBA::Double MATHEMATICS_ORB::_objref_MATH_Gen::sum(const ::MATHEMATICS_ORB::dblevec& tab)
{
  _0RL_cd_05cfda589b73d340_00000000 _call_desc(_0RL_lcfn_05cfda589b73d340_10000000, "sum", 4);
  _call_desc.arg_0 = &(::MATHEMATICS_ORB::dblevec&) tab;

  _invoke(_call_desc);
  return _call_desc.result;


}
// Proxy call descriptor class. Mangled signature:
//  _cdouble_i_cdouble_e_cSALOME_mSALOME__Exception
class _0RL_cd_05cfda589b73d340_20000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_05cfda589b73d340_20000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 1, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  void userException(cdrStream&,_OMNI_NS(IOP_C)*,const char*);
  static const char* const _user_exns[];

  ::CORBA::Double arg_0;
  ::CORBA::Double result;
};

void _0RL_cd_05cfda589b73d340_20000000::marshalArguments(cdrStream& _n)
{
  arg_0 >>= _n;

}

void _0RL_cd_05cfda589b73d340_20000000::unmarshalArguments(cdrStream& _n)
{
  (::CORBA::Double&)arg_0 <<= _n;

}

void _0RL_cd_05cfda589b73d340_20000000::marshalReturnedValues(cdrStream& _n)
{
  result >>= _n;

}

void _0RL_cd_05cfda589b73d340_20000000::unmarshalReturnedValues(cdrStream& _n)
{
  (::CORBA::Double&)result <<= _n;

}

const char* const _0RL_cd_05cfda589b73d340_20000000::_user_exns[] = {
  SALOME::SALOME_Exception::_PD_repoId
};

void _0RL_cd_05cfda589b73d340_20000000::userException(cdrStream& s, _OMNI_NS(IOP_C)* iop_client, const char* repoId)
{
  if ( omni::strMatch(repoId, SALOME::SALOME_Exception::_PD_repoId) ) {
    SALOME::SALOME_Exception _ex;
    _ex <<= s;
    if (iop_client) iop_client->RequestCompleted();
    throw _ex;
  }


  else {
    if (iop_client) iop_client->RequestCompleted(1);
    OMNIORB_THROW(UNKNOWN,UNKNOWN_UserException,
                  (::CORBA::CompletionStatus)s.completion());
  }
}

// Local call call-back function.
static void
_0RL_lcfn_05cfda589b73d340_30000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_05cfda589b73d340_20000000* tcd = (_0RL_cd_05cfda589b73d340_20000000*)cd;
  MATHEMATICS_ORB::_impl_MATH_Gen* impl = (MATHEMATICS_ORB::_impl_MATH_Gen*) svnt->_ptrToInterface(MATHEMATICS_ORB::MATH_Gen::_PD_repoId);
#ifdef HAS_Cplusplus_catch_exception_by_base
  tcd->result = impl->squareroot(tcd->arg_0);
#else
  if (!cd->is_upcall())
    tcd->result = impl->squareroot(tcd->arg_0);
  else {
    try {
      tcd->result = impl->squareroot(tcd->arg_0);
    }
    catch(SALOME::SALOME_Exception& ex) {
      throw omniORB::StubUserException(ex._NP_duplicate());
    }


  }
#endif


}

::CORBA::Double MATHEMATICS_ORB::_objref_MATH_Gen::squareroot(::CORBA::Double x)
{
  _0RL_cd_05cfda589b73d340_20000000 _call_desc(_0RL_lcfn_05cfda589b73d340_30000000, "squareroot", 11);
  _call_desc.arg_0 = x;

  _invoke(_call_desc);
  return _call_desc.result;


}
// Proxy call descriptor class. Mangled signature:
//  _cdouble_i_cdouble_i_cdouble_e_cSALOME_mSALOME__Exception
class _0RL_cd_05cfda589b73d340_40000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_05cfda589b73d340_40000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 1, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  void userException(cdrStream&,_OMNI_NS(IOP_C)*,const char*);
  static const char* const _user_exns[];

  ::CORBA::Double arg_0;
  ::CORBA::Double arg_1;
  ::CORBA::Double result;
};

void _0RL_cd_05cfda589b73d340_40000000::marshalArguments(cdrStream& _n)
{
  arg_0 >>= _n;
  arg_1 >>= _n;

}

void _0RL_cd_05cfda589b73d340_40000000::unmarshalArguments(cdrStream& _n)
{
  (::CORBA::Double&)arg_0 <<= _n;
  (::CORBA::Double&)arg_1 <<= _n;

}

void _0RL_cd_05cfda589b73d340_40000000::marshalReturnedValues(cdrStream& _n)
{
  result >>= _n;

}

void _0RL_cd_05cfda589b73d340_40000000::unmarshalReturnedValues(cdrStream& _n)
{
  (::CORBA::Double&)result <<= _n;

}

const char* const _0RL_cd_05cfda589b73d340_40000000::_user_exns[] = {
  SALOME::SALOME_Exception::_PD_repoId
};

void _0RL_cd_05cfda589b73d340_40000000::userException(cdrStream& s, _OMNI_NS(IOP_C)* iop_client, const char* repoId)
{
  if ( omni::strMatch(repoId, SALOME::SALOME_Exception::_PD_repoId) ) {
    SALOME::SALOME_Exception _ex;
    _ex <<= s;
    if (iop_client) iop_client->RequestCompleted();
    throw _ex;
  }


  else {
    if (iop_client) iop_client->RequestCompleted(1);
    OMNIORB_THROW(UNKNOWN,UNKNOWN_UserException,
                  (::CORBA::CompletionStatus)s.completion());
  }
}

// Local call call-back function.
static void
_0RL_lcfn_05cfda589b73d340_50000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_05cfda589b73d340_40000000* tcd = (_0RL_cd_05cfda589b73d340_40000000*)cd;
  MATHEMATICS_ORB::_impl_MATH_Gen* impl = (MATHEMATICS_ORB::_impl_MATH_Gen*) svnt->_ptrToInterface(MATHEMATICS_ORB::MATH_Gen::_PD_repoId);
#ifdef HAS_Cplusplus_catch_exception_by_base
  tcd->result = impl->plus(tcd->arg_0, tcd->arg_1);
#else
  if (!cd->is_upcall())
    tcd->result = impl->plus(tcd->arg_0, tcd->arg_1);
  else {
    try {
      tcd->result = impl->plus(tcd->arg_0, tcd->arg_1);
    }
    catch(SALOME::SALOME_Exception& ex) {
      throw omniORB::StubUserException(ex._NP_duplicate());
    }


  }
#endif


}

::CORBA::Double MATHEMATICS_ORB::_objref_MATH_Gen::plus(::CORBA::Double x, ::CORBA::Double y)
{
  _0RL_cd_05cfda589b73d340_40000000 _call_desc(_0RL_lcfn_05cfda589b73d340_50000000, "plus", 5);
  _call_desc.arg_0 = x;
  _call_desc.arg_1 = y;

  _invoke(_call_desc);
  return _call_desc.result;


}
// Local call call-back function.
static void
_0RL_lcfn_05cfda589b73d340_60000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_05cfda589b73d340_40000000* tcd = (_0RL_cd_05cfda589b73d340_40000000*)cd;
  MATHEMATICS_ORB::_impl_MATH_Gen* impl = (MATHEMATICS_ORB::_impl_MATH_Gen*) svnt->_ptrToInterface(MATHEMATICS_ORB::MATH_Gen::_PD_repoId);
#ifdef HAS_Cplusplus_catch_exception_by_base
  tcd->result = impl->minus(tcd->arg_0, tcd->arg_1);
#else
  if (!cd->is_upcall())
    tcd->result = impl->minus(tcd->arg_0, tcd->arg_1);
  else {
    try {
      tcd->result = impl->minus(tcd->arg_0, tcd->arg_1);
    }
    catch(SALOME::SALOME_Exception& ex) {
      throw omniORB::StubUserException(ex._NP_duplicate());
    }


  }
#endif


}

::CORBA::Double MATHEMATICS_ORB::_objref_MATH_Gen::minus(::CORBA::Double x, ::CORBA::Double y)
{
  _0RL_cd_05cfda589b73d340_40000000 _call_desc(_0RL_lcfn_05cfda589b73d340_60000000, "minus", 6);
  _call_desc.arg_0 = x;
  _call_desc.arg_1 = y;

  _invoke(_call_desc);
  return _call_desc.result;


}
// Local call call-back function.
static void
_0RL_lcfn_05cfda589b73d340_70000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_05cfda589b73d340_40000000* tcd = (_0RL_cd_05cfda589b73d340_40000000*)cd;
  MATHEMATICS_ORB::_impl_MATH_Gen* impl = (MATHEMATICS_ORB::_impl_MATH_Gen*) svnt->_ptrToInterface(MATHEMATICS_ORB::MATH_Gen::_PD_repoId);
#ifdef HAS_Cplusplus_catch_exception_by_base
  tcd->result = impl->times(tcd->arg_0, tcd->arg_1);
#else
  if (!cd->is_upcall())
    tcd->result = impl->times(tcd->arg_0, tcd->arg_1);
  else {
    try {
      tcd->result = impl->times(tcd->arg_0, tcd->arg_1);
    }
    catch(SALOME::SALOME_Exception& ex) {
      throw omniORB::StubUserException(ex._NP_duplicate());
    }


  }
#endif


}

::CORBA::Double MATHEMATICS_ORB::_objref_MATH_Gen::times(::CORBA::Double x, ::CORBA::Double y)
{
  _0RL_cd_05cfda589b73d340_40000000 _call_desc(_0RL_lcfn_05cfda589b73d340_70000000, "times", 6);
  _call_desc.arg_0 = x;
  _call_desc.arg_1 = y;

  _invoke(_call_desc);
  return _call_desc.result;


}
// Local call call-back function.
static void
_0RL_lcfn_05cfda589b73d340_80000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_05cfda589b73d340_20000000* tcd = (_0RL_cd_05cfda589b73d340_20000000*)cd;
  MATHEMATICS_ORB::_impl_MATH_Gen* impl = (MATHEMATICS_ORB::_impl_MATH_Gen*) svnt->_ptrToInterface(MATHEMATICS_ORB::MATH_Gen::_PD_repoId);
#ifdef HAS_Cplusplus_catch_exception_by_base
  tcd->result = impl->sinx(tcd->arg_0);
#else
  if (!cd->is_upcall())
    tcd->result = impl->sinx(tcd->arg_0);
  else {
    try {
      tcd->result = impl->sinx(tcd->arg_0);
    }
    catch(SALOME::SALOME_Exception& ex) {
      throw omniORB::StubUserException(ex._NP_duplicate());
    }


  }
#endif


}

::CORBA::Double MATHEMATICS_ORB::_objref_MATH_Gen::sinx(::CORBA::Double x)
{
  _0RL_cd_05cfda589b73d340_20000000 _call_desc(_0RL_lcfn_05cfda589b73d340_80000000, "sinx", 5);
  _call_desc.arg_0 = x;

  _invoke(_call_desc);
  return _call_desc.result;


}
MATHEMATICS_ORB::_pof_MATH_Gen::~_pof_MATH_Gen() {}


omniObjRef*
MATHEMATICS_ORB::_pof_MATH_Gen::newObjRef(omniIOR* ior, omniIdentity* id)
{
  return new ::MATHEMATICS_ORB::_objref_MATH_Gen(ior, id);
}


::CORBA::Boolean
MATHEMATICS_ORB::_pof_MATH_Gen::is_a(const char* id) const
{
  if( omni::ptrStrMatch(id, ::MATHEMATICS_ORB::MATH_Gen::_PD_repoId) )
    return 1;
  if( omni::ptrStrMatch(id, Engines::EngineComponent::_PD_repoId) )
    return 1;


  return 0;
}

const MATHEMATICS_ORB::_pof_MATH_Gen _the_pof_MATHEMATICS__ORB_mMATH__Gen;

MATHEMATICS_ORB::_impl_MATH_Gen::~_impl_MATH_Gen() {}


::CORBA::Boolean
MATHEMATICS_ORB::_impl_MATH_Gen::_dispatch(omniCallHandle& _handle)
{
  const char* op = _handle.operation_name();

  if( omni::strMatch(op, "sum") ) {

    _0RL_cd_05cfda589b73d340_00000000 _call_desc(_0RL_lcfn_05cfda589b73d340_10000000, "sum", 4, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "squareroot") ) {

    _0RL_cd_05cfda589b73d340_20000000 _call_desc(_0RL_lcfn_05cfda589b73d340_30000000, "squareroot", 11, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "plus") ) {

    _0RL_cd_05cfda589b73d340_40000000 _call_desc(_0RL_lcfn_05cfda589b73d340_50000000, "plus", 5, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "minus") ) {

    _0RL_cd_05cfda589b73d340_40000000 _call_desc(_0RL_lcfn_05cfda589b73d340_60000000, "minus", 6, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "times") ) {

    _0RL_cd_05cfda589b73d340_40000000 _call_desc(_0RL_lcfn_05cfda589b73d340_70000000, "times", 6, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "sinx") ) {

    _0RL_cd_05cfda589b73d340_20000000 _call_desc(_0RL_lcfn_05cfda589b73d340_80000000, "sinx", 5, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  
#ifndef _MSC_VER
  if( Engines__impl_EngineComponent::_dispatch(_handle) ) {
    return 1;
  }
#else
  // Work-around for incorrect MSVC code generation.
  if( ((Engines__impl_EngineComponent*)this)->
      Engines__impl_EngineComponent::_dispatch(_handle) ) {
    return 1;
  }
#endif


  return 0;
}

void*
MATHEMATICS_ORB::_impl_MATH_Gen::_ptrToInterface(const char* id)
{
  if( id == ::MATHEMATICS_ORB::MATH_Gen::_PD_repoId )
    return (::MATHEMATICS_ORB::_impl_MATH_Gen*) this;
  if( id == ::Engines::EngineComponent::_PD_repoId )
    return (::Engines::_impl_EngineComponent*) this;


  if( id == ::CORBA::Object::_PD_repoId )
    return (void*) 1;

  if( omni::strMatch(id, ::MATHEMATICS_ORB::MATH_Gen::_PD_repoId) )
    return (::MATHEMATICS_ORB::_impl_MATH_Gen*) this;
  if( omni::strMatch(id, ::Engines::EngineComponent::_PD_repoId) )
    return (::Engines::_impl_EngineComponent*) this;


  if( omni::strMatch(id, ::CORBA::Object::_PD_repoId) )
    return (void*) 1;
  return 0;
}

const char*
MATHEMATICS_ORB::_impl_MATH_Gen::_mostDerivedRepoId()
{
  return ::MATHEMATICS_ORB::MATH_Gen::_PD_repoId;
}

POA_MATHEMATICS_ORB::MATH_Gen::~MATH_Gen() {}

