# Python stubs generated by omniidl from /dn60/series7x/KERNEL/CentOS63-64/KERNEL_SRC/idl/SALOME_Comm.idl

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA

_omnipy.checkVersion(3,0, __file__)

# #include "SALOME_Exception.idl"
import SALOME_Exception_idl
_0_SALOME = omniORB.openModule("SALOME")
_0_SALOME__POA = omniORB.openModule("SALOME__POA")

#
# Start of module "SALOME"
#
__name__ = "SALOME"
_0_SALOME = omniORB.openModule("SALOME", r"/dn60/series7x/KERNEL/CentOS63-64/KERNEL_SRC/idl/SALOME_Comm.idl")
_0_SALOME__POA = omniORB.openModule("SALOME__POA", r"/dn60/series7x/KERNEL/CentOS63-64/KERNEL_SRC/idl/SALOME_Comm.idl")


# enum TypeOfDataTransmitted
_0_SALOME.DOUBLE_ = omniORB.EnumItem("DOUBLE_", 0)
_0_SALOME.INT_ = omniORB.EnumItem("INT_", 1)
_0_SALOME.TypeOfDataTransmitted = omniORB.Enum("IDL:SALOME/TypeOfDataTransmitted:1.0", (_0_SALOME.DOUBLE_, _0_SALOME.INT_,))

_0_SALOME._d_TypeOfDataTransmitted  = (omniORB.tcInternal.tv_enum, _0_SALOME.TypeOfDataTransmitted._NP_RepositoryId, "TypeOfDataTransmitted", _0_SALOME.TypeOfDataTransmitted._items)
_0_SALOME._tc_TypeOfDataTransmitted = omniORB.tcInternal.createTypeCode(_0_SALOME._d_TypeOfDataTransmitted)
omniORB.registerType(_0_SALOME.TypeOfDataTransmitted._NP_RepositoryId, _0_SALOME._d_TypeOfDataTransmitted, _0_SALOME._tc_TypeOfDataTransmitted)

# enum TypeOfCommunication
_0_SALOME.CORBA_ = omniORB.EnumItem("CORBA_", 0)
_0_SALOME.MPI_ = omniORB.EnumItem("MPI_", 1)
_0_SALOME.SOCKET_ = omniORB.EnumItem("SOCKET_", 2)
_0_SALOME.TypeOfCommunication = omniORB.Enum("IDL:SALOME/TypeOfCommunication:1.0", (_0_SALOME.CORBA_, _0_SALOME.MPI_, _0_SALOME.SOCKET_,))

_0_SALOME._d_TypeOfCommunication  = (omniORB.tcInternal.tv_enum, _0_SALOME.TypeOfCommunication._NP_RepositoryId, "TypeOfCommunication", _0_SALOME.TypeOfCommunication._items)
_0_SALOME._tc_TypeOfCommunication = omniORB.tcInternal.createTypeCode(_0_SALOME._d_TypeOfCommunication)
omniORB.registerType(_0_SALOME.TypeOfCommunication._NP_RepositoryId, _0_SALOME._d_TypeOfCommunication, _0_SALOME._tc_TypeOfCommunication)

# typedef ... vectorOfDouble
class vectorOfDouble:
    _NP_RepositoryId = "IDL:SALOME/vectorOfDouble:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_SALOME.vectorOfDouble = vectorOfDouble
_0_SALOME._d_vectorOfDouble  = (omniORB.tcInternal.tv_sequence, omniORB.tcInternal.tv_double, 0)
_0_SALOME._ad_vectorOfDouble = (omniORB.tcInternal.tv_alias, vectorOfDouble._NP_RepositoryId, "vectorOfDouble", (omniORB.tcInternal.tv_sequence, omniORB.tcInternal.tv_double, 0))
_0_SALOME._tc_vectorOfDouble = omniORB.tcInternal.createTypeCode(_0_SALOME._ad_vectorOfDouble)
omniORB.registerType(vectorOfDouble._NP_RepositoryId, _0_SALOME._ad_vectorOfDouble, _0_SALOME._tc_vectorOfDouble)
del vectorOfDouble

# typedef ... vectorOfLong
class vectorOfLong:
    _NP_RepositoryId = "IDL:SALOME/vectorOfLong:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_SALOME.vectorOfLong = vectorOfLong
_0_SALOME._d_vectorOfLong  = (omniORB.tcInternal.tv_sequence, omniORB.tcInternal.tv_long, 0)
_0_SALOME._ad_vectorOfLong = (omniORB.tcInternal.tv_alias, vectorOfLong._NP_RepositoryId, "vectorOfLong", (omniORB.tcInternal.tv_sequence, omniORB.tcInternal.tv_long, 0))
_0_SALOME._tc_vectorOfLong = omniORB.tcInternal.createTypeCode(_0_SALOME._ad_vectorOfLong)
omniORB.registerType(vectorOfLong._NP_RepositoryId, _0_SALOME._ad_vectorOfLong, _0_SALOME._tc_vectorOfLong)
del vectorOfLong

# interface MultiCommClass
_0_SALOME._d_MultiCommClass = (omniORB.tcInternal.tv_objref, "IDL:SALOME/MultiCommClass:1.0", "MultiCommClass")
omniORB.typeMapping["IDL:SALOME/MultiCommClass:1.0"] = _0_SALOME._d_MultiCommClass
_0_SALOME.MultiCommClass = omniORB.newEmptyClass()
class MultiCommClass :
    _NP_RepositoryId = _0_SALOME._d_MultiCommClass[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_SALOME.MultiCommClass = MultiCommClass
_0_SALOME._tc_MultiCommClass = omniORB.tcInternal.createTypeCode(_0_SALOME._d_MultiCommClass)
omniORB.registerType(MultiCommClass._NP_RepositoryId, _0_SALOME._d_MultiCommClass, _0_SALOME._tc_MultiCommClass)

# MultiCommClass operations and attributes
MultiCommClass._d_setProtocol = ((omniORB.typeMapping["IDL:SALOME/TypeOfCommunication:1.0"], ), (), None)

# MultiCommClass object reference
class _objref_MultiCommClass (CORBA.Object):
    _NP_RepositoryId = MultiCommClass._NP_RepositoryId

    def __init__(self):
        CORBA.Object.__init__(self)

    def setProtocol(self, *args):
        return _omnipy.invoke(self, "setProtocol", _0_SALOME.MultiCommClass._d_setProtocol, args)

    __methods__ = ["setProtocol"] + CORBA.Object.__methods__

omniORB.registerObjref(MultiCommClass._NP_RepositoryId, _objref_MultiCommClass)
_0_SALOME._objref_MultiCommClass = _objref_MultiCommClass
del MultiCommClass, _objref_MultiCommClass

# MultiCommClass skeleton
__name__ = "SALOME__POA"
class MultiCommClass (PortableServer.Servant):
    _NP_RepositoryId = _0_SALOME.MultiCommClass._NP_RepositoryId


    _omni_op_d = {"setProtocol": _0_SALOME.MultiCommClass._d_setProtocol}

MultiCommClass._omni_skeleton = MultiCommClass
_0_SALOME__POA.MultiCommClass = MultiCommClass
omniORB.registerSkeleton(MultiCommClass._NP_RepositoryId, MultiCommClass)
del MultiCommClass
__name__ = "SALOME"

# interface ServantLifeCycle
_0_SALOME._d_ServantLifeCycle = (omniORB.tcInternal.tv_objref, "IDL:SALOME/ServantLifeCycle:1.0", "ServantLifeCycle")
omniORB.typeMapping["IDL:SALOME/ServantLifeCycle:1.0"] = _0_SALOME._d_ServantLifeCycle
_0_SALOME.ServantLifeCycle = omniORB.newEmptyClass()
class ServantLifeCycle :
    _NP_RepositoryId = _0_SALOME._d_ServantLifeCycle[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_SALOME.ServantLifeCycle = ServantLifeCycle
_0_SALOME._tc_ServantLifeCycle = omniORB.tcInternal.createTypeCode(_0_SALOME._d_ServantLifeCycle)
omniORB.registerType(ServantLifeCycle._NP_RepositoryId, _0_SALOME._d_ServantLifeCycle, _0_SALOME._tc_ServantLifeCycle)

# ServantLifeCycle operations and attributes
ServantLifeCycle._d_release = ((), (), None)

# ServantLifeCycle object reference
class _objref_ServantLifeCycle (CORBA.Object):
    _NP_RepositoryId = ServantLifeCycle._NP_RepositoryId

    def __init__(self):
        CORBA.Object.__init__(self)

    def release(self, *args):
        return _omnipy.invoke(self, "release", _0_SALOME.ServantLifeCycle._d_release, args)

    __methods__ = ["release"] + CORBA.Object.__methods__

omniORB.registerObjref(ServantLifeCycle._NP_RepositoryId, _objref_ServantLifeCycle)
_0_SALOME._objref_ServantLifeCycle = _objref_ServantLifeCycle
del ServantLifeCycle, _objref_ServantLifeCycle

# ServantLifeCycle skeleton
__name__ = "SALOME__POA"
class ServantLifeCycle (PortableServer.Servant):
    _NP_RepositoryId = _0_SALOME.ServantLifeCycle._NP_RepositoryId


    _omni_op_d = {"release": _0_SALOME.ServantLifeCycle._d_release}

ServantLifeCycle._omni_skeleton = ServantLifeCycle
_0_SALOME__POA.ServantLifeCycle = ServantLifeCycle
omniORB.registerSkeleton(ServantLifeCycle._NP_RepositoryId, ServantLifeCycle)
del ServantLifeCycle
__name__ = "SALOME"

# interface Sender
_0_SALOME._d_Sender = (omniORB.tcInternal.tv_objref, "IDL:SALOME/Sender:1.0", "Sender")
omniORB.typeMapping["IDL:SALOME/Sender:1.0"] = _0_SALOME._d_Sender
_0_SALOME.Sender = omniORB.newEmptyClass()
class Sender :
    _NP_RepositoryId = _0_SALOME._d_Sender[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_SALOME.Sender = Sender
_0_SALOME._tc_Sender = omniORB.tcInternal.createTypeCode(_0_SALOME._d_Sender)
omniORB.registerType(Sender._NP_RepositoryId, _0_SALOME._d_Sender, _0_SALOME._tc_Sender)

# Sender operations and attributes
Sender._d_getTypeOfDataTransmitted = ((), (omniORB.typeMapping["IDL:SALOME/TypeOfDataTransmitted:1.0"], ), None)
Sender._d_release = ((), (), None)

# Sender object reference
class _objref_Sender (CORBA.Object):
    _NP_RepositoryId = Sender._NP_RepositoryId

    def __init__(self):
        CORBA.Object.__init__(self)

    def getTypeOfDataTransmitted(self, *args):
        return _omnipy.invoke(self, "getTypeOfDataTransmitted", _0_SALOME.Sender._d_getTypeOfDataTransmitted, args)

    def release(self, *args):
        return _omnipy.invoke(self, "release", _0_SALOME.Sender._d_release, args)

    __methods__ = ["getTypeOfDataTransmitted", "release"] + CORBA.Object.__methods__

omniORB.registerObjref(Sender._NP_RepositoryId, _objref_Sender)
_0_SALOME._objref_Sender = _objref_Sender
del Sender, _objref_Sender

# Sender skeleton
__name__ = "SALOME__POA"
class Sender (PortableServer.Servant):
    _NP_RepositoryId = _0_SALOME.Sender._NP_RepositoryId


    _omni_op_d = {"getTypeOfDataTransmitted": _0_SALOME.Sender._d_getTypeOfDataTransmitted, "release": _0_SALOME.Sender._d_release}

Sender._omni_skeleton = Sender
_0_SALOME__POA.Sender = Sender
omniORB.registerSkeleton(Sender._NP_RepositoryId, Sender)
del Sender
__name__ = "SALOME"

# interface SenderDouble
_0_SALOME._d_SenderDouble = (omniORB.tcInternal.tv_objref, "IDL:SALOME/SenderDouble:1.0", "SenderDouble")
omniORB.typeMapping["IDL:SALOME/SenderDouble:1.0"] = _0_SALOME._d_SenderDouble
_0_SALOME.SenderDouble = omniORB.newEmptyClass()
class SenderDouble (_0_SALOME.Sender):
    _NP_RepositoryId = _0_SALOME._d_SenderDouble[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_SALOME.SenderDouble = SenderDouble
_0_SALOME._tc_SenderDouble = omniORB.tcInternal.createTypeCode(_0_SALOME._d_SenderDouble)
omniORB.registerType(SenderDouble._NP_RepositoryId, _0_SALOME._d_SenderDouble, _0_SALOME._tc_SenderDouble)

# SenderDouble operations and attributes
SenderDouble._d_buildOtherWithProtocol = ((omniORB.typeMapping["IDL:SALOME/TypeOfCommunication:1.0"], ), (omniORB.typeMapping["IDL:SALOME/SenderDouble:1.0"], ), None)

# SenderDouble object reference
class _objref_SenderDouble (_0_SALOME._objref_Sender):
    _NP_RepositoryId = SenderDouble._NP_RepositoryId

    def __init__(self):
        _0_SALOME._objref_Sender.__init__(self)

    def buildOtherWithProtocol(self, *args):
        return _omnipy.invoke(self, "buildOtherWithProtocol", _0_SALOME.SenderDouble._d_buildOtherWithProtocol, args)

    __methods__ = ["buildOtherWithProtocol"] + _0_SALOME._objref_Sender.__methods__

omniORB.registerObjref(SenderDouble._NP_RepositoryId, _objref_SenderDouble)
_0_SALOME._objref_SenderDouble = _objref_SenderDouble
del SenderDouble, _objref_SenderDouble

# SenderDouble skeleton
__name__ = "SALOME__POA"
class SenderDouble (_0_SALOME__POA.Sender):
    _NP_RepositoryId = _0_SALOME.SenderDouble._NP_RepositoryId


    _omni_op_d = {"buildOtherWithProtocol": _0_SALOME.SenderDouble._d_buildOtherWithProtocol}
    _omni_op_d.update(_0_SALOME__POA.Sender._omni_op_d)

SenderDouble._omni_skeleton = SenderDouble
_0_SALOME__POA.SenderDouble = SenderDouble
omniORB.registerSkeleton(SenderDouble._NP_RepositoryId, SenderDouble)
del SenderDouble
__name__ = "SALOME"

# interface SenderInt
_0_SALOME._d_SenderInt = (omniORB.tcInternal.tv_objref, "IDL:SALOME/SenderInt:1.0", "SenderInt")
omniORB.typeMapping["IDL:SALOME/SenderInt:1.0"] = _0_SALOME._d_SenderInt
_0_SALOME.SenderInt = omniORB.newEmptyClass()
class SenderInt (_0_SALOME.Sender):
    _NP_RepositoryId = _0_SALOME._d_SenderInt[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_SALOME.SenderInt = SenderInt
_0_SALOME._tc_SenderInt = omniORB.tcInternal.createTypeCode(_0_SALOME._d_SenderInt)
omniORB.registerType(SenderInt._NP_RepositoryId, _0_SALOME._d_SenderInt, _0_SALOME._tc_SenderInt)

# SenderInt operations and attributes
SenderInt._d_buildOtherWithProtocol = ((omniORB.typeMapping["IDL:SALOME/TypeOfCommunication:1.0"], ), (omniORB.typeMapping["IDL:SALOME/SenderInt:1.0"], ), None)

# SenderInt object reference
class _objref_SenderInt (_0_SALOME._objref_Sender):
    _NP_RepositoryId = SenderInt._NP_RepositoryId

    def __init__(self):
        _0_SALOME._objref_Sender.__init__(self)

    def buildOtherWithProtocol(self, *args):
        return _omnipy.invoke(self, "buildOtherWithProtocol", _0_SALOME.SenderInt._d_buildOtherWithProtocol, args)

    __methods__ = ["buildOtherWithProtocol"] + _0_SALOME._objref_Sender.__methods__

omniORB.registerObjref(SenderInt._NP_RepositoryId, _objref_SenderInt)
_0_SALOME._objref_SenderInt = _objref_SenderInt
del SenderInt, _objref_SenderInt

# SenderInt skeleton
__name__ = "SALOME__POA"
class SenderInt (_0_SALOME__POA.Sender):
    _NP_RepositoryId = _0_SALOME.SenderInt._NP_RepositoryId


    _omni_op_d = {"buildOtherWithProtocol": _0_SALOME.SenderInt._d_buildOtherWithProtocol}
    _omni_op_d.update(_0_SALOME__POA.Sender._omni_op_d)

SenderInt._omni_skeleton = SenderInt
_0_SALOME__POA.SenderInt = SenderInt
omniORB.registerSkeleton(SenderInt._NP_RepositoryId, SenderInt)
del SenderInt
__name__ = "SALOME"

# interface CorbaDoubleNCSender
_0_SALOME._d_CorbaDoubleNCSender = (omniORB.tcInternal.tv_objref, "IDL:SALOME/CorbaDoubleNCSender:1.0", "CorbaDoubleNCSender")
omniORB.typeMapping["IDL:SALOME/CorbaDoubleNCSender:1.0"] = _0_SALOME._d_CorbaDoubleNCSender
_0_SALOME.CorbaDoubleNCSender = omniORB.newEmptyClass()
class CorbaDoubleNCSender (_0_SALOME.SenderDouble):
    _NP_RepositoryId = _0_SALOME._d_CorbaDoubleNCSender[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_SALOME.CorbaDoubleNCSender = CorbaDoubleNCSender
_0_SALOME._tc_CorbaDoubleNCSender = omniORB.tcInternal.createTypeCode(_0_SALOME._d_CorbaDoubleNCSender)
omniORB.registerType(CorbaDoubleNCSender._NP_RepositoryId, _0_SALOME._d_CorbaDoubleNCSender, _0_SALOME._tc_CorbaDoubleNCSender)

# CorbaDoubleNCSender operations and attributes
CorbaDoubleNCSender._d_getSize = ((), (omniORB.tcInternal.tv_ulong, ), None)
CorbaDoubleNCSender._d_sendPart = ((omniORB.tcInternal.tv_ulong, omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:SALOME/vectorOfDouble:1.0"], ), None)
CorbaDoubleNCSender._d_send = ((), (omniORB.typeMapping["IDL:SALOME/vectorOfDouble:1.0"], ), None)

# CorbaDoubleNCSender object reference
class _objref_CorbaDoubleNCSender (_0_SALOME._objref_SenderDouble):
    _NP_RepositoryId = CorbaDoubleNCSender._NP_RepositoryId

    def __init__(self):
        _0_SALOME._objref_SenderDouble.__init__(self)

    def getSize(self, *args):
        return _omnipy.invoke(self, "getSize", _0_SALOME.CorbaDoubleNCSender._d_getSize, args)

    def sendPart(self, *args):
        return _omnipy.invoke(self, "sendPart", _0_SALOME.CorbaDoubleNCSender._d_sendPart, args)

    def send(self, *args):
        return _omnipy.invoke(self, "send", _0_SALOME.CorbaDoubleNCSender._d_send, args)

    __methods__ = ["getSize", "sendPart", "send"] + _0_SALOME._objref_SenderDouble.__methods__

omniORB.registerObjref(CorbaDoubleNCSender._NP_RepositoryId, _objref_CorbaDoubleNCSender)
_0_SALOME._objref_CorbaDoubleNCSender = _objref_CorbaDoubleNCSender
del CorbaDoubleNCSender, _objref_CorbaDoubleNCSender

# CorbaDoubleNCSender skeleton
__name__ = "SALOME__POA"
class CorbaDoubleNCSender (_0_SALOME__POA.SenderDouble):
    _NP_RepositoryId = _0_SALOME.CorbaDoubleNCSender._NP_RepositoryId


    _omni_op_d = {"getSize": _0_SALOME.CorbaDoubleNCSender._d_getSize, "sendPart": _0_SALOME.CorbaDoubleNCSender._d_sendPart, "send": _0_SALOME.CorbaDoubleNCSender._d_send}
    _omni_op_d.update(_0_SALOME__POA.SenderDouble._omni_op_d)

CorbaDoubleNCSender._omni_skeleton = CorbaDoubleNCSender
_0_SALOME__POA.CorbaDoubleNCSender = CorbaDoubleNCSender
omniORB.registerSkeleton(CorbaDoubleNCSender._NP_RepositoryId, CorbaDoubleNCSender)
del CorbaDoubleNCSender
__name__ = "SALOME"

# interface CorbaDoubleCSender
_0_SALOME._d_CorbaDoubleCSender = (omniORB.tcInternal.tv_objref, "IDL:SALOME/CorbaDoubleCSender:1.0", "CorbaDoubleCSender")
omniORB.typeMapping["IDL:SALOME/CorbaDoubleCSender:1.0"] = _0_SALOME._d_CorbaDoubleCSender
_0_SALOME.CorbaDoubleCSender = omniORB.newEmptyClass()
class CorbaDoubleCSender (_0_SALOME.SenderDouble):
    _NP_RepositoryId = _0_SALOME._d_CorbaDoubleCSender[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_SALOME.CorbaDoubleCSender = CorbaDoubleCSender
_0_SALOME._tc_CorbaDoubleCSender = omniORB.tcInternal.createTypeCode(_0_SALOME._d_CorbaDoubleCSender)
omniORB.registerType(CorbaDoubleCSender._NP_RepositoryId, _0_SALOME._d_CorbaDoubleCSender, _0_SALOME._tc_CorbaDoubleCSender)

# CorbaDoubleCSender operations and attributes
CorbaDoubleCSender._d_getSize = ((), (omniORB.tcInternal.tv_ulong, ), None)
CorbaDoubleCSender._d_sendPart = ((omniORB.tcInternal.tv_ulong, omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:SALOME/vectorOfDouble:1.0"], ), None)

# CorbaDoubleCSender object reference
class _objref_CorbaDoubleCSender (_0_SALOME._objref_SenderDouble):
    _NP_RepositoryId = CorbaDoubleCSender._NP_RepositoryId

    def __init__(self):
        _0_SALOME._objref_SenderDouble.__init__(self)

    def getSize(self, *args):
        return _omnipy.invoke(self, "getSize", _0_SALOME.CorbaDoubleCSender._d_getSize, args)

    def sendPart(self, *args):
        return _omnipy.invoke(self, "sendPart", _0_SALOME.CorbaDoubleCSender._d_sendPart, args)

    __methods__ = ["getSize", "sendPart"] + _0_SALOME._objref_SenderDouble.__methods__

omniORB.registerObjref(CorbaDoubleCSender._NP_RepositoryId, _objref_CorbaDoubleCSender)
_0_SALOME._objref_CorbaDoubleCSender = _objref_CorbaDoubleCSender
del CorbaDoubleCSender, _objref_CorbaDoubleCSender

# CorbaDoubleCSender skeleton
__name__ = "SALOME__POA"
class CorbaDoubleCSender (_0_SALOME__POA.SenderDouble):
    _NP_RepositoryId = _0_SALOME.CorbaDoubleCSender._NP_RepositoryId


    _omni_op_d = {"getSize": _0_SALOME.CorbaDoubleCSender._d_getSize, "sendPart": _0_SALOME.CorbaDoubleCSender._d_sendPart}
    _omni_op_d.update(_0_SALOME__POA.SenderDouble._omni_op_d)

CorbaDoubleCSender._omni_skeleton = CorbaDoubleCSender
_0_SALOME__POA.CorbaDoubleCSender = CorbaDoubleCSender
omniORB.registerSkeleton(CorbaDoubleCSender._NP_RepositoryId, CorbaDoubleCSender)
del CorbaDoubleCSender
__name__ = "SALOME"

# interface CorbaLongNCSender
_0_SALOME._d_CorbaLongNCSender = (omniORB.tcInternal.tv_objref, "IDL:SALOME/CorbaLongNCSender:1.0", "CorbaLongNCSender")
omniORB.typeMapping["IDL:SALOME/CorbaLongNCSender:1.0"] = _0_SALOME._d_CorbaLongNCSender
_0_SALOME.CorbaLongNCSender = omniORB.newEmptyClass()
class CorbaLongNCSender (_0_SALOME.SenderInt):
    _NP_RepositoryId = _0_SALOME._d_CorbaLongNCSender[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_SALOME.CorbaLongNCSender = CorbaLongNCSender
_0_SALOME._tc_CorbaLongNCSender = omniORB.tcInternal.createTypeCode(_0_SALOME._d_CorbaLongNCSender)
omniORB.registerType(CorbaLongNCSender._NP_RepositoryId, _0_SALOME._d_CorbaLongNCSender, _0_SALOME._tc_CorbaLongNCSender)

# CorbaLongNCSender operations and attributes
CorbaLongNCSender._d_getSize = ((), (omniORB.tcInternal.tv_ulong, ), None)
CorbaLongNCSender._d_sendPart = ((omniORB.tcInternal.tv_ulong, omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:SALOME/vectorOfLong:1.0"], ), None)
CorbaLongNCSender._d_send = ((), (omniORB.typeMapping["IDL:SALOME/vectorOfLong:1.0"], ), None)

# CorbaLongNCSender object reference
class _objref_CorbaLongNCSender (_0_SALOME._objref_SenderInt):
    _NP_RepositoryId = CorbaLongNCSender._NP_RepositoryId

    def __init__(self):
        _0_SALOME._objref_SenderInt.__init__(self)

    def getSize(self, *args):
        return _omnipy.invoke(self, "getSize", _0_SALOME.CorbaLongNCSender._d_getSize, args)

    def sendPart(self, *args):
        return _omnipy.invoke(self, "sendPart", _0_SALOME.CorbaLongNCSender._d_sendPart, args)

    def send(self, *args):
        return _omnipy.invoke(self, "send", _0_SALOME.CorbaLongNCSender._d_send, args)

    __methods__ = ["getSize", "sendPart", "send"] + _0_SALOME._objref_SenderInt.__methods__

omniORB.registerObjref(CorbaLongNCSender._NP_RepositoryId, _objref_CorbaLongNCSender)
_0_SALOME._objref_CorbaLongNCSender = _objref_CorbaLongNCSender
del CorbaLongNCSender, _objref_CorbaLongNCSender

# CorbaLongNCSender skeleton
__name__ = "SALOME__POA"
class CorbaLongNCSender (_0_SALOME__POA.SenderInt):
    _NP_RepositoryId = _0_SALOME.CorbaLongNCSender._NP_RepositoryId


    _omni_op_d = {"getSize": _0_SALOME.CorbaLongNCSender._d_getSize, "sendPart": _0_SALOME.CorbaLongNCSender._d_sendPart, "send": _0_SALOME.CorbaLongNCSender._d_send}
    _omni_op_d.update(_0_SALOME__POA.SenderInt._omni_op_d)

CorbaLongNCSender._omni_skeleton = CorbaLongNCSender
_0_SALOME__POA.CorbaLongNCSender = CorbaLongNCSender
omniORB.registerSkeleton(CorbaLongNCSender._NP_RepositoryId, CorbaLongNCSender)
del CorbaLongNCSender
__name__ = "SALOME"

# interface CorbaLongCSender
_0_SALOME._d_CorbaLongCSender = (omniORB.tcInternal.tv_objref, "IDL:SALOME/CorbaLongCSender:1.0", "CorbaLongCSender")
omniORB.typeMapping["IDL:SALOME/CorbaLongCSender:1.0"] = _0_SALOME._d_CorbaLongCSender
_0_SALOME.CorbaLongCSender = omniORB.newEmptyClass()
class CorbaLongCSender (_0_SALOME.SenderInt):
    _NP_RepositoryId = _0_SALOME._d_CorbaLongCSender[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_SALOME.CorbaLongCSender = CorbaLongCSender
_0_SALOME._tc_CorbaLongCSender = omniORB.tcInternal.createTypeCode(_0_SALOME._d_CorbaLongCSender)
omniORB.registerType(CorbaLongCSender._NP_RepositoryId, _0_SALOME._d_CorbaLongCSender, _0_SALOME._tc_CorbaLongCSender)

# CorbaLongCSender operations and attributes
CorbaLongCSender._d_getSize = ((), (omniORB.tcInternal.tv_ulong, ), None)
CorbaLongCSender._d_sendPart = ((omniORB.tcInternal.tv_ulong, omniORB.tcInternal.tv_ulong), (omniORB.typeMapping["IDL:SALOME/vectorOfLong:1.0"], ), None)

# CorbaLongCSender object reference
class _objref_CorbaLongCSender (_0_SALOME._objref_SenderInt):
    _NP_RepositoryId = CorbaLongCSender._NP_RepositoryId

    def __init__(self):
        _0_SALOME._objref_SenderInt.__init__(self)

    def getSize(self, *args):
        return _omnipy.invoke(self, "getSize", _0_SALOME.CorbaLongCSender._d_getSize, args)

    def sendPart(self, *args):
        return _omnipy.invoke(self, "sendPart", _0_SALOME.CorbaLongCSender._d_sendPart, args)

    __methods__ = ["getSize", "sendPart"] + _0_SALOME._objref_SenderInt.__methods__

omniORB.registerObjref(CorbaLongCSender._NP_RepositoryId, _objref_CorbaLongCSender)
_0_SALOME._objref_CorbaLongCSender = _objref_CorbaLongCSender
del CorbaLongCSender, _objref_CorbaLongCSender

# CorbaLongCSender skeleton
__name__ = "SALOME__POA"
class CorbaLongCSender (_0_SALOME__POA.SenderInt):
    _NP_RepositoryId = _0_SALOME.CorbaLongCSender._NP_RepositoryId


    _omni_op_d = {"getSize": _0_SALOME.CorbaLongCSender._d_getSize, "sendPart": _0_SALOME.CorbaLongCSender._d_sendPart}
    _omni_op_d.update(_0_SALOME__POA.SenderInt._omni_op_d)

CorbaLongCSender._omni_skeleton = CorbaLongCSender
_0_SALOME__POA.CorbaLongCSender = CorbaLongCSender
omniORB.registerSkeleton(CorbaLongCSender._NP_RepositoryId, CorbaLongCSender)
del CorbaLongCSender
__name__ = "SALOME"

# interface MPISender
_0_SALOME._d_MPISender = (omniORB.tcInternal.tv_objref, "IDL:SALOME/MPISender:1.0", "MPISender")
omniORB.typeMapping["IDL:SALOME/MPISender:1.0"] = _0_SALOME._d_MPISender
_0_SALOME.MPISender = omniORB.newEmptyClass()
class MPISender (_0_SALOME.Sender):
    _NP_RepositoryId = _0_SALOME._d_MPISender[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil

    
    # struct Parameter
    _0_SALOME.MPISender.Parameter = omniORB.newEmptyClass()
    class Parameter (omniORB.StructBase):
        _NP_RepositoryId = "IDL:SALOME/MPISender/Parameter:1.0"

        _NP_ClassName = "SALOME.MPISender.Parameter"

        def __init__(self, myproc, tag1, tag2, service):
            self.myproc = myproc
            self.tag1 = tag1
            self.tag2 = tag2
            self.service = service
    
    _d_Parameter  = _0_SALOME.MPISender._d_Parameter = (omniORB.tcInternal.tv_struct, Parameter, Parameter._NP_RepositoryId, "Parameter", "myproc", omniORB.tcInternal.tv_ulong, "tag1", omniORB.tcInternal.tv_ulong, "tag2", omniORB.tcInternal.tv_ulong, "service", (omniORB.tcInternal.tv_string,0))
    _tc_Parameter = omniORB.tcInternal.createTypeCode(_d_Parameter)
    omniORB.registerType(Parameter._NP_RepositoryId, _d_Parameter, _tc_Parameter)
    
    # typedef ... param
    class param (Parameter):
        _NP_RepositoryId = "IDL:SALOME/MPISender/param:1.0"

    _d_param  = omniORB.typeMapping["IDL:SALOME/MPISender/Parameter:1.0"]
    _ad_param = (omniORB.tcInternal.tv_alias, param._NP_RepositoryId, "param", omniORB.typeMapping["IDL:SALOME/MPISender/Parameter:1.0"])
    _tc_param = omniORB.tcInternal.createTypeCode(_ad_param)
    omniORB.registerType(param._NP_RepositoryId, _ad_param, _tc_param)


_0_SALOME.MPISender = MPISender
_0_SALOME._tc_MPISender = omniORB.tcInternal.createTypeCode(_0_SALOME._d_MPISender)
omniORB.registerType(MPISender._NP_RepositoryId, _0_SALOME._d_MPISender, _0_SALOME._tc_MPISender)

# MPISender operations and attributes
MPISender._d_getParam = ((), (omniORB.typeMapping["IDL:SALOME/MPISender/param:1.0"], ), None)
MPISender._d_send = ((), (), None)
MPISender._d_close = ((omniORB.typeMapping["IDL:SALOME/MPISender/param:1.0"], ), (), None)

# MPISender object reference
class _objref_MPISender (_0_SALOME._objref_Sender):
    _NP_RepositoryId = MPISender._NP_RepositoryId

    def __init__(self):
        _0_SALOME._objref_Sender.__init__(self)

    def getParam(self, *args):
        return _omnipy.invoke(self, "getParam", _0_SALOME.MPISender._d_getParam, args)

    def send(self, *args):
        return _omnipy.invoke(self, "send", _0_SALOME.MPISender._d_send, args)

    def close(self, *args):
        return _omnipy.invoke(self, "close", _0_SALOME.MPISender._d_close, args)

    __methods__ = ["getParam", "send", "close"] + _0_SALOME._objref_Sender.__methods__

omniORB.registerObjref(MPISender._NP_RepositoryId, _objref_MPISender)
_0_SALOME._objref_MPISender = _objref_MPISender
del MPISender, _objref_MPISender

# MPISender skeleton
__name__ = "SALOME__POA"
class MPISender (_0_SALOME__POA.Sender):
    _NP_RepositoryId = _0_SALOME.MPISender._NP_RepositoryId


    _omni_op_d = {"getParam": _0_SALOME.MPISender._d_getParam, "send": _0_SALOME.MPISender._d_send, "close": _0_SALOME.MPISender._d_close}
    _omni_op_d.update(_0_SALOME__POA.Sender._omni_op_d)

MPISender._omni_skeleton = MPISender
_0_SALOME__POA.MPISender = MPISender
omniORB.registerSkeleton(MPISender._NP_RepositoryId, MPISender)
del MPISender
__name__ = "SALOME"

# interface MPISenderDouble
_0_SALOME._d_MPISenderDouble = (omniORB.tcInternal.tv_objref, "IDL:SALOME/MPISenderDouble:1.0", "MPISenderDouble")
omniORB.typeMapping["IDL:SALOME/MPISenderDouble:1.0"] = _0_SALOME._d_MPISenderDouble
_0_SALOME.MPISenderDouble = omniORB.newEmptyClass()
class MPISenderDouble (_0_SALOME.SenderDouble, _0_SALOME.MPISender):
    _NP_RepositoryId = _0_SALOME._d_MPISenderDouble[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_SALOME.MPISenderDouble = MPISenderDouble
_0_SALOME._tc_MPISenderDouble = omniORB.tcInternal.createTypeCode(_0_SALOME._d_MPISenderDouble)
omniORB.registerType(MPISenderDouble._NP_RepositoryId, _0_SALOME._d_MPISenderDouble, _0_SALOME._tc_MPISenderDouble)

# MPISenderDouble object reference
class _objref_MPISenderDouble (_0_SALOME._objref_SenderDouble, _0_SALOME._objref_MPISender):
    _NP_RepositoryId = MPISenderDouble._NP_RepositoryId

    def __init__(self):
        _0_SALOME._objref_SenderDouble.__init__(self)
        _0_SALOME._objref_MPISender.__init__(self)

    __methods__ = [] + _0_SALOME._objref_SenderDouble.__methods__ + _0_SALOME._objref_MPISender.__methods__

omniORB.registerObjref(MPISenderDouble._NP_RepositoryId, _objref_MPISenderDouble)
_0_SALOME._objref_MPISenderDouble = _objref_MPISenderDouble
del MPISenderDouble, _objref_MPISenderDouble

# MPISenderDouble skeleton
__name__ = "SALOME__POA"
class MPISenderDouble (_0_SALOME__POA.SenderDouble, _0_SALOME__POA.MPISender):
    _NP_RepositoryId = _0_SALOME.MPISenderDouble._NP_RepositoryId


    _omni_op_d = {}
    _omni_op_d.update(_0_SALOME__POA.SenderDouble._omni_op_d)
    _omni_op_d.update(_0_SALOME__POA.MPISender._omni_op_d)

MPISenderDouble._omni_skeleton = MPISenderDouble
_0_SALOME__POA.MPISenderDouble = MPISenderDouble
omniORB.registerSkeleton(MPISenderDouble._NP_RepositoryId, MPISenderDouble)
del MPISenderDouble
__name__ = "SALOME"

# interface MPISenderInt
_0_SALOME._d_MPISenderInt = (omniORB.tcInternal.tv_objref, "IDL:SALOME/MPISenderInt:1.0", "MPISenderInt")
omniORB.typeMapping["IDL:SALOME/MPISenderInt:1.0"] = _0_SALOME._d_MPISenderInt
_0_SALOME.MPISenderInt = omniORB.newEmptyClass()
class MPISenderInt (_0_SALOME.SenderInt, _0_SALOME.MPISender):
    _NP_RepositoryId = _0_SALOME._d_MPISenderInt[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_SALOME.MPISenderInt = MPISenderInt
_0_SALOME._tc_MPISenderInt = omniORB.tcInternal.createTypeCode(_0_SALOME._d_MPISenderInt)
omniORB.registerType(MPISenderInt._NP_RepositoryId, _0_SALOME._d_MPISenderInt, _0_SALOME._tc_MPISenderInt)

# MPISenderInt object reference
class _objref_MPISenderInt (_0_SALOME._objref_SenderInt, _0_SALOME._objref_MPISender):
    _NP_RepositoryId = MPISenderInt._NP_RepositoryId

    def __init__(self):
        _0_SALOME._objref_SenderInt.__init__(self)
        _0_SALOME._objref_MPISender.__init__(self)

    __methods__ = [] + _0_SALOME._objref_SenderInt.__methods__ + _0_SALOME._objref_MPISender.__methods__

omniORB.registerObjref(MPISenderInt._NP_RepositoryId, _objref_MPISenderInt)
_0_SALOME._objref_MPISenderInt = _objref_MPISenderInt
del MPISenderInt, _objref_MPISenderInt

# MPISenderInt skeleton
__name__ = "SALOME__POA"
class MPISenderInt (_0_SALOME__POA.SenderInt, _0_SALOME__POA.MPISender):
    _NP_RepositoryId = _0_SALOME.MPISenderInt._NP_RepositoryId


    _omni_op_d = {}
    _omni_op_d.update(_0_SALOME__POA.SenderInt._omni_op_d)
    _omni_op_d.update(_0_SALOME__POA.MPISender._omni_op_d)

MPISenderInt._omni_skeleton = MPISenderInt
_0_SALOME__POA.MPISenderInt = MPISenderInt
omniORB.registerSkeleton(MPISenderInt._NP_RepositoryId, MPISenderInt)
del MPISenderInt
__name__ = "SALOME"

# interface SocketSender
_0_SALOME._d_SocketSender = (omniORB.tcInternal.tv_objref, "IDL:SALOME/SocketSender:1.0", "SocketSender")
omniORB.typeMapping["IDL:SALOME/SocketSender:1.0"] = _0_SALOME._d_SocketSender
_0_SALOME.SocketSender = omniORB.newEmptyClass()
class SocketSender (_0_SALOME.Sender):
    _NP_RepositoryId = _0_SALOME._d_SocketSender[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil

    
    # struct Parameter
    _0_SALOME.SocketSender.Parameter = omniORB.newEmptyClass()
    class Parameter (omniORB.StructBase):
        _NP_RepositoryId = "IDL:SALOME/SocketSender/Parameter:1.0"

        _NP_ClassName = "SALOME.SocketSender.Parameter"

        def __init__(self, lstart, lend, myport, internet_address):
            self.lstart = lstart
            self.lend = lend
            self.myport = myport
            self.internet_address = internet_address
    
    _d_Parameter  = _0_SALOME.SocketSender._d_Parameter = (omniORB.tcInternal.tv_struct, Parameter, Parameter._NP_RepositoryId, "Parameter", "lstart", omniORB.tcInternal.tv_ulong, "lend", omniORB.tcInternal.tv_ulong, "myport", omniORB.tcInternal.tv_ulong, "internet_address", (omniORB.tcInternal.tv_string,0))
    _tc_Parameter = omniORB.tcInternal.createTypeCode(_d_Parameter)
    omniORB.registerType(Parameter._NP_RepositoryId, _d_Parameter, _tc_Parameter)
    
    # typedef ... param
    class param (Parameter):
        _NP_RepositoryId = "IDL:SALOME/SocketSender/param:1.0"

    _d_param  = omniORB.typeMapping["IDL:SALOME/SocketSender/Parameter:1.0"]
    _ad_param = (omniORB.tcInternal.tv_alias, param._NP_RepositoryId, "param", omniORB.typeMapping["IDL:SALOME/SocketSender/Parameter:1.0"])
    _tc_param = omniORB.tcInternal.createTypeCode(_ad_param)
    omniORB.registerType(param._NP_RepositoryId, _ad_param, _tc_param)


_0_SALOME.SocketSender = SocketSender
_0_SALOME._tc_SocketSender = omniORB.tcInternal.createTypeCode(_0_SALOME._d_SocketSender)
omniORB.registerType(SocketSender._NP_RepositoryId, _0_SALOME._d_SocketSender, _0_SALOME._tc_SocketSender)

# SocketSender operations and attributes
SocketSender._d_getParam = ((), (omniORB.typeMapping["IDL:SALOME/SocketSender/param:1.0"], ), None)
SocketSender._d_initCom = ((), (), {_0_SALOME.SALOME_Exception._NP_RepositoryId: _0_SALOME._d_SALOME_Exception})
SocketSender._d_acceptCom = ((), (), {_0_SALOME.SALOME_Exception._NP_RepositoryId: _0_SALOME._d_SALOME_Exception})
SocketSender._d_closeCom = ((), (), None)
SocketSender._d_endOfCom = ((), (), {_0_SALOME.SALOME_Exception._NP_RepositoryId: _0_SALOME._d_SALOME_Exception})
SocketSender._d_send = ((), (), None)

# SocketSender object reference
class _objref_SocketSender (_0_SALOME._objref_Sender):
    _NP_RepositoryId = SocketSender._NP_RepositoryId

    def __init__(self):
        _0_SALOME._objref_Sender.__init__(self)

    def getParam(self, *args):
        return _omnipy.invoke(self, "getParam", _0_SALOME.SocketSender._d_getParam, args)

    def initCom(self, *args):
        return _omnipy.invoke(self, "initCom", _0_SALOME.SocketSender._d_initCom, args)

    def acceptCom(self, *args):
        return _omnipy.invoke(self, "acceptCom", _0_SALOME.SocketSender._d_acceptCom, args)

    def closeCom(self, *args):
        return _omnipy.invoke(self, "closeCom", _0_SALOME.SocketSender._d_closeCom, args)

    def endOfCom(self, *args):
        return _omnipy.invoke(self, "endOfCom", _0_SALOME.SocketSender._d_endOfCom, args)

    def send(self, *args):
        return _omnipy.invoke(self, "send", _0_SALOME.SocketSender._d_send, args)

    __methods__ = ["getParam", "initCom", "acceptCom", "closeCom", "endOfCom", "send"] + _0_SALOME._objref_Sender.__methods__

omniORB.registerObjref(SocketSender._NP_RepositoryId, _objref_SocketSender)
_0_SALOME._objref_SocketSender = _objref_SocketSender
del SocketSender, _objref_SocketSender

# SocketSender skeleton
__name__ = "SALOME__POA"
class SocketSender (_0_SALOME__POA.Sender):
    _NP_RepositoryId = _0_SALOME.SocketSender._NP_RepositoryId


    _omni_op_d = {"getParam": _0_SALOME.SocketSender._d_getParam, "initCom": _0_SALOME.SocketSender._d_initCom, "acceptCom": _0_SALOME.SocketSender._d_acceptCom, "closeCom": _0_SALOME.SocketSender._d_closeCom, "endOfCom": _0_SALOME.SocketSender._d_endOfCom, "send": _0_SALOME.SocketSender._d_send}
    _omni_op_d.update(_0_SALOME__POA.Sender._omni_op_d)

SocketSender._omni_skeleton = SocketSender
_0_SALOME__POA.SocketSender = SocketSender
omniORB.registerSkeleton(SocketSender._NP_RepositoryId, SocketSender)
del SocketSender
__name__ = "SALOME"

# interface SocketSenderDouble
_0_SALOME._d_SocketSenderDouble = (omniORB.tcInternal.tv_objref, "IDL:SALOME/SocketSenderDouble:1.0", "SocketSenderDouble")
omniORB.typeMapping["IDL:SALOME/SocketSenderDouble:1.0"] = _0_SALOME._d_SocketSenderDouble
_0_SALOME.SocketSenderDouble = omniORB.newEmptyClass()
class SocketSenderDouble (_0_SALOME.SenderDouble, _0_SALOME.SocketSender):
    _NP_RepositoryId = _0_SALOME._d_SocketSenderDouble[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_SALOME.SocketSenderDouble = SocketSenderDouble
_0_SALOME._tc_SocketSenderDouble = omniORB.tcInternal.createTypeCode(_0_SALOME._d_SocketSenderDouble)
omniORB.registerType(SocketSenderDouble._NP_RepositoryId, _0_SALOME._d_SocketSenderDouble, _0_SALOME._tc_SocketSenderDouble)

# SocketSenderDouble object reference
class _objref_SocketSenderDouble (_0_SALOME._objref_SenderDouble, _0_SALOME._objref_SocketSender):
    _NP_RepositoryId = SocketSenderDouble._NP_RepositoryId

    def __init__(self):
        _0_SALOME._objref_SenderDouble.__init__(self)
        _0_SALOME._objref_SocketSender.__init__(self)

    __methods__ = [] + _0_SALOME._objref_SenderDouble.__methods__ + _0_SALOME._objref_SocketSender.__methods__

omniORB.registerObjref(SocketSenderDouble._NP_RepositoryId, _objref_SocketSenderDouble)
_0_SALOME._objref_SocketSenderDouble = _objref_SocketSenderDouble
del SocketSenderDouble, _objref_SocketSenderDouble

# SocketSenderDouble skeleton
__name__ = "SALOME__POA"
class SocketSenderDouble (_0_SALOME__POA.SenderDouble, _0_SALOME__POA.SocketSender):
    _NP_RepositoryId = _0_SALOME.SocketSenderDouble._NP_RepositoryId


    _omni_op_d = {}
    _omni_op_d.update(_0_SALOME__POA.SenderDouble._omni_op_d)
    _omni_op_d.update(_0_SALOME__POA.SocketSender._omni_op_d)

SocketSenderDouble._omni_skeleton = SocketSenderDouble
_0_SALOME__POA.SocketSenderDouble = SocketSenderDouble
omniORB.registerSkeleton(SocketSenderDouble._NP_RepositoryId, SocketSenderDouble)
del SocketSenderDouble
__name__ = "SALOME"

# interface SocketSenderInt
_0_SALOME._d_SocketSenderInt = (omniORB.tcInternal.tv_objref, "IDL:SALOME/SocketSenderInt:1.0", "SocketSenderInt")
omniORB.typeMapping["IDL:SALOME/SocketSenderInt:1.0"] = _0_SALOME._d_SocketSenderInt
_0_SALOME.SocketSenderInt = omniORB.newEmptyClass()
class SocketSenderInt (_0_SALOME.SenderInt, _0_SALOME.SocketSender):
    _NP_RepositoryId = _0_SALOME._d_SocketSenderInt[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_SALOME.SocketSenderInt = SocketSenderInt
_0_SALOME._tc_SocketSenderInt = omniORB.tcInternal.createTypeCode(_0_SALOME._d_SocketSenderInt)
omniORB.registerType(SocketSenderInt._NP_RepositoryId, _0_SALOME._d_SocketSenderInt, _0_SALOME._tc_SocketSenderInt)

# SocketSenderInt object reference
class _objref_SocketSenderInt (_0_SALOME._objref_SenderInt, _0_SALOME._objref_SocketSender):
    _NP_RepositoryId = SocketSenderInt._NP_RepositoryId

    def __init__(self):
        _0_SALOME._objref_SenderInt.__init__(self)
        _0_SALOME._objref_SocketSender.__init__(self)

    __methods__ = [] + _0_SALOME._objref_SenderInt.__methods__ + _0_SALOME._objref_SocketSender.__methods__

omniORB.registerObjref(SocketSenderInt._NP_RepositoryId, _objref_SocketSenderInt)
_0_SALOME._objref_SocketSenderInt = _objref_SocketSenderInt
del SocketSenderInt, _objref_SocketSenderInt

# SocketSenderInt skeleton
__name__ = "SALOME__POA"
class SocketSenderInt (_0_SALOME__POA.SenderInt, _0_SALOME__POA.SocketSender):
    _NP_RepositoryId = _0_SALOME.SocketSenderInt._NP_RepositoryId


    _omni_op_d = {}
    _omni_op_d.update(_0_SALOME__POA.SenderInt._omni_op_d)
    _omni_op_d.update(_0_SALOME__POA.SocketSender._omni_op_d)

SocketSenderInt._omni_skeleton = SocketSenderInt
_0_SALOME__POA.SocketSenderInt = SocketSenderInt
omniORB.registerSkeleton(SocketSenderInt._NP_RepositoryId, SocketSenderInt)
del SocketSenderInt
__name__ = "SALOME"

# interface Matrix
_0_SALOME._d_Matrix = (omniORB.tcInternal.tv_objref, "IDL:SALOME/Matrix:1.0", "Matrix")
omniORB.typeMapping["IDL:SALOME/Matrix:1.0"] = _0_SALOME._d_Matrix
_0_SALOME.Matrix = omniORB.newEmptyClass()
class Matrix :
    _NP_RepositoryId = _0_SALOME._d_Matrix[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_SALOME.Matrix = Matrix
_0_SALOME._tc_Matrix = omniORB.tcInternal.createTypeCode(_0_SALOME._d_Matrix)
omniORB.registerType(Matrix._NP_RepositoryId, _0_SALOME._d_Matrix, _0_SALOME._tc_Matrix)

# Matrix operations and attributes
Matrix._d_getData = ((), (omniORB.typeMapping["IDL:SALOME/SenderDouble:1.0"], ), None)
Matrix._d_getSizeOfColumn = ((), (omniORB.tcInternal.tv_long, ), None)
Matrix._d_release = ((), (), None)

# Matrix object reference
class _objref_Matrix (CORBA.Object):
    _NP_RepositoryId = Matrix._NP_RepositoryId

    def __init__(self):
        CORBA.Object.__init__(self)

    def getData(self, *args):
        return _omnipy.invoke(self, "getData", _0_SALOME.Matrix._d_getData, args)

    def getSizeOfColumn(self, *args):
        return _omnipy.invoke(self, "getSizeOfColumn", _0_SALOME.Matrix._d_getSizeOfColumn, args)

    def release(self, *args):
        return _omnipy.invoke(self, "release", _0_SALOME.Matrix._d_release, args)

    __methods__ = ["getData", "getSizeOfColumn", "release"] + CORBA.Object.__methods__

omniORB.registerObjref(Matrix._NP_RepositoryId, _objref_Matrix)
_0_SALOME._objref_Matrix = _objref_Matrix
del Matrix, _objref_Matrix

# Matrix skeleton
__name__ = "SALOME__POA"
class Matrix (PortableServer.Servant):
    _NP_RepositoryId = _0_SALOME.Matrix._NP_RepositoryId


    _omni_op_d = {"getData": _0_SALOME.Matrix._d_getData, "getSizeOfColumn": _0_SALOME.Matrix._d_getSizeOfColumn, "release": _0_SALOME.Matrix._d_release}

Matrix._omni_skeleton = Matrix
_0_SALOME__POA.Matrix = Matrix
omniORB.registerSkeleton(Matrix._NP_RepositoryId, Matrix)
del Matrix
__name__ = "SALOME"

#
# End of module "SALOME"
#
__name__ = "SALOME_Comm_idl"

_exported_modules = ( "SALOME", )

# The end.
