# Python stubs generated by omniidl from /dn60/series7x/KERNEL/CentOS63-64/KERNEL_SRC/idl/SALOMEDS_Attributes.idl

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA

_omnipy.checkVersion(3,0, __file__)

# #include "SALOME_Exception.idl"
import SALOME_Exception_idl
_0_SALOME = omniORB.openModule("SALOME")
_0_SALOME__POA = omniORB.openModule("SALOME__POA")
# #include "SALOME_GenericObj.idl"
import SALOME_GenericObj_idl
_0_SALOME = omniORB.openModule("SALOME")
_0_SALOME__POA = omniORB.openModule("SALOME__POA")
# #include "SALOMEDS.idl"
import SALOMEDS_idl
_0_SALOMEDS = omniORB.openModule("SALOMEDS")
_0_SALOMEDS__POA = omniORB.openModule("SALOMEDS__POA")

#
# Start of module "SALOMEDS"
#
__name__ = "SALOMEDS"
_0_SALOMEDS = omniORB.openModule("SALOMEDS", r"/dn60/series7x/KERNEL/CentOS63-64/KERNEL_SRC/idl/SALOMEDS_Attributes.idl")
_0_SALOMEDS__POA = omniORB.openModule("SALOMEDS__POA", r"/dn60/series7x/KERNEL/CentOS63-64/KERNEL_SRC/idl/SALOMEDS_Attributes.idl")


# typedef ... DoubleSeq
class DoubleSeq:
    _NP_RepositoryId = "IDL:SALOMEDS/DoubleSeq:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_SALOMEDS.DoubleSeq = DoubleSeq
_0_SALOMEDS._d_DoubleSeq  = (omniORB.tcInternal.tv_sequence, omniORB.tcInternal.tv_double, 0)
_0_SALOMEDS._ad_DoubleSeq = (omniORB.tcInternal.tv_alias, DoubleSeq._NP_RepositoryId, "DoubleSeq", (omniORB.tcInternal.tv_sequence, omniORB.tcInternal.tv_double, 0))
_0_SALOMEDS._tc_DoubleSeq = omniORB.tcInternal.createTypeCode(_0_SALOMEDS._ad_DoubleSeq)
omniORB.registerType(DoubleSeq._NP_RepositoryId, _0_SALOMEDS._ad_DoubleSeq, _0_SALOMEDS._tc_DoubleSeq)
del DoubleSeq

# typedef ... LongSeq
class LongSeq:
    _NP_RepositoryId = "IDL:SALOMEDS/LongSeq:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_SALOMEDS.LongSeq = LongSeq
_0_SALOMEDS._d_LongSeq  = (omniORB.tcInternal.tv_sequence, omniORB.tcInternal.tv_long, 0)
_0_SALOMEDS._ad_LongSeq = (omniORB.tcInternal.tv_alias, LongSeq._NP_RepositoryId, "LongSeq", (omniORB.tcInternal.tv_sequence, omniORB.tcInternal.tv_long, 0))
_0_SALOMEDS._tc_LongSeq = omniORB.tcInternal.createTypeCode(_0_SALOMEDS._ad_LongSeq)
omniORB.registerType(LongSeq._NP_RepositoryId, _0_SALOMEDS._ad_LongSeq, _0_SALOMEDS._tc_LongSeq)
del LongSeq

# typedef ... StringSeq
class StringSeq:
    _NP_RepositoryId = "IDL:SALOMEDS/StringSeq:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_SALOMEDS.StringSeq = StringSeq
_0_SALOMEDS._d_StringSeq  = (omniORB.tcInternal.tv_sequence, (omniORB.tcInternal.tv_string,0), 0)
_0_SALOMEDS._ad_StringSeq = (omniORB.tcInternal.tv_alias, StringSeq._NP_RepositoryId, "StringSeq", (omniORB.tcInternal.tv_sequence, (omniORB.tcInternal.tv_string,0), 0))
_0_SALOMEDS._tc_StringSeq = omniORB.tcInternal.createTypeCode(_0_SALOMEDS._ad_StringSeq)
omniORB.registerType(StringSeq._NP_RepositoryId, _0_SALOMEDS._ad_StringSeq, _0_SALOMEDS._tc_StringSeq)
del StringSeq

# struct Color
_0_SALOMEDS.Color = omniORB.newEmptyClass()
class Color (omniORB.StructBase):
    _NP_RepositoryId = "IDL:SALOMEDS/Color:1.0"

    def __init__(self, R, G, B):
        self.R = R
        self.G = G
        self.B = B

_0_SALOMEDS.Color = Color
_0_SALOMEDS._d_Color  = (omniORB.tcInternal.tv_struct, Color, Color._NP_RepositoryId, "Color", "R", omniORB.tcInternal.tv_double, "G", omniORB.tcInternal.tv_double, "B", omniORB.tcInternal.tv_double)
_0_SALOMEDS._tc_Color = omniORB.tcInternal.createTypeCode(_0_SALOMEDS._d_Color)
omniORB.registerType(Color._NP_RepositoryId, _0_SALOMEDS._d_Color, _0_SALOMEDS._tc_Color)
del Color

# interface AttributeReal
_0_SALOMEDS._d_AttributeReal = (omniORB.tcInternal.tv_objref, "IDL:SALOMEDS/AttributeReal:1.0", "AttributeReal")
omniORB.typeMapping["IDL:SALOMEDS/AttributeReal:1.0"] = _0_SALOMEDS._d_AttributeReal
_0_SALOMEDS.AttributeReal = omniORB.newEmptyClass()
class AttributeReal (_0_SALOMEDS.GenericAttribute):
    _NP_RepositoryId = _0_SALOMEDS._d_AttributeReal[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_SALOMEDS.AttributeReal = AttributeReal
_0_SALOMEDS._tc_AttributeReal = omniORB.tcInternal.createTypeCode(_0_SALOMEDS._d_AttributeReal)
omniORB.registerType(AttributeReal._NP_RepositoryId, _0_SALOMEDS._d_AttributeReal, _0_SALOMEDS._tc_AttributeReal)

# AttributeReal operations and attributes
AttributeReal._d_Value = ((), (omniORB.tcInternal.tv_double, ), None)
AttributeReal._d_SetValue = ((omniORB.tcInternal.tv_double, ), (), None)

# AttributeReal object reference
class _objref_AttributeReal (_0_SALOMEDS._objref_GenericAttribute):
    _NP_RepositoryId = AttributeReal._NP_RepositoryId

    def __init__(self):
        _0_SALOMEDS._objref_GenericAttribute.__init__(self)

    def Value(self, *args):
        return _omnipy.invoke(self, "Value", _0_SALOMEDS.AttributeReal._d_Value, args)

    def SetValue(self, *args):
        return _omnipy.invoke(self, "SetValue", _0_SALOMEDS.AttributeReal._d_SetValue, args)

    __methods__ = ["Value", "SetValue"] + _0_SALOMEDS._objref_GenericAttribute.__methods__

omniORB.registerObjref(AttributeReal._NP_RepositoryId, _objref_AttributeReal)
_0_SALOMEDS._objref_AttributeReal = _objref_AttributeReal
del AttributeReal, _objref_AttributeReal

# AttributeReal skeleton
__name__ = "SALOMEDS__POA"
class AttributeReal (_0_SALOMEDS__POA.GenericAttribute):
    _NP_RepositoryId = _0_SALOMEDS.AttributeReal._NP_RepositoryId


    _omni_op_d = {"Value": _0_SALOMEDS.AttributeReal._d_Value, "SetValue": _0_SALOMEDS.AttributeReal._d_SetValue}
    _omni_op_d.update(_0_SALOMEDS__POA.GenericAttribute._omni_op_d)

AttributeReal._omni_skeleton = AttributeReal
_0_SALOMEDS__POA.AttributeReal = AttributeReal
omniORB.registerSkeleton(AttributeReal._NP_RepositoryId, AttributeReal)
del AttributeReal
__name__ = "SALOMEDS"

# interface AttributeInteger
_0_SALOMEDS._d_AttributeInteger = (omniORB.tcInternal.tv_objref, "IDL:SALOMEDS/AttributeInteger:1.0", "AttributeInteger")
omniORB.typeMapping["IDL:SALOMEDS/AttributeInteger:1.0"] = _0_SALOMEDS._d_AttributeInteger
_0_SALOMEDS.AttributeInteger = omniORB.newEmptyClass()
class AttributeInteger (_0_SALOMEDS.GenericAttribute):
    _NP_RepositoryId = _0_SALOMEDS._d_AttributeInteger[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_SALOMEDS.AttributeInteger = AttributeInteger
_0_SALOMEDS._tc_AttributeInteger = omniORB.tcInternal.createTypeCode(_0_SALOMEDS._d_AttributeInteger)
omniORB.registerType(AttributeInteger._NP_RepositoryId, _0_SALOMEDS._d_AttributeInteger, _0_SALOMEDS._tc_AttributeInteger)

# AttributeInteger operations and attributes
AttributeInteger._d_Value = ((), (omniORB.tcInternal.tv_long, ), None)
AttributeInteger._d_SetValue = ((omniORB.tcInternal.tv_long, ), (), None)

# AttributeInteger object reference
class _objref_AttributeInteger (_0_SALOMEDS._objref_GenericAttribute):
    _NP_RepositoryId = AttributeInteger._NP_RepositoryId

    def __init__(self):
        _0_SALOMEDS._objref_GenericAttribute.__init__(self)

    def Value(self, *args):
        return _omnipy.invoke(self, "Value", _0_SALOMEDS.AttributeInteger._d_Value, args)

    def SetValue(self, *args):
        return _omnipy.invoke(self, "SetValue", _0_SALOMEDS.AttributeInteger._d_SetValue, args)

    __methods__ = ["Value", "SetValue"] + _0_SALOMEDS._objref_GenericAttribute.__methods__

omniORB.registerObjref(AttributeInteger._NP_RepositoryId, _objref_AttributeInteger)
_0_SALOMEDS._objref_AttributeInteger = _objref_AttributeInteger
del AttributeInteger, _objref_AttributeInteger

# AttributeInteger skeleton
__name__ = "SALOMEDS__POA"
class AttributeInteger (_0_SALOMEDS__POA.GenericAttribute):
    _NP_RepositoryId = _0_SALOMEDS.AttributeInteger._NP_RepositoryId


    _omni_op_d = {"Value": _0_SALOMEDS.AttributeInteger._d_Value, "SetValue": _0_SALOMEDS.AttributeInteger._d_SetValue}
    _omni_op_d.update(_0_SALOMEDS__POA.GenericAttribute._omni_op_d)

AttributeInteger._omni_skeleton = AttributeInteger
_0_SALOMEDS__POA.AttributeInteger = AttributeInteger
omniORB.registerSkeleton(AttributeInteger._NP_RepositoryId, AttributeInteger)
del AttributeInteger
__name__ = "SALOMEDS"

# interface AttributeSequenceOfReal
_0_SALOMEDS._d_AttributeSequenceOfReal = (omniORB.tcInternal.tv_objref, "IDL:SALOMEDS/AttributeSequenceOfReal:1.0", "AttributeSequenceOfReal")
omniORB.typeMapping["IDL:SALOMEDS/AttributeSequenceOfReal:1.0"] = _0_SALOMEDS._d_AttributeSequenceOfReal
_0_SALOMEDS.AttributeSequenceOfReal = omniORB.newEmptyClass()
class AttributeSequenceOfReal (_0_SALOMEDS.GenericAttribute):
    _NP_RepositoryId = _0_SALOMEDS._d_AttributeSequenceOfReal[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_SALOMEDS.AttributeSequenceOfReal = AttributeSequenceOfReal
_0_SALOMEDS._tc_AttributeSequenceOfReal = omniORB.tcInternal.createTypeCode(_0_SALOMEDS._d_AttributeSequenceOfReal)
omniORB.registerType(AttributeSequenceOfReal._NP_RepositoryId, _0_SALOMEDS._d_AttributeSequenceOfReal, _0_SALOMEDS._tc_AttributeSequenceOfReal)

# AttributeSequenceOfReal operations and attributes
AttributeSequenceOfReal._d_Assign = ((omniORB.typeMapping["IDL:SALOMEDS/DoubleSeq:1.0"], ), (), None)
AttributeSequenceOfReal._d_CorbaSequence = ((), (omniORB.typeMapping["IDL:SALOMEDS/DoubleSeq:1.0"], ), None)
AttributeSequenceOfReal._d_Add = ((omniORB.tcInternal.tv_double, ), (), None)
AttributeSequenceOfReal._d_Remove = ((omniORB.tcInternal.tv_long, ), (), None)
AttributeSequenceOfReal._d_ChangeValue = ((omniORB.tcInternal.tv_long, omniORB.tcInternal.tv_double), (), None)
AttributeSequenceOfReal._d_Value = ((omniORB.tcInternal.tv_short, ), (omniORB.tcInternal.tv_double, ), None)
AttributeSequenceOfReal._d_Length = ((), (omniORB.tcInternal.tv_long, ), None)

# AttributeSequenceOfReal object reference
class _objref_AttributeSequenceOfReal (_0_SALOMEDS._objref_GenericAttribute):
    _NP_RepositoryId = AttributeSequenceOfReal._NP_RepositoryId

    def __init__(self):
        _0_SALOMEDS._objref_GenericAttribute.__init__(self)

    def Assign(self, *args):
        return _omnipy.invoke(self, "Assign", _0_SALOMEDS.AttributeSequenceOfReal._d_Assign, args)

    def CorbaSequence(self, *args):
        return _omnipy.invoke(self, "CorbaSequence", _0_SALOMEDS.AttributeSequenceOfReal._d_CorbaSequence, args)

    def Add(self, *args):
        return _omnipy.invoke(self, "Add", _0_SALOMEDS.AttributeSequenceOfReal._d_Add, args)

    def Remove(self, *args):
        return _omnipy.invoke(self, "Remove", _0_SALOMEDS.AttributeSequenceOfReal._d_Remove, args)

    def ChangeValue(self, *args):
        return _omnipy.invoke(self, "ChangeValue", _0_SALOMEDS.AttributeSequenceOfReal._d_ChangeValue, args)

    def Value(self, *args):
        return _omnipy.invoke(self, "Value", _0_SALOMEDS.AttributeSequenceOfReal._d_Value, args)

    def Length(self, *args):
        return _omnipy.invoke(self, "Length", _0_SALOMEDS.AttributeSequenceOfReal._d_Length, args)

    __methods__ = ["Assign", "CorbaSequence", "Add", "Remove", "ChangeValue", "Value", "Length"] + _0_SALOMEDS._objref_GenericAttribute.__methods__

omniORB.registerObjref(AttributeSequenceOfReal._NP_RepositoryId, _objref_AttributeSequenceOfReal)
_0_SALOMEDS._objref_AttributeSequenceOfReal = _objref_AttributeSequenceOfReal
del AttributeSequenceOfReal, _objref_AttributeSequenceOfReal

# AttributeSequenceOfReal skeleton
__name__ = "SALOMEDS__POA"
class AttributeSequenceOfReal (_0_SALOMEDS__POA.GenericAttribute):
    _NP_RepositoryId = _0_SALOMEDS.AttributeSequenceOfReal._NP_RepositoryId


    _omni_op_d = {"Assign": _0_SALOMEDS.AttributeSequenceOfReal._d_Assign, "CorbaSequence": _0_SALOMEDS.AttributeSequenceOfReal._d_CorbaSequence, "Add": _0_SALOMEDS.AttributeSequenceOfReal._d_Add, "Remove": _0_SALOMEDS.AttributeSequenceOfReal._d_Remove, "ChangeValue": _0_SALOMEDS.AttributeSequenceOfReal._d_ChangeValue, "Value": _0_SALOMEDS.AttributeSequenceOfReal._d_Value, "Length": _0_SALOMEDS.AttributeSequenceOfReal._d_Length}
    _omni_op_d.update(_0_SALOMEDS__POA.GenericAttribute._omni_op_d)

AttributeSequenceOfReal._omni_skeleton = AttributeSequenceOfReal
_0_SALOMEDS__POA.AttributeSequenceOfReal = AttributeSequenceOfReal
omniORB.registerSkeleton(AttributeSequenceOfReal._NP_RepositoryId, AttributeSequenceOfReal)
del AttributeSequenceOfReal
__name__ = "SALOMEDS"

# interface AttributeSequenceOfInteger
_0_SALOMEDS._d_AttributeSequenceOfInteger = (omniORB.tcInternal.tv_objref, "IDL:SALOMEDS/AttributeSequenceOfInteger:1.0", "AttributeSequenceOfInteger")
omniORB.typeMapping["IDL:SALOMEDS/AttributeSequenceOfInteger:1.0"] = _0_SALOMEDS._d_AttributeSequenceOfInteger
_0_SALOMEDS.AttributeSequenceOfInteger = omniORB.newEmptyClass()
class AttributeSequenceOfInteger (_0_SALOMEDS.GenericAttribute):
    _NP_RepositoryId = _0_SALOMEDS._d_AttributeSequenceOfInteger[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_SALOMEDS.AttributeSequenceOfInteger = AttributeSequenceOfInteger
_0_SALOMEDS._tc_AttributeSequenceOfInteger = omniORB.tcInternal.createTypeCode(_0_SALOMEDS._d_AttributeSequenceOfInteger)
omniORB.registerType(AttributeSequenceOfInteger._NP_RepositoryId, _0_SALOMEDS._d_AttributeSequenceOfInteger, _0_SALOMEDS._tc_AttributeSequenceOfInteger)

# AttributeSequenceOfInteger operations and attributes
AttributeSequenceOfInteger._d_Assign = ((omniORB.typeMapping["IDL:SALOMEDS/LongSeq:1.0"], ), (), None)
AttributeSequenceOfInteger._d_CorbaSequence = ((), (omniORB.typeMapping["IDL:SALOMEDS/LongSeq:1.0"], ), None)
AttributeSequenceOfInteger._d_Add = ((omniORB.tcInternal.tv_long, ), (), None)
AttributeSequenceOfInteger._d_Remove = ((omniORB.tcInternal.tv_long, ), (), None)
AttributeSequenceOfInteger._d_ChangeValue = ((omniORB.tcInternal.tv_long, omniORB.tcInternal.tv_long), (), None)
AttributeSequenceOfInteger._d_Value = ((omniORB.tcInternal.tv_short, ), (omniORB.tcInternal.tv_long, ), None)
AttributeSequenceOfInteger._d_Length = ((), (omniORB.tcInternal.tv_long, ), None)

# AttributeSequenceOfInteger object reference
class _objref_AttributeSequenceOfInteger (_0_SALOMEDS._objref_GenericAttribute):
    _NP_RepositoryId = AttributeSequenceOfInteger._NP_RepositoryId

    def __init__(self):
        _0_SALOMEDS._objref_GenericAttribute.__init__(self)

    def Assign(self, *args):
        return _omnipy.invoke(self, "Assign", _0_SALOMEDS.AttributeSequenceOfInteger._d_Assign, args)

    def CorbaSequence(self, *args):
        return _omnipy.invoke(self, "CorbaSequence", _0_SALOMEDS.AttributeSequenceOfInteger._d_CorbaSequence, args)

    def Add(self, *args):
        return _omnipy.invoke(self, "Add", _0_SALOMEDS.AttributeSequenceOfInteger._d_Add, args)

    def Remove(self, *args):
        return _omnipy.invoke(self, "Remove", _0_SALOMEDS.AttributeSequenceOfInteger._d_Remove, args)

    def ChangeValue(self, *args):
        return _omnipy.invoke(self, "ChangeValue", _0_SALOMEDS.AttributeSequenceOfInteger._d_ChangeValue, args)

    def Value(self, *args):
        return _omnipy.invoke(self, "Value", _0_SALOMEDS.AttributeSequenceOfInteger._d_Value, args)

    def Length(self, *args):
        return _omnipy.invoke(self, "Length", _0_SALOMEDS.AttributeSequenceOfInteger._d_Length, args)

    __methods__ = ["Assign", "CorbaSequence", "Add", "Remove", "ChangeValue", "Value", "Length"] + _0_SALOMEDS._objref_GenericAttribute.__methods__

omniORB.registerObjref(AttributeSequenceOfInteger._NP_RepositoryId, _objref_AttributeSequenceOfInteger)
_0_SALOMEDS._objref_AttributeSequenceOfInteger = _objref_AttributeSequenceOfInteger
del AttributeSequenceOfInteger, _objref_AttributeSequenceOfInteger

# AttributeSequenceOfInteger skeleton
__name__ = "SALOMEDS__POA"
class AttributeSequenceOfInteger (_0_SALOMEDS__POA.GenericAttribute):
    _NP_RepositoryId = _0_SALOMEDS.AttributeSequenceOfInteger._NP_RepositoryId


    _omni_op_d = {"Assign": _0_SALOMEDS.AttributeSequenceOfInteger._d_Assign, "CorbaSequence": _0_SALOMEDS.AttributeSequenceOfInteger._d_CorbaSequence, "Add": _0_SALOMEDS.AttributeSequenceOfInteger._d_Add, "Remove": _0_SALOMEDS.AttributeSequenceOfInteger._d_Remove, "ChangeValue": _0_SALOMEDS.AttributeSequenceOfInteger._d_ChangeValue, "Value": _0_SALOMEDS.AttributeSequenceOfInteger._d_Value, "Length": _0_SALOMEDS.AttributeSequenceOfInteger._d_Length}
    _omni_op_d.update(_0_SALOMEDS__POA.GenericAttribute._omni_op_d)

AttributeSequenceOfInteger._omni_skeleton = AttributeSequenceOfInteger
_0_SALOMEDS__POA.AttributeSequenceOfInteger = AttributeSequenceOfInteger
omniORB.registerSkeleton(AttributeSequenceOfInteger._NP_RepositoryId, AttributeSequenceOfInteger)
del AttributeSequenceOfInteger
__name__ = "SALOMEDS"

# interface AttributeName
_0_SALOMEDS._d_AttributeName = (omniORB.tcInternal.tv_objref, "IDL:SALOMEDS/AttributeName:1.0", "AttributeName")
omniORB.typeMapping["IDL:SALOMEDS/AttributeName:1.0"] = _0_SALOMEDS._d_AttributeName
_0_SALOMEDS.AttributeName = omniORB.newEmptyClass()
class AttributeName (_0_SALOMEDS.GenericAttribute):
    _NP_RepositoryId = _0_SALOMEDS._d_AttributeName[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_SALOMEDS.AttributeName = AttributeName
_0_SALOMEDS._tc_AttributeName = omniORB.tcInternal.createTypeCode(_0_SALOMEDS._d_AttributeName)
omniORB.registerType(AttributeName._NP_RepositoryId, _0_SALOMEDS._d_AttributeName, _0_SALOMEDS._tc_AttributeName)

# AttributeName operations and attributes
AttributeName._d_Value = ((), ((omniORB.tcInternal.tv_string,0), ), None)
AttributeName._d_SetValue = (((omniORB.tcInternal.tv_string,0), ), (), None)

# AttributeName object reference
class _objref_AttributeName (_0_SALOMEDS._objref_GenericAttribute):
    _NP_RepositoryId = AttributeName._NP_RepositoryId

    def __init__(self):
        _0_SALOMEDS._objref_GenericAttribute.__init__(self)

    def Value(self, *args):
        return _omnipy.invoke(self, "Value", _0_SALOMEDS.AttributeName._d_Value, args)

    def SetValue(self, *args):
        return _omnipy.invoke(self, "SetValue", _0_SALOMEDS.AttributeName._d_SetValue, args)

    __methods__ = ["Value", "SetValue"] + _0_SALOMEDS._objref_GenericAttribute.__methods__

omniORB.registerObjref(AttributeName._NP_RepositoryId, _objref_AttributeName)
_0_SALOMEDS._objref_AttributeName = _objref_AttributeName
del AttributeName, _objref_AttributeName

# AttributeName skeleton
__name__ = "SALOMEDS__POA"
class AttributeName (_0_SALOMEDS__POA.GenericAttribute):
    _NP_RepositoryId = _0_SALOMEDS.AttributeName._NP_RepositoryId


    _omni_op_d = {"Value": _0_SALOMEDS.AttributeName._d_Value, "SetValue": _0_SALOMEDS.AttributeName._d_SetValue}
    _omni_op_d.update(_0_SALOMEDS__POA.GenericAttribute._omni_op_d)

AttributeName._omni_skeleton = AttributeName
_0_SALOMEDS__POA.AttributeName = AttributeName
omniORB.registerSkeleton(AttributeName._NP_RepositoryId, AttributeName)
del AttributeName
__name__ = "SALOMEDS"

# interface AttributeComment
_0_SALOMEDS._d_AttributeComment = (omniORB.tcInternal.tv_objref, "IDL:SALOMEDS/AttributeComment:1.0", "AttributeComment")
omniORB.typeMapping["IDL:SALOMEDS/AttributeComment:1.0"] = _0_SALOMEDS._d_AttributeComment
_0_SALOMEDS.AttributeComment = omniORB.newEmptyClass()
class AttributeComment (_0_SALOMEDS.GenericAttribute):
    _NP_RepositoryId = _0_SALOMEDS._d_AttributeComment[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_SALOMEDS.AttributeComment = AttributeComment
_0_SALOMEDS._tc_AttributeComment = omniORB.tcInternal.createTypeCode(_0_SALOMEDS._d_AttributeComment)
omniORB.registerType(AttributeComment._NP_RepositoryId, _0_SALOMEDS._d_AttributeComment, _0_SALOMEDS._tc_AttributeComment)

# AttributeComment operations and attributes
AttributeComment._d_Value = ((), ((omniORB.tcInternal.tv_string,0), ), None)
AttributeComment._d_SetValue = (((omniORB.tcInternal.tv_string,0), ), (), None)

# AttributeComment object reference
class _objref_AttributeComment (_0_SALOMEDS._objref_GenericAttribute):
    _NP_RepositoryId = AttributeComment._NP_RepositoryId

    def __init__(self):
        _0_SALOMEDS._objref_GenericAttribute.__init__(self)

    def Value(self, *args):
        return _omnipy.invoke(self, "Value", _0_SALOMEDS.AttributeComment._d_Value, args)

    def SetValue(self, *args):
        return _omnipy.invoke(self, "SetValue", _0_SALOMEDS.AttributeComment._d_SetValue, args)

    __methods__ = ["Value", "SetValue"] + _0_SALOMEDS._objref_GenericAttribute.__methods__

omniORB.registerObjref(AttributeComment._NP_RepositoryId, _objref_AttributeComment)
_0_SALOMEDS._objref_AttributeComment = _objref_AttributeComment
del AttributeComment, _objref_AttributeComment

# AttributeComment skeleton
__name__ = "SALOMEDS__POA"
class AttributeComment (_0_SALOMEDS__POA.GenericAttribute):
    _NP_RepositoryId = _0_SALOMEDS.AttributeComment._NP_RepositoryId


    _omni_op_d = {"Value": _0_SALOMEDS.AttributeComment._d_Value, "SetValue": _0_SALOMEDS.AttributeComment._d_SetValue}
    _omni_op_d.update(_0_SALOMEDS__POA.GenericAttribute._omni_op_d)

AttributeComment._omni_skeleton = AttributeComment
_0_SALOMEDS__POA.AttributeComment = AttributeComment
omniORB.registerSkeleton(AttributeComment._NP_RepositoryId, AttributeComment)
del AttributeComment
__name__ = "SALOMEDS"

# interface AttributeString
_0_SALOMEDS._d_AttributeString = (omniORB.tcInternal.tv_objref, "IDL:SALOMEDS/AttributeString:1.0", "AttributeString")
omniORB.typeMapping["IDL:SALOMEDS/AttributeString:1.0"] = _0_SALOMEDS._d_AttributeString
_0_SALOMEDS.AttributeString = omniORB.newEmptyClass()
class AttributeString (_0_SALOMEDS.GenericAttribute):
    _NP_RepositoryId = _0_SALOMEDS._d_AttributeString[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_SALOMEDS.AttributeString = AttributeString
_0_SALOMEDS._tc_AttributeString = omniORB.tcInternal.createTypeCode(_0_SALOMEDS._d_AttributeString)
omniORB.registerType(AttributeString._NP_RepositoryId, _0_SALOMEDS._d_AttributeString, _0_SALOMEDS._tc_AttributeString)

# AttributeString operations and attributes
AttributeString._d_Value = ((), ((omniORB.tcInternal.tv_string,0), ), None)
AttributeString._d_SetValue = (((omniORB.tcInternal.tv_string,0), ), (), None)

# AttributeString object reference
class _objref_AttributeString (_0_SALOMEDS._objref_GenericAttribute):
    _NP_RepositoryId = AttributeString._NP_RepositoryId

    def __init__(self):
        _0_SALOMEDS._objref_GenericAttribute.__init__(self)

    def Value(self, *args):
        return _omnipy.invoke(self, "Value", _0_SALOMEDS.AttributeString._d_Value, args)

    def SetValue(self, *args):
        return _omnipy.invoke(self, "SetValue", _0_SALOMEDS.AttributeString._d_SetValue, args)

    __methods__ = ["Value", "SetValue"] + _0_SALOMEDS._objref_GenericAttribute.__methods__

omniORB.registerObjref(AttributeString._NP_RepositoryId, _objref_AttributeString)
_0_SALOMEDS._objref_AttributeString = _objref_AttributeString
del AttributeString, _objref_AttributeString

# AttributeString skeleton
__name__ = "SALOMEDS__POA"
class AttributeString (_0_SALOMEDS__POA.GenericAttribute):
    _NP_RepositoryId = _0_SALOMEDS.AttributeString._NP_RepositoryId


    _omni_op_d = {"Value": _0_SALOMEDS.AttributeString._d_Value, "SetValue": _0_SALOMEDS.AttributeString._d_SetValue}
    _omni_op_d.update(_0_SALOMEDS__POA.GenericAttribute._omni_op_d)

AttributeString._omni_skeleton = AttributeString
_0_SALOMEDS__POA.AttributeString = AttributeString
omniORB.registerSkeleton(AttributeString._NP_RepositoryId, AttributeString)
del AttributeString
__name__ = "SALOMEDS"

# interface AttributeIOR
_0_SALOMEDS._d_AttributeIOR = (omniORB.tcInternal.tv_objref, "IDL:SALOMEDS/AttributeIOR:1.0", "AttributeIOR")
omniORB.typeMapping["IDL:SALOMEDS/AttributeIOR:1.0"] = _0_SALOMEDS._d_AttributeIOR
_0_SALOMEDS.AttributeIOR = omniORB.newEmptyClass()
class AttributeIOR (_0_SALOMEDS.GenericAttribute):
    _NP_RepositoryId = _0_SALOMEDS._d_AttributeIOR[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_SALOMEDS.AttributeIOR = AttributeIOR
_0_SALOMEDS._tc_AttributeIOR = omniORB.tcInternal.createTypeCode(_0_SALOMEDS._d_AttributeIOR)
omniORB.registerType(AttributeIOR._NP_RepositoryId, _0_SALOMEDS._d_AttributeIOR, _0_SALOMEDS._tc_AttributeIOR)

# AttributeIOR operations and attributes
AttributeIOR._d_Value = ((), ((omniORB.tcInternal.tv_string,0), ), None)
AttributeIOR._d_SetValue = (((omniORB.tcInternal.tv_string,0), ), (), None)

# AttributeIOR object reference
class _objref_AttributeIOR (_0_SALOMEDS._objref_GenericAttribute):
    _NP_RepositoryId = AttributeIOR._NP_RepositoryId

    def __init__(self):
        _0_SALOMEDS._objref_GenericAttribute.__init__(self)

    def Value(self, *args):
        return _omnipy.invoke(self, "Value", _0_SALOMEDS.AttributeIOR._d_Value, args)

    def SetValue(self, *args):
        return _omnipy.invoke(self, "SetValue", _0_SALOMEDS.AttributeIOR._d_SetValue, args)

    __methods__ = ["Value", "SetValue"] + _0_SALOMEDS._objref_GenericAttribute.__methods__

omniORB.registerObjref(AttributeIOR._NP_RepositoryId, _objref_AttributeIOR)
_0_SALOMEDS._objref_AttributeIOR = _objref_AttributeIOR
del AttributeIOR, _objref_AttributeIOR

# AttributeIOR skeleton
__name__ = "SALOMEDS__POA"
class AttributeIOR (_0_SALOMEDS__POA.GenericAttribute):
    _NP_RepositoryId = _0_SALOMEDS.AttributeIOR._NP_RepositoryId


    _omni_op_d = {"Value": _0_SALOMEDS.AttributeIOR._d_Value, "SetValue": _0_SALOMEDS.AttributeIOR._d_SetValue}
    _omni_op_d.update(_0_SALOMEDS__POA.GenericAttribute._omni_op_d)

AttributeIOR._omni_skeleton = AttributeIOR
_0_SALOMEDS__POA.AttributeIOR = AttributeIOR
omniORB.registerSkeleton(AttributeIOR._NP_RepositoryId, AttributeIOR)
del AttributeIOR
__name__ = "SALOMEDS"

# interface AttributePersistentRef
_0_SALOMEDS._d_AttributePersistentRef = (omniORB.tcInternal.tv_objref, "IDL:SALOMEDS/AttributePersistentRef:1.0", "AttributePersistentRef")
omniORB.typeMapping["IDL:SALOMEDS/AttributePersistentRef:1.0"] = _0_SALOMEDS._d_AttributePersistentRef
_0_SALOMEDS.AttributePersistentRef = omniORB.newEmptyClass()
class AttributePersistentRef (_0_SALOMEDS.GenericAttribute):
    _NP_RepositoryId = _0_SALOMEDS._d_AttributePersistentRef[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_SALOMEDS.AttributePersistentRef = AttributePersistentRef
_0_SALOMEDS._tc_AttributePersistentRef = omniORB.tcInternal.createTypeCode(_0_SALOMEDS._d_AttributePersistentRef)
omniORB.registerType(AttributePersistentRef._NP_RepositoryId, _0_SALOMEDS._d_AttributePersistentRef, _0_SALOMEDS._tc_AttributePersistentRef)

# AttributePersistentRef operations and attributes
AttributePersistentRef._d_Value = ((), ((omniORB.tcInternal.tv_string,0), ), None)
AttributePersistentRef._d_SetValue = (((omniORB.tcInternal.tv_string,0), ), (), None)

# AttributePersistentRef object reference
class _objref_AttributePersistentRef (_0_SALOMEDS._objref_GenericAttribute):
    _NP_RepositoryId = AttributePersistentRef._NP_RepositoryId

    def __init__(self):
        _0_SALOMEDS._objref_GenericAttribute.__init__(self)

    def Value(self, *args):
        return _omnipy.invoke(self, "Value", _0_SALOMEDS.AttributePersistentRef._d_Value, args)

    def SetValue(self, *args):
        return _omnipy.invoke(self, "SetValue", _0_SALOMEDS.AttributePersistentRef._d_SetValue, args)

    __methods__ = ["Value", "SetValue"] + _0_SALOMEDS._objref_GenericAttribute.__methods__

omniORB.registerObjref(AttributePersistentRef._NP_RepositoryId, _objref_AttributePersistentRef)
_0_SALOMEDS._objref_AttributePersistentRef = _objref_AttributePersistentRef
del AttributePersistentRef, _objref_AttributePersistentRef

# AttributePersistentRef skeleton
__name__ = "SALOMEDS__POA"
class AttributePersistentRef (_0_SALOMEDS__POA.GenericAttribute):
    _NP_RepositoryId = _0_SALOMEDS.AttributePersistentRef._NP_RepositoryId


    _omni_op_d = {"Value": _0_SALOMEDS.AttributePersistentRef._d_Value, "SetValue": _0_SALOMEDS.AttributePersistentRef._d_SetValue}
    _omni_op_d.update(_0_SALOMEDS__POA.GenericAttribute._omni_op_d)

AttributePersistentRef._omni_skeleton = AttributePersistentRef
_0_SALOMEDS__POA.AttributePersistentRef = AttributePersistentRef
omniORB.registerSkeleton(AttributePersistentRef._NP_RepositoryId, AttributePersistentRef)
del AttributePersistentRef
__name__ = "SALOMEDS"

# interface AttributeExternalFileDef
_0_SALOMEDS._d_AttributeExternalFileDef = (omniORB.tcInternal.tv_objref, "IDL:SALOMEDS/AttributeExternalFileDef:1.0", "AttributeExternalFileDef")
omniORB.typeMapping["IDL:SALOMEDS/AttributeExternalFileDef:1.0"] = _0_SALOMEDS._d_AttributeExternalFileDef
_0_SALOMEDS.AttributeExternalFileDef = omniORB.newEmptyClass()
class AttributeExternalFileDef (_0_SALOMEDS.GenericAttribute):
    _NP_RepositoryId = _0_SALOMEDS._d_AttributeExternalFileDef[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_SALOMEDS.AttributeExternalFileDef = AttributeExternalFileDef
_0_SALOMEDS._tc_AttributeExternalFileDef = omniORB.tcInternal.createTypeCode(_0_SALOMEDS._d_AttributeExternalFileDef)
omniORB.registerType(AttributeExternalFileDef._NP_RepositoryId, _0_SALOMEDS._d_AttributeExternalFileDef, _0_SALOMEDS._tc_AttributeExternalFileDef)

# AttributeExternalFileDef operations and attributes
AttributeExternalFileDef._d_Value = ((), ((omniORB.tcInternal.tv_string,0), ), None)
AttributeExternalFileDef._d_SetValue = (((omniORB.tcInternal.tv_string,0), ), (), None)

# AttributeExternalFileDef object reference
class _objref_AttributeExternalFileDef (_0_SALOMEDS._objref_GenericAttribute):
    _NP_RepositoryId = AttributeExternalFileDef._NP_RepositoryId

    def __init__(self):
        _0_SALOMEDS._objref_GenericAttribute.__init__(self)

    def Value(self, *args):
        return _omnipy.invoke(self, "Value", _0_SALOMEDS.AttributeExternalFileDef._d_Value, args)

    def SetValue(self, *args):
        return _omnipy.invoke(self, "SetValue", _0_SALOMEDS.AttributeExternalFileDef._d_SetValue, args)

    __methods__ = ["Value", "SetValue"] + _0_SALOMEDS._objref_GenericAttribute.__methods__

omniORB.registerObjref(AttributeExternalFileDef._NP_RepositoryId, _objref_AttributeExternalFileDef)
_0_SALOMEDS._objref_AttributeExternalFileDef = _objref_AttributeExternalFileDef
del AttributeExternalFileDef, _objref_AttributeExternalFileDef

# AttributeExternalFileDef skeleton
__name__ = "SALOMEDS__POA"
class AttributeExternalFileDef (_0_SALOMEDS__POA.GenericAttribute):
    _NP_RepositoryId = _0_SALOMEDS.AttributeExternalFileDef._NP_RepositoryId


    _omni_op_d = {"Value": _0_SALOMEDS.AttributeExternalFileDef._d_Value, "SetValue": _0_SALOMEDS.AttributeExternalFileDef._d_SetValue}
    _omni_op_d.update(_0_SALOMEDS__POA.GenericAttribute._omni_op_d)

AttributeExternalFileDef._omni_skeleton = AttributeExternalFileDef
_0_SALOMEDS__POA.AttributeExternalFileDef = AttributeExternalFileDef
omniORB.registerSkeleton(AttributeExternalFileDef._NP_RepositoryId, AttributeExternalFileDef)
del AttributeExternalFileDef
__name__ = "SALOMEDS"

# interface AttributeFileType
_0_SALOMEDS._d_AttributeFileType = (omniORB.tcInternal.tv_objref, "IDL:SALOMEDS/AttributeFileType:1.0", "AttributeFileType")
omniORB.typeMapping["IDL:SALOMEDS/AttributeFileType:1.0"] = _0_SALOMEDS._d_AttributeFileType
_0_SALOMEDS.AttributeFileType = omniORB.newEmptyClass()
class AttributeFileType (_0_SALOMEDS.GenericAttribute):
    _NP_RepositoryId = _0_SALOMEDS._d_AttributeFileType[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_SALOMEDS.AttributeFileType = AttributeFileType
_0_SALOMEDS._tc_AttributeFileType = omniORB.tcInternal.createTypeCode(_0_SALOMEDS._d_AttributeFileType)
omniORB.registerType(AttributeFileType._NP_RepositoryId, _0_SALOMEDS._d_AttributeFileType, _0_SALOMEDS._tc_AttributeFileType)

# AttributeFileType operations and attributes
AttributeFileType._d_Value = ((), ((omniORB.tcInternal.tv_string,0), ), None)
AttributeFileType._d_SetValue = (((omniORB.tcInternal.tv_string,0), ), (), None)

# AttributeFileType object reference
class _objref_AttributeFileType (_0_SALOMEDS._objref_GenericAttribute):
    _NP_RepositoryId = AttributeFileType._NP_RepositoryId

    def __init__(self):
        _0_SALOMEDS._objref_GenericAttribute.__init__(self)

    def Value(self, *args):
        return _omnipy.invoke(self, "Value", _0_SALOMEDS.AttributeFileType._d_Value, args)

    def SetValue(self, *args):
        return _omnipy.invoke(self, "SetValue", _0_SALOMEDS.AttributeFileType._d_SetValue, args)

    __methods__ = ["Value", "SetValue"] + _0_SALOMEDS._objref_GenericAttribute.__methods__

omniORB.registerObjref(AttributeFileType._NP_RepositoryId, _objref_AttributeFileType)
_0_SALOMEDS._objref_AttributeFileType = _objref_AttributeFileType
del AttributeFileType, _objref_AttributeFileType

# AttributeFileType skeleton
__name__ = "SALOMEDS__POA"
class AttributeFileType (_0_SALOMEDS__POA.GenericAttribute):
    _NP_RepositoryId = _0_SALOMEDS.AttributeFileType._NP_RepositoryId


    _omni_op_d = {"Value": _0_SALOMEDS.AttributeFileType._d_Value, "SetValue": _0_SALOMEDS.AttributeFileType._d_SetValue}
    _omni_op_d.update(_0_SALOMEDS__POA.GenericAttribute._omni_op_d)

AttributeFileType._omni_skeleton = AttributeFileType
_0_SALOMEDS__POA.AttributeFileType = AttributeFileType
omniORB.registerSkeleton(AttributeFileType._NP_RepositoryId, AttributeFileType)
del AttributeFileType
__name__ = "SALOMEDS"

# interface AttributeDrawable
_0_SALOMEDS._d_AttributeDrawable = (omniORB.tcInternal.tv_objref, "IDL:SALOMEDS/AttributeDrawable:1.0", "AttributeDrawable")
omniORB.typeMapping["IDL:SALOMEDS/AttributeDrawable:1.0"] = _0_SALOMEDS._d_AttributeDrawable
_0_SALOMEDS.AttributeDrawable = omniORB.newEmptyClass()
class AttributeDrawable (_0_SALOMEDS.GenericAttribute):
    _NP_RepositoryId = _0_SALOMEDS._d_AttributeDrawable[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_SALOMEDS.AttributeDrawable = AttributeDrawable
_0_SALOMEDS._tc_AttributeDrawable = omniORB.tcInternal.createTypeCode(_0_SALOMEDS._d_AttributeDrawable)
omniORB.registerType(AttributeDrawable._NP_RepositoryId, _0_SALOMEDS._d_AttributeDrawable, _0_SALOMEDS._tc_AttributeDrawable)

# AttributeDrawable operations and attributes
AttributeDrawable._d_IsDrawable = ((), (omniORB.tcInternal.tv_boolean, ), None)
AttributeDrawable._d_SetDrawable = ((omniORB.tcInternal.tv_boolean, ), (), None)

# AttributeDrawable object reference
class _objref_AttributeDrawable (_0_SALOMEDS._objref_GenericAttribute):
    _NP_RepositoryId = AttributeDrawable._NP_RepositoryId

    def __init__(self):
        _0_SALOMEDS._objref_GenericAttribute.__init__(self)

    def IsDrawable(self, *args):
        return _omnipy.invoke(self, "IsDrawable", _0_SALOMEDS.AttributeDrawable._d_IsDrawable, args)

    def SetDrawable(self, *args):
        return _omnipy.invoke(self, "SetDrawable", _0_SALOMEDS.AttributeDrawable._d_SetDrawable, args)

    __methods__ = ["IsDrawable", "SetDrawable"] + _0_SALOMEDS._objref_GenericAttribute.__methods__

omniORB.registerObjref(AttributeDrawable._NP_RepositoryId, _objref_AttributeDrawable)
_0_SALOMEDS._objref_AttributeDrawable = _objref_AttributeDrawable
del AttributeDrawable, _objref_AttributeDrawable

# AttributeDrawable skeleton
__name__ = "SALOMEDS__POA"
class AttributeDrawable (_0_SALOMEDS__POA.GenericAttribute):
    _NP_RepositoryId = _0_SALOMEDS.AttributeDrawable._NP_RepositoryId


    _omni_op_d = {"IsDrawable": _0_SALOMEDS.AttributeDrawable._d_IsDrawable, "SetDrawable": _0_SALOMEDS.AttributeDrawable._d_SetDrawable}
    _omni_op_d.update(_0_SALOMEDS__POA.GenericAttribute._omni_op_d)

AttributeDrawable._omni_skeleton = AttributeDrawable
_0_SALOMEDS__POA.AttributeDrawable = AttributeDrawable
omniORB.registerSkeleton(AttributeDrawable._NP_RepositoryId, AttributeDrawable)
del AttributeDrawable
__name__ = "SALOMEDS"

# interface AttributeSelectable
_0_SALOMEDS._d_AttributeSelectable = (omniORB.tcInternal.tv_objref, "IDL:SALOMEDS/AttributeSelectable:1.0", "AttributeSelectable")
omniORB.typeMapping["IDL:SALOMEDS/AttributeSelectable:1.0"] = _0_SALOMEDS._d_AttributeSelectable
_0_SALOMEDS.AttributeSelectable = omniORB.newEmptyClass()
class AttributeSelectable (_0_SALOMEDS.GenericAttribute):
    _NP_RepositoryId = _0_SALOMEDS._d_AttributeSelectable[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_SALOMEDS.AttributeSelectable = AttributeSelectable
_0_SALOMEDS._tc_AttributeSelectable = omniORB.tcInternal.createTypeCode(_0_SALOMEDS._d_AttributeSelectable)
omniORB.registerType(AttributeSelectable._NP_RepositoryId, _0_SALOMEDS._d_AttributeSelectable, _0_SALOMEDS._tc_AttributeSelectable)

# AttributeSelectable operations and attributes
AttributeSelectable._d_IsSelectable = ((), (omniORB.tcInternal.tv_boolean, ), None)
AttributeSelectable._d_SetSelectable = ((omniORB.tcInternal.tv_boolean, ), (), None)

# AttributeSelectable object reference
class _objref_AttributeSelectable (_0_SALOMEDS._objref_GenericAttribute):
    _NP_RepositoryId = AttributeSelectable._NP_RepositoryId

    def __init__(self):
        _0_SALOMEDS._objref_GenericAttribute.__init__(self)

    def IsSelectable(self, *args):
        return _omnipy.invoke(self, "IsSelectable", _0_SALOMEDS.AttributeSelectable._d_IsSelectable, args)

    def SetSelectable(self, *args):
        return _omnipy.invoke(self, "SetSelectable", _0_SALOMEDS.AttributeSelectable._d_SetSelectable, args)

    __methods__ = ["IsSelectable", "SetSelectable"] + _0_SALOMEDS._objref_GenericAttribute.__methods__

omniORB.registerObjref(AttributeSelectable._NP_RepositoryId, _objref_AttributeSelectable)
_0_SALOMEDS._objref_AttributeSelectable = _objref_AttributeSelectable
del AttributeSelectable, _objref_AttributeSelectable

# AttributeSelectable skeleton
__name__ = "SALOMEDS__POA"
class AttributeSelectable (_0_SALOMEDS__POA.GenericAttribute):
    _NP_RepositoryId = _0_SALOMEDS.AttributeSelectable._NP_RepositoryId


    _omni_op_d = {"IsSelectable": _0_SALOMEDS.AttributeSelectable._d_IsSelectable, "SetSelectable": _0_SALOMEDS.AttributeSelectable._d_SetSelectable}
    _omni_op_d.update(_0_SALOMEDS__POA.GenericAttribute._omni_op_d)

AttributeSelectable._omni_skeleton = AttributeSelectable
_0_SALOMEDS__POA.AttributeSelectable = AttributeSelectable
omniORB.registerSkeleton(AttributeSelectable._NP_RepositoryId, AttributeSelectable)
del AttributeSelectable
__name__ = "SALOMEDS"

# interface AttributeExpandable
_0_SALOMEDS._d_AttributeExpandable = (omniORB.tcInternal.tv_objref, "IDL:SALOMEDS/AttributeExpandable:1.0", "AttributeExpandable")
omniORB.typeMapping["IDL:SALOMEDS/AttributeExpandable:1.0"] = _0_SALOMEDS._d_AttributeExpandable
_0_SALOMEDS.AttributeExpandable = omniORB.newEmptyClass()
class AttributeExpandable (_0_SALOMEDS.GenericAttribute):
    _NP_RepositoryId = _0_SALOMEDS._d_AttributeExpandable[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_SALOMEDS.AttributeExpandable = AttributeExpandable
_0_SALOMEDS._tc_AttributeExpandable = omniORB.tcInternal.createTypeCode(_0_SALOMEDS._d_AttributeExpandable)
omniORB.registerType(AttributeExpandable._NP_RepositoryId, _0_SALOMEDS._d_AttributeExpandable, _0_SALOMEDS._tc_AttributeExpandable)

# AttributeExpandable operations and attributes
AttributeExpandable._d_IsExpandable = ((), (omniORB.tcInternal.tv_boolean, ), None)
AttributeExpandable._d_SetExpandable = ((omniORB.tcInternal.tv_boolean, ), (), None)

# AttributeExpandable object reference
class _objref_AttributeExpandable (_0_SALOMEDS._objref_GenericAttribute):
    _NP_RepositoryId = AttributeExpandable._NP_RepositoryId

    def __init__(self):
        _0_SALOMEDS._objref_GenericAttribute.__init__(self)

    def IsExpandable(self, *args):
        return _omnipy.invoke(self, "IsExpandable", _0_SALOMEDS.AttributeExpandable._d_IsExpandable, args)

    def SetExpandable(self, *args):
        return _omnipy.invoke(self, "SetExpandable", _0_SALOMEDS.AttributeExpandable._d_SetExpandable, args)

    __methods__ = ["IsExpandable", "SetExpandable"] + _0_SALOMEDS._objref_GenericAttribute.__methods__

omniORB.registerObjref(AttributeExpandable._NP_RepositoryId, _objref_AttributeExpandable)
_0_SALOMEDS._objref_AttributeExpandable = _objref_AttributeExpandable
del AttributeExpandable, _objref_AttributeExpandable

# AttributeExpandable skeleton
__name__ = "SALOMEDS__POA"
class AttributeExpandable (_0_SALOMEDS__POA.GenericAttribute):
    _NP_RepositoryId = _0_SALOMEDS.AttributeExpandable._NP_RepositoryId


    _omni_op_d = {"IsExpandable": _0_SALOMEDS.AttributeExpandable._d_IsExpandable, "SetExpandable": _0_SALOMEDS.AttributeExpandable._d_SetExpandable}
    _omni_op_d.update(_0_SALOMEDS__POA.GenericAttribute._omni_op_d)

AttributeExpandable._omni_skeleton = AttributeExpandable
_0_SALOMEDS__POA.AttributeExpandable = AttributeExpandable
omniORB.registerSkeleton(AttributeExpandable._NP_RepositoryId, AttributeExpandable)
del AttributeExpandable
__name__ = "SALOMEDS"

# interface AttributeFlags
_0_SALOMEDS._d_AttributeFlags = (omniORB.tcInternal.tv_objref, "IDL:SALOMEDS/AttributeFlags:1.0", "AttributeFlags")
omniORB.typeMapping["IDL:SALOMEDS/AttributeFlags:1.0"] = _0_SALOMEDS._d_AttributeFlags
_0_SALOMEDS.AttributeFlags = omniORB.newEmptyClass()
class AttributeFlags (_0_SALOMEDS.GenericAttribute):
    _NP_RepositoryId = _0_SALOMEDS._d_AttributeFlags[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_SALOMEDS.AttributeFlags = AttributeFlags
_0_SALOMEDS._tc_AttributeFlags = omniORB.tcInternal.createTypeCode(_0_SALOMEDS._d_AttributeFlags)
omniORB.registerType(AttributeFlags._NP_RepositoryId, _0_SALOMEDS._d_AttributeFlags, _0_SALOMEDS._tc_AttributeFlags)

# AttributeFlags operations and attributes
AttributeFlags._d_GetFlags = ((), (omniORB.tcInternal.tv_long, ), None)
AttributeFlags._d_SetFlags = ((omniORB.tcInternal.tv_long, ), (), None)
AttributeFlags._d_Get = ((omniORB.tcInternal.tv_long, ), (omniORB.tcInternal.tv_boolean, ), None)
AttributeFlags._d_Set = ((omniORB.tcInternal.tv_long, omniORB.tcInternal.tv_boolean), (), None)

# AttributeFlags object reference
class _objref_AttributeFlags (_0_SALOMEDS._objref_GenericAttribute):
    _NP_RepositoryId = AttributeFlags._NP_RepositoryId

    def __init__(self):
        _0_SALOMEDS._objref_GenericAttribute.__init__(self)

    def GetFlags(self, *args):
        return _omnipy.invoke(self, "GetFlags", _0_SALOMEDS.AttributeFlags._d_GetFlags, args)

    def SetFlags(self, *args):
        return _omnipy.invoke(self, "SetFlags", _0_SALOMEDS.AttributeFlags._d_SetFlags, args)

    def Get(self, *args):
        return _omnipy.invoke(self, "Get", _0_SALOMEDS.AttributeFlags._d_Get, args)

    def Set(self, *args):
        return _omnipy.invoke(self, "Set", _0_SALOMEDS.AttributeFlags._d_Set, args)

    __methods__ = ["GetFlags", "SetFlags", "Get", "Set"] + _0_SALOMEDS._objref_GenericAttribute.__methods__

omniORB.registerObjref(AttributeFlags._NP_RepositoryId, _objref_AttributeFlags)
_0_SALOMEDS._objref_AttributeFlags = _objref_AttributeFlags
del AttributeFlags, _objref_AttributeFlags

# AttributeFlags skeleton
__name__ = "SALOMEDS__POA"
class AttributeFlags (_0_SALOMEDS__POA.GenericAttribute):
    _NP_RepositoryId = _0_SALOMEDS.AttributeFlags._NP_RepositoryId


    _omni_op_d = {"GetFlags": _0_SALOMEDS.AttributeFlags._d_GetFlags, "SetFlags": _0_SALOMEDS.AttributeFlags._d_SetFlags, "Get": _0_SALOMEDS.AttributeFlags._d_Get, "Set": _0_SALOMEDS.AttributeFlags._d_Set}
    _omni_op_d.update(_0_SALOMEDS__POA.GenericAttribute._omni_op_d)

AttributeFlags._omni_skeleton = AttributeFlags
_0_SALOMEDS__POA.AttributeFlags = AttributeFlags
omniORB.registerSkeleton(AttributeFlags._NP_RepositoryId, AttributeFlags)
del AttributeFlags
__name__ = "SALOMEDS"

# interface AttributeGraphic
_0_SALOMEDS._d_AttributeGraphic = (omniORB.tcInternal.tv_objref, "IDL:SALOMEDS/AttributeGraphic:1.0", "AttributeGraphic")
omniORB.typeMapping["IDL:SALOMEDS/AttributeGraphic:1.0"] = _0_SALOMEDS._d_AttributeGraphic
_0_SALOMEDS.AttributeGraphic = omniORB.newEmptyClass()
class AttributeGraphic (_0_SALOMEDS.GenericAttribute):
    _NP_RepositoryId = _0_SALOMEDS._d_AttributeGraphic[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_SALOMEDS.AttributeGraphic = AttributeGraphic
_0_SALOMEDS._tc_AttributeGraphic = omniORB.tcInternal.createTypeCode(_0_SALOMEDS._d_AttributeGraphic)
omniORB.registerType(AttributeGraphic._NP_RepositoryId, _0_SALOMEDS._d_AttributeGraphic, _0_SALOMEDS._tc_AttributeGraphic)

# AttributeGraphic operations and attributes
AttributeGraphic._d_SetVisibility = ((omniORB.tcInternal.tv_long, omniORB.tcInternal.tv_boolean), (), None)
AttributeGraphic._d_GetVisibility = ((omniORB.tcInternal.tv_long, ), (omniORB.tcInternal.tv_boolean, ), None)

# AttributeGraphic object reference
class _objref_AttributeGraphic (_0_SALOMEDS._objref_GenericAttribute):
    _NP_RepositoryId = AttributeGraphic._NP_RepositoryId

    def __init__(self):
        _0_SALOMEDS._objref_GenericAttribute.__init__(self)

    def SetVisibility(self, *args):
        return _omnipy.invoke(self, "SetVisibility", _0_SALOMEDS.AttributeGraphic._d_SetVisibility, args)

    def GetVisibility(self, *args):
        return _omnipy.invoke(self, "GetVisibility", _0_SALOMEDS.AttributeGraphic._d_GetVisibility, args)

    __methods__ = ["SetVisibility", "GetVisibility"] + _0_SALOMEDS._objref_GenericAttribute.__methods__

omniORB.registerObjref(AttributeGraphic._NP_RepositoryId, _objref_AttributeGraphic)
_0_SALOMEDS._objref_AttributeGraphic = _objref_AttributeGraphic
del AttributeGraphic, _objref_AttributeGraphic

# AttributeGraphic skeleton
__name__ = "SALOMEDS__POA"
class AttributeGraphic (_0_SALOMEDS__POA.GenericAttribute):
    _NP_RepositoryId = _0_SALOMEDS.AttributeGraphic._NP_RepositoryId


    _omni_op_d = {"SetVisibility": _0_SALOMEDS.AttributeGraphic._d_SetVisibility, "GetVisibility": _0_SALOMEDS.AttributeGraphic._d_GetVisibility}
    _omni_op_d.update(_0_SALOMEDS__POA.GenericAttribute._omni_op_d)

AttributeGraphic._omni_skeleton = AttributeGraphic
_0_SALOMEDS__POA.AttributeGraphic = AttributeGraphic
omniORB.registerSkeleton(AttributeGraphic._NP_RepositoryId, AttributeGraphic)
del AttributeGraphic
__name__ = "SALOMEDS"

# interface AttributeOpened
_0_SALOMEDS._d_AttributeOpened = (omniORB.tcInternal.tv_objref, "IDL:SALOMEDS/AttributeOpened:1.0", "AttributeOpened")
omniORB.typeMapping["IDL:SALOMEDS/AttributeOpened:1.0"] = _0_SALOMEDS._d_AttributeOpened
_0_SALOMEDS.AttributeOpened = omniORB.newEmptyClass()
class AttributeOpened (_0_SALOMEDS.GenericAttribute):
    _NP_RepositoryId = _0_SALOMEDS._d_AttributeOpened[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_SALOMEDS.AttributeOpened = AttributeOpened
_0_SALOMEDS._tc_AttributeOpened = omniORB.tcInternal.createTypeCode(_0_SALOMEDS._d_AttributeOpened)
omniORB.registerType(AttributeOpened._NP_RepositoryId, _0_SALOMEDS._d_AttributeOpened, _0_SALOMEDS._tc_AttributeOpened)

# AttributeOpened operations and attributes
AttributeOpened._d_IsOpened = ((), (omniORB.tcInternal.tv_boolean, ), None)
AttributeOpened._d_SetOpened = ((omniORB.tcInternal.tv_boolean, ), (), None)

# AttributeOpened object reference
class _objref_AttributeOpened (_0_SALOMEDS._objref_GenericAttribute):
    _NP_RepositoryId = AttributeOpened._NP_RepositoryId

    def __init__(self):
        _0_SALOMEDS._objref_GenericAttribute.__init__(self)

    def IsOpened(self, *args):
        return _omnipy.invoke(self, "IsOpened", _0_SALOMEDS.AttributeOpened._d_IsOpened, args)

    def SetOpened(self, *args):
        return _omnipy.invoke(self, "SetOpened", _0_SALOMEDS.AttributeOpened._d_SetOpened, args)

    __methods__ = ["IsOpened", "SetOpened"] + _0_SALOMEDS._objref_GenericAttribute.__methods__

omniORB.registerObjref(AttributeOpened._NP_RepositoryId, _objref_AttributeOpened)
_0_SALOMEDS._objref_AttributeOpened = _objref_AttributeOpened
del AttributeOpened, _objref_AttributeOpened

# AttributeOpened skeleton
__name__ = "SALOMEDS__POA"
class AttributeOpened (_0_SALOMEDS__POA.GenericAttribute):
    _NP_RepositoryId = _0_SALOMEDS.AttributeOpened._NP_RepositoryId


    _omni_op_d = {"IsOpened": _0_SALOMEDS.AttributeOpened._d_IsOpened, "SetOpened": _0_SALOMEDS.AttributeOpened._d_SetOpened}
    _omni_op_d.update(_0_SALOMEDS__POA.GenericAttribute._omni_op_d)

AttributeOpened._omni_skeleton = AttributeOpened
_0_SALOMEDS__POA.AttributeOpened = AttributeOpened
omniORB.registerSkeleton(AttributeOpened._NP_RepositoryId, AttributeOpened)
del AttributeOpened
__name__ = "SALOMEDS"

# interface AttributeTextColor
_0_SALOMEDS._d_AttributeTextColor = (omniORB.tcInternal.tv_objref, "IDL:SALOMEDS/AttributeTextColor:1.0", "AttributeTextColor")
omniORB.typeMapping["IDL:SALOMEDS/AttributeTextColor:1.0"] = _0_SALOMEDS._d_AttributeTextColor
_0_SALOMEDS.AttributeTextColor = omniORB.newEmptyClass()
class AttributeTextColor (_0_SALOMEDS.GenericAttribute):
    _NP_RepositoryId = _0_SALOMEDS._d_AttributeTextColor[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_SALOMEDS.AttributeTextColor = AttributeTextColor
_0_SALOMEDS._tc_AttributeTextColor = omniORB.tcInternal.createTypeCode(_0_SALOMEDS._d_AttributeTextColor)
omniORB.registerType(AttributeTextColor._NP_RepositoryId, _0_SALOMEDS._d_AttributeTextColor, _0_SALOMEDS._tc_AttributeTextColor)

# AttributeTextColor operations and attributes
AttributeTextColor._d_TextColor = ((), (omniORB.typeMapping["IDL:SALOMEDS/Color:1.0"], ), None)
AttributeTextColor._d_SetTextColor = ((omniORB.typeMapping["IDL:SALOMEDS/Color:1.0"], ), (), None)

# AttributeTextColor object reference
class _objref_AttributeTextColor (_0_SALOMEDS._objref_GenericAttribute):
    _NP_RepositoryId = AttributeTextColor._NP_RepositoryId

    def __init__(self):
        _0_SALOMEDS._objref_GenericAttribute.__init__(self)

    def TextColor(self, *args):
        return _omnipy.invoke(self, "TextColor", _0_SALOMEDS.AttributeTextColor._d_TextColor, args)

    def SetTextColor(self, *args):
        return _omnipy.invoke(self, "SetTextColor", _0_SALOMEDS.AttributeTextColor._d_SetTextColor, args)

    __methods__ = ["TextColor", "SetTextColor"] + _0_SALOMEDS._objref_GenericAttribute.__methods__

omniORB.registerObjref(AttributeTextColor._NP_RepositoryId, _objref_AttributeTextColor)
_0_SALOMEDS._objref_AttributeTextColor = _objref_AttributeTextColor
del AttributeTextColor, _objref_AttributeTextColor

# AttributeTextColor skeleton
__name__ = "SALOMEDS__POA"
class AttributeTextColor (_0_SALOMEDS__POA.GenericAttribute):
    _NP_RepositoryId = _0_SALOMEDS.AttributeTextColor._NP_RepositoryId


    _omni_op_d = {"TextColor": _0_SALOMEDS.AttributeTextColor._d_TextColor, "SetTextColor": _0_SALOMEDS.AttributeTextColor._d_SetTextColor}
    _omni_op_d.update(_0_SALOMEDS__POA.GenericAttribute._omni_op_d)

AttributeTextColor._omni_skeleton = AttributeTextColor
_0_SALOMEDS__POA.AttributeTextColor = AttributeTextColor
omniORB.registerSkeleton(AttributeTextColor._NP_RepositoryId, AttributeTextColor)
del AttributeTextColor
__name__ = "SALOMEDS"

# interface AttributeTextHighlightColor
_0_SALOMEDS._d_AttributeTextHighlightColor = (omniORB.tcInternal.tv_objref, "IDL:SALOMEDS/AttributeTextHighlightColor:1.0", "AttributeTextHighlightColor")
omniORB.typeMapping["IDL:SALOMEDS/AttributeTextHighlightColor:1.0"] = _0_SALOMEDS._d_AttributeTextHighlightColor
_0_SALOMEDS.AttributeTextHighlightColor = omniORB.newEmptyClass()
class AttributeTextHighlightColor (_0_SALOMEDS.GenericAttribute):
    _NP_RepositoryId = _0_SALOMEDS._d_AttributeTextHighlightColor[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_SALOMEDS.AttributeTextHighlightColor = AttributeTextHighlightColor
_0_SALOMEDS._tc_AttributeTextHighlightColor = omniORB.tcInternal.createTypeCode(_0_SALOMEDS._d_AttributeTextHighlightColor)
omniORB.registerType(AttributeTextHighlightColor._NP_RepositoryId, _0_SALOMEDS._d_AttributeTextHighlightColor, _0_SALOMEDS._tc_AttributeTextHighlightColor)

# AttributeTextHighlightColor operations and attributes
AttributeTextHighlightColor._d_TextHighlightColor = ((), (omniORB.typeMapping["IDL:SALOMEDS/Color:1.0"], ), None)
AttributeTextHighlightColor._d_SetTextHighlightColor = ((omniORB.typeMapping["IDL:SALOMEDS/Color:1.0"], ), (), None)

# AttributeTextHighlightColor object reference
class _objref_AttributeTextHighlightColor (_0_SALOMEDS._objref_GenericAttribute):
    _NP_RepositoryId = AttributeTextHighlightColor._NP_RepositoryId

    def __init__(self):
        _0_SALOMEDS._objref_GenericAttribute.__init__(self)

    def TextHighlightColor(self, *args):
        return _omnipy.invoke(self, "TextHighlightColor", _0_SALOMEDS.AttributeTextHighlightColor._d_TextHighlightColor, args)

    def SetTextHighlightColor(self, *args):
        return _omnipy.invoke(self, "SetTextHighlightColor", _0_SALOMEDS.AttributeTextHighlightColor._d_SetTextHighlightColor, args)

    __methods__ = ["TextHighlightColor", "SetTextHighlightColor"] + _0_SALOMEDS._objref_GenericAttribute.__methods__

omniORB.registerObjref(AttributeTextHighlightColor._NP_RepositoryId, _objref_AttributeTextHighlightColor)
_0_SALOMEDS._objref_AttributeTextHighlightColor = _objref_AttributeTextHighlightColor
del AttributeTextHighlightColor, _objref_AttributeTextHighlightColor

# AttributeTextHighlightColor skeleton
__name__ = "SALOMEDS__POA"
class AttributeTextHighlightColor (_0_SALOMEDS__POA.GenericAttribute):
    _NP_RepositoryId = _0_SALOMEDS.AttributeTextHighlightColor._NP_RepositoryId


    _omni_op_d = {"TextHighlightColor": _0_SALOMEDS.AttributeTextHighlightColor._d_TextHighlightColor, "SetTextHighlightColor": _0_SALOMEDS.AttributeTextHighlightColor._d_SetTextHighlightColor}
    _omni_op_d.update(_0_SALOMEDS__POA.GenericAttribute._omni_op_d)

AttributeTextHighlightColor._omni_skeleton = AttributeTextHighlightColor
_0_SALOMEDS__POA.AttributeTextHighlightColor = AttributeTextHighlightColor
omniORB.registerSkeleton(AttributeTextHighlightColor._NP_RepositoryId, AttributeTextHighlightColor)
del AttributeTextHighlightColor
__name__ = "SALOMEDS"

# interface AttributePixMap
_0_SALOMEDS._d_AttributePixMap = (omniORB.tcInternal.tv_objref, "IDL:SALOMEDS/AttributePixMap:1.0", "AttributePixMap")
omniORB.typeMapping["IDL:SALOMEDS/AttributePixMap:1.0"] = _0_SALOMEDS._d_AttributePixMap
_0_SALOMEDS.AttributePixMap = omniORB.newEmptyClass()
class AttributePixMap (_0_SALOMEDS.GenericAttribute):
    _NP_RepositoryId = _0_SALOMEDS._d_AttributePixMap[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_SALOMEDS.AttributePixMap = AttributePixMap
_0_SALOMEDS._tc_AttributePixMap = omniORB.tcInternal.createTypeCode(_0_SALOMEDS._d_AttributePixMap)
omniORB.registerType(AttributePixMap._NP_RepositoryId, _0_SALOMEDS._d_AttributePixMap, _0_SALOMEDS._tc_AttributePixMap)

# AttributePixMap operations and attributes
AttributePixMap._d_HasPixMap = ((), (omniORB.tcInternal.tv_boolean, ), None)
AttributePixMap._d_GetPixMap = ((), ((omniORB.tcInternal.tv_string,0), ), None)
AttributePixMap._d_SetPixMap = (((omniORB.tcInternal.tv_string,0), ), (), None)

# AttributePixMap object reference
class _objref_AttributePixMap (_0_SALOMEDS._objref_GenericAttribute):
    _NP_RepositoryId = AttributePixMap._NP_RepositoryId

    def __init__(self):
        _0_SALOMEDS._objref_GenericAttribute.__init__(self)

    def HasPixMap(self, *args):
        return _omnipy.invoke(self, "HasPixMap", _0_SALOMEDS.AttributePixMap._d_HasPixMap, args)

    def GetPixMap(self, *args):
        return _omnipy.invoke(self, "GetPixMap", _0_SALOMEDS.AttributePixMap._d_GetPixMap, args)

    def SetPixMap(self, *args):
        return _omnipy.invoke(self, "SetPixMap", _0_SALOMEDS.AttributePixMap._d_SetPixMap, args)

    __methods__ = ["HasPixMap", "GetPixMap", "SetPixMap"] + _0_SALOMEDS._objref_GenericAttribute.__methods__

omniORB.registerObjref(AttributePixMap._NP_RepositoryId, _objref_AttributePixMap)
_0_SALOMEDS._objref_AttributePixMap = _objref_AttributePixMap
del AttributePixMap, _objref_AttributePixMap

# AttributePixMap skeleton
__name__ = "SALOMEDS__POA"
class AttributePixMap (_0_SALOMEDS__POA.GenericAttribute):
    _NP_RepositoryId = _0_SALOMEDS.AttributePixMap._NP_RepositoryId


    _omni_op_d = {"HasPixMap": _0_SALOMEDS.AttributePixMap._d_HasPixMap, "GetPixMap": _0_SALOMEDS.AttributePixMap._d_GetPixMap, "SetPixMap": _0_SALOMEDS.AttributePixMap._d_SetPixMap}
    _omni_op_d.update(_0_SALOMEDS__POA.GenericAttribute._omni_op_d)

AttributePixMap._omni_skeleton = AttributePixMap
_0_SALOMEDS__POA.AttributePixMap = AttributePixMap
omniORB.registerSkeleton(AttributePixMap._NP_RepositoryId, AttributePixMap)
del AttributePixMap
__name__ = "SALOMEDS"

# interface AttributeTreeNode
_0_SALOMEDS._d_AttributeTreeNode = (omniORB.tcInternal.tv_objref, "IDL:SALOMEDS/AttributeTreeNode:1.0", "AttributeTreeNode")
omniORB.typeMapping["IDL:SALOMEDS/AttributeTreeNode:1.0"] = _0_SALOMEDS._d_AttributeTreeNode
_0_SALOMEDS.AttributeTreeNode = omniORB.newEmptyClass()
class AttributeTreeNode (_0_SALOMEDS.GenericAttribute):
    _NP_RepositoryId = _0_SALOMEDS._d_AttributeTreeNode[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_SALOMEDS.AttributeTreeNode = AttributeTreeNode
_0_SALOMEDS._tc_AttributeTreeNode = omniORB.tcInternal.createTypeCode(_0_SALOMEDS._d_AttributeTreeNode)
omniORB.registerType(AttributeTreeNode._NP_RepositoryId, _0_SALOMEDS._d_AttributeTreeNode, _0_SALOMEDS._tc_AttributeTreeNode)

# AttributeTreeNode operations and attributes
AttributeTreeNode._d_SetFather = ((omniORB.typeMapping["IDL:SALOMEDS/AttributeTreeNode:1.0"], ), (), None)
AttributeTreeNode._d_HasFather = ((), (omniORB.tcInternal.tv_boolean, ), None)
AttributeTreeNode._d_GetFather = ((), (omniORB.typeMapping["IDL:SALOMEDS/AttributeTreeNode:1.0"], ), None)
AttributeTreeNode._d_SetPrevious = ((omniORB.typeMapping["IDL:SALOMEDS/AttributeTreeNode:1.0"], ), (), None)
AttributeTreeNode._d_HasPrevious = ((), (omniORB.tcInternal.tv_boolean, ), None)
AttributeTreeNode._d_GetPrevious = ((), (omniORB.typeMapping["IDL:SALOMEDS/AttributeTreeNode:1.0"], ), None)
AttributeTreeNode._d_SetNext = ((omniORB.typeMapping["IDL:SALOMEDS/AttributeTreeNode:1.0"], ), (), None)
AttributeTreeNode._d_HasNext = ((), (omniORB.tcInternal.tv_boolean, ), None)
AttributeTreeNode._d_GetNext = ((), (omniORB.typeMapping["IDL:SALOMEDS/AttributeTreeNode:1.0"], ), None)
AttributeTreeNode._d_SetFirst = ((omniORB.typeMapping["IDL:SALOMEDS/AttributeTreeNode:1.0"], ), (), None)
AttributeTreeNode._d_HasFirst = ((), (omniORB.tcInternal.tv_boolean, ), None)
AttributeTreeNode._d_GetFirst = ((), (omniORB.typeMapping["IDL:SALOMEDS/AttributeTreeNode:1.0"], ), None)
AttributeTreeNode._d_SetTreeID = (((omniORB.tcInternal.tv_string,0), ), (), None)
AttributeTreeNode._d_GetTreeID = ((), ((omniORB.tcInternal.tv_string,0), ), None)
AttributeTreeNode._d_Append = ((omniORB.typeMapping["IDL:SALOMEDS/AttributeTreeNode:1.0"], ), (), None)
AttributeTreeNode._d_Prepend = ((omniORB.typeMapping["IDL:SALOMEDS/AttributeTreeNode:1.0"], ), (), None)
AttributeTreeNode._d_InsertBefore = ((omniORB.typeMapping["IDL:SALOMEDS/AttributeTreeNode:1.0"], ), (), None)
AttributeTreeNode._d_InsertAfter = ((omniORB.typeMapping["IDL:SALOMEDS/AttributeTreeNode:1.0"], ), (), None)
AttributeTreeNode._d_Remove = ((), (), None)
AttributeTreeNode._d_Depth = ((), (omniORB.tcInternal.tv_long, ), None)
AttributeTreeNode._d_IsRoot = ((), (omniORB.tcInternal.tv_boolean, ), None)
AttributeTreeNode._d_IsDescendant = ((omniORB.typeMapping["IDL:SALOMEDS/AttributeTreeNode:1.0"], ), (omniORB.tcInternal.tv_boolean, ), None)
AttributeTreeNode._d_IsFather = ((omniORB.typeMapping["IDL:SALOMEDS/AttributeTreeNode:1.0"], ), (omniORB.tcInternal.tv_boolean, ), None)
AttributeTreeNode._d_IsChild = ((omniORB.typeMapping["IDL:SALOMEDS/AttributeTreeNode:1.0"], ), (omniORB.tcInternal.tv_boolean, ), None)
AttributeTreeNode._d_Label = ((), ((omniORB.tcInternal.tv_string,0), ), None)

# AttributeTreeNode object reference
class _objref_AttributeTreeNode (_0_SALOMEDS._objref_GenericAttribute):
    _NP_RepositoryId = AttributeTreeNode._NP_RepositoryId

    def __init__(self):
        _0_SALOMEDS._objref_GenericAttribute.__init__(self)

    def SetFather(self, *args):
        return _omnipy.invoke(self, "SetFather", _0_SALOMEDS.AttributeTreeNode._d_SetFather, args)

    def HasFather(self, *args):
        return _omnipy.invoke(self, "HasFather", _0_SALOMEDS.AttributeTreeNode._d_HasFather, args)

    def GetFather(self, *args):
        return _omnipy.invoke(self, "GetFather", _0_SALOMEDS.AttributeTreeNode._d_GetFather, args)

    def SetPrevious(self, *args):
        return _omnipy.invoke(self, "SetPrevious", _0_SALOMEDS.AttributeTreeNode._d_SetPrevious, args)

    def HasPrevious(self, *args):
        return _omnipy.invoke(self, "HasPrevious", _0_SALOMEDS.AttributeTreeNode._d_HasPrevious, args)

    def GetPrevious(self, *args):
        return _omnipy.invoke(self, "GetPrevious", _0_SALOMEDS.AttributeTreeNode._d_GetPrevious, args)

    def SetNext(self, *args):
        return _omnipy.invoke(self, "SetNext", _0_SALOMEDS.AttributeTreeNode._d_SetNext, args)

    def HasNext(self, *args):
        return _omnipy.invoke(self, "HasNext", _0_SALOMEDS.AttributeTreeNode._d_HasNext, args)

    def GetNext(self, *args):
        return _omnipy.invoke(self, "GetNext", _0_SALOMEDS.AttributeTreeNode._d_GetNext, args)

    def SetFirst(self, *args):
        return _omnipy.invoke(self, "SetFirst", _0_SALOMEDS.AttributeTreeNode._d_SetFirst, args)

    def HasFirst(self, *args):
        return _omnipy.invoke(self, "HasFirst", _0_SALOMEDS.AttributeTreeNode._d_HasFirst, args)

    def GetFirst(self, *args):
        return _omnipy.invoke(self, "GetFirst", _0_SALOMEDS.AttributeTreeNode._d_GetFirst, args)

    def SetTreeID(self, *args):
        return _omnipy.invoke(self, "SetTreeID", _0_SALOMEDS.AttributeTreeNode._d_SetTreeID, args)

    def GetTreeID(self, *args):
        return _omnipy.invoke(self, "GetTreeID", _0_SALOMEDS.AttributeTreeNode._d_GetTreeID, args)

    def Append(self, *args):
        return _omnipy.invoke(self, "Append", _0_SALOMEDS.AttributeTreeNode._d_Append, args)

    def Prepend(self, *args):
        return _omnipy.invoke(self, "Prepend", _0_SALOMEDS.AttributeTreeNode._d_Prepend, args)

    def InsertBefore(self, *args):
        return _omnipy.invoke(self, "InsertBefore", _0_SALOMEDS.AttributeTreeNode._d_InsertBefore, args)

    def InsertAfter(self, *args):
        return _omnipy.invoke(self, "InsertAfter", _0_SALOMEDS.AttributeTreeNode._d_InsertAfter, args)

    def Remove(self, *args):
        return _omnipy.invoke(self, "Remove", _0_SALOMEDS.AttributeTreeNode._d_Remove, args)

    def Depth(self, *args):
        return _omnipy.invoke(self, "Depth", _0_SALOMEDS.AttributeTreeNode._d_Depth, args)

    def IsRoot(self, *args):
        return _omnipy.invoke(self, "IsRoot", _0_SALOMEDS.AttributeTreeNode._d_IsRoot, args)

    def IsDescendant(self, *args):
        return _omnipy.invoke(self, "IsDescendant", _0_SALOMEDS.AttributeTreeNode._d_IsDescendant, args)

    def IsFather(self, *args):
        return _omnipy.invoke(self, "IsFather", _0_SALOMEDS.AttributeTreeNode._d_IsFather, args)

    def IsChild(self, *args):
        return _omnipy.invoke(self, "IsChild", _0_SALOMEDS.AttributeTreeNode._d_IsChild, args)

    def Label(self, *args):
        return _omnipy.invoke(self, "Label", _0_SALOMEDS.AttributeTreeNode._d_Label, args)

    __methods__ = ["SetFather", "HasFather", "GetFather", "SetPrevious", "HasPrevious", "GetPrevious", "SetNext", "HasNext", "GetNext", "SetFirst", "HasFirst", "GetFirst", "SetTreeID", "GetTreeID", "Append", "Prepend", "InsertBefore", "InsertAfter", "Remove", "Depth", "IsRoot", "IsDescendant", "IsFather", "IsChild", "Label"] + _0_SALOMEDS._objref_GenericAttribute.__methods__

omniORB.registerObjref(AttributeTreeNode._NP_RepositoryId, _objref_AttributeTreeNode)
_0_SALOMEDS._objref_AttributeTreeNode = _objref_AttributeTreeNode
del AttributeTreeNode, _objref_AttributeTreeNode

# AttributeTreeNode skeleton
__name__ = "SALOMEDS__POA"
class AttributeTreeNode (_0_SALOMEDS__POA.GenericAttribute):
    _NP_RepositoryId = _0_SALOMEDS.AttributeTreeNode._NP_RepositoryId


    _omni_op_d = {"SetFather": _0_SALOMEDS.AttributeTreeNode._d_SetFather, "HasFather": _0_SALOMEDS.AttributeTreeNode._d_HasFather, "GetFather": _0_SALOMEDS.AttributeTreeNode._d_GetFather, "SetPrevious": _0_SALOMEDS.AttributeTreeNode._d_SetPrevious, "HasPrevious": _0_SALOMEDS.AttributeTreeNode._d_HasPrevious, "GetPrevious": _0_SALOMEDS.AttributeTreeNode._d_GetPrevious, "SetNext": _0_SALOMEDS.AttributeTreeNode._d_SetNext, "HasNext": _0_SALOMEDS.AttributeTreeNode._d_HasNext, "GetNext": _0_SALOMEDS.AttributeTreeNode._d_GetNext, "SetFirst": _0_SALOMEDS.AttributeTreeNode._d_SetFirst, "HasFirst": _0_SALOMEDS.AttributeTreeNode._d_HasFirst, "GetFirst": _0_SALOMEDS.AttributeTreeNode._d_GetFirst, "SetTreeID": _0_SALOMEDS.AttributeTreeNode._d_SetTreeID, "GetTreeID": _0_SALOMEDS.AttributeTreeNode._d_GetTreeID, "Append": _0_SALOMEDS.AttributeTreeNode._d_Append, "Prepend": _0_SALOMEDS.AttributeTreeNode._d_Prepend, "InsertBefore": _0_SALOMEDS.AttributeTreeNode._d_InsertBefore, "InsertAfter": _0_SALOMEDS.AttributeTreeNode._d_InsertAfter, "Remove": _0_SALOMEDS.AttributeTreeNode._d_Remove, "Depth": _0_SALOMEDS.AttributeTreeNode._d_Depth, "IsRoot": _0_SALOMEDS.AttributeTreeNode._d_IsRoot, "IsDescendant": _0_SALOMEDS.AttributeTreeNode._d_IsDescendant, "IsFather": _0_SALOMEDS.AttributeTreeNode._d_IsFather, "IsChild": _0_SALOMEDS.AttributeTreeNode._d_IsChild, "Label": _0_SALOMEDS.AttributeTreeNode._d_Label}
    _omni_op_d.update(_0_SALOMEDS__POA.GenericAttribute._omni_op_d)

AttributeTreeNode._omni_skeleton = AttributeTreeNode
_0_SALOMEDS__POA.AttributeTreeNode = AttributeTreeNode
omniORB.registerSkeleton(AttributeTreeNode._NP_RepositoryId, AttributeTreeNode)
del AttributeTreeNode
__name__ = "SALOMEDS"

# interface AttributeLocalID
_0_SALOMEDS._d_AttributeLocalID = (omniORB.tcInternal.tv_objref, "IDL:SALOMEDS/AttributeLocalID:1.0", "AttributeLocalID")
omniORB.typeMapping["IDL:SALOMEDS/AttributeLocalID:1.0"] = _0_SALOMEDS._d_AttributeLocalID
_0_SALOMEDS.AttributeLocalID = omniORB.newEmptyClass()
class AttributeLocalID (_0_SALOMEDS.GenericAttribute):
    _NP_RepositoryId = _0_SALOMEDS._d_AttributeLocalID[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_SALOMEDS.AttributeLocalID = AttributeLocalID
_0_SALOMEDS._tc_AttributeLocalID = omniORB.tcInternal.createTypeCode(_0_SALOMEDS._d_AttributeLocalID)
omniORB.registerType(AttributeLocalID._NP_RepositoryId, _0_SALOMEDS._d_AttributeLocalID, _0_SALOMEDS._tc_AttributeLocalID)

# AttributeLocalID operations and attributes
AttributeLocalID._d_Value = ((), (omniORB.tcInternal.tv_long, ), None)
AttributeLocalID._d_SetValue = ((omniORB.tcInternal.tv_long, ), (), None)

# AttributeLocalID object reference
class _objref_AttributeLocalID (_0_SALOMEDS._objref_GenericAttribute):
    _NP_RepositoryId = AttributeLocalID._NP_RepositoryId

    def __init__(self):
        _0_SALOMEDS._objref_GenericAttribute.__init__(self)

    def Value(self, *args):
        return _omnipy.invoke(self, "Value", _0_SALOMEDS.AttributeLocalID._d_Value, args)

    def SetValue(self, *args):
        return _omnipy.invoke(self, "SetValue", _0_SALOMEDS.AttributeLocalID._d_SetValue, args)

    __methods__ = ["Value", "SetValue"] + _0_SALOMEDS._objref_GenericAttribute.__methods__

omniORB.registerObjref(AttributeLocalID._NP_RepositoryId, _objref_AttributeLocalID)
_0_SALOMEDS._objref_AttributeLocalID = _objref_AttributeLocalID
del AttributeLocalID, _objref_AttributeLocalID

# AttributeLocalID skeleton
__name__ = "SALOMEDS__POA"
class AttributeLocalID (_0_SALOMEDS__POA.GenericAttribute):
    _NP_RepositoryId = _0_SALOMEDS.AttributeLocalID._NP_RepositoryId


    _omni_op_d = {"Value": _0_SALOMEDS.AttributeLocalID._d_Value, "SetValue": _0_SALOMEDS.AttributeLocalID._d_SetValue}
    _omni_op_d.update(_0_SALOMEDS__POA.GenericAttribute._omni_op_d)

AttributeLocalID._omni_skeleton = AttributeLocalID
_0_SALOMEDS__POA.AttributeLocalID = AttributeLocalID
omniORB.registerSkeleton(AttributeLocalID._NP_RepositoryId, AttributeLocalID)
del AttributeLocalID
__name__ = "SALOMEDS"

# interface AttributeUserID
_0_SALOMEDS._d_AttributeUserID = (omniORB.tcInternal.tv_objref, "IDL:SALOMEDS/AttributeUserID:1.0", "AttributeUserID")
omniORB.typeMapping["IDL:SALOMEDS/AttributeUserID:1.0"] = _0_SALOMEDS._d_AttributeUserID
_0_SALOMEDS.AttributeUserID = omniORB.newEmptyClass()
class AttributeUserID (_0_SALOMEDS.GenericAttribute):
    _NP_RepositoryId = _0_SALOMEDS._d_AttributeUserID[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_SALOMEDS.AttributeUserID = AttributeUserID
_0_SALOMEDS._tc_AttributeUserID = omniORB.tcInternal.createTypeCode(_0_SALOMEDS._d_AttributeUserID)
omniORB.registerType(AttributeUserID._NP_RepositoryId, _0_SALOMEDS._d_AttributeUserID, _0_SALOMEDS._tc_AttributeUserID)

# AttributeUserID operations and attributes
AttributeUserID._d_Value = ((), ((omniORB.tcInternal.tv_string,0), ), None)
AttributeUserID._d_SetValue = (((omniORB.tcInternal.tv_string,0), ), (), None)

# AttributeUserID object reference
class _objref_AttributeUserID (_0_SALOMEDS._objref_GenericAttribute):
    _NP_RepositoryId = AttributeUserID._NP_RepositoryId

    def __init__(self):
        _0_SALOMEDS._objref_GenericAttribute.__init__(self)

    def Value(self, *args):
        return _omnipy.invoke(self, "Value", _0_SALOMEDS.AttributeUserID._d_Value, args)

    def SetValue(self, *args):
        return _omnipy.invoke(self, "SetValue", _0_SALOMEDS.AttributeUserID._d_SetValue, args)

    __methods__ = ["Value", "SetValue"] + _0_SALOMEDS._objref_GenericAttribute.__methods__

omniORB.registerObjref(AttributeUserID._NP_RepositoryId, _objref_AttributeUserID)
_0_SALOMEDS._objref_AttributeUserID = _objref_AttributeUserID
del AttributeUserID, _objref_AttributeUserID

# AttributeUserID skeleton
__name__ = "SALOMEDS__POA"
class AttributeUserID (_0_SALOMEDS__POA.GenericAttribute):
    _NP_RepositoryId = _0_SALOMEDS.AttributeUserID._NP_RepositoryId


    _omni_op_d = {"Value": _0_SALOMEDS.AttributeUserID._d_Value, "SetValue": _0_SALOMEDS.AttributeUserID._d_SetValue}
    _omni_op_d.update(_0_SALOMEDS__POA.GenericAttribute._omni_op_d)

AttributeUserID._omni_skeleton = AttributeUserID
_0_SALOMEDS__POA.AttributeUserID = AttributeUserID
omniORB.registerSkeleton(AttributeUserID._NP_RepositoryId, AttributeUserID)
del AttributeUserID
__name__ = "SALOMEDS"

# interface AttributeTarget
_0_SALOMEDS._d_AttributeTarget = (omniORB.tcInternal.tv_objref, "IDL:SALOMEDS/AttributeTarget:1.0", "AttributeTarget")
omniORB.typeMapping["IDL:SALOMEDS/AttributeTarget:1.0"] = _0_SALOMEDS._d_AttributeTarget
_0_SALOMEDS.AttributeTarget = omniORB.newEmptyClass()
class AttributeTarget (_0_SALOMEDS.GenericAttribute):
    _NP_RepositoryId = _0_SALOMEDS._d_AttributeTarget[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_SALOMEDS.AttributeTarget = AttributeTarget
_0_SALOMEDS._tc_AttributeTarget = omniORB.tcInternal.createTypeCode(_0_SALOMEDS._d_AttributeTarget)
omniORB.registerType(AttributeTarget._NP_RepositoryId, _0_SALOMEDS._d_AttributeTarget, _0_SALOMEDS._tc_AttributeTarget)

# AttributeTarget operations and attributes
AttributeTarget._d_Add = ((omniORB.typeMapping["IDL:SALOMEDS/SObject:1.0"], ), (), None)
AttributeTarget._d_Get = ((), (omniORB.typeMapping["IDL:SALOMEDS/Study/ListOfSObject:1.0"], ), None)
AttributeTarget._d_Remove = ((omniORB.typeMapping["IDL:SALOMEDS/SObject:1.0"], ), (), None)

# AttributeTarget object reference
class _objref_AttributeTarget (_0_SALOMEDS._objref_GenericAttribute):
    _NP_RepositoryId = AttributeTarget._NP_RepositoryId

    def __init__(self):
        _0_SALOMEDS._objref_GenericAttribute.__init__(self)

    def Add(self, *args):
        return _omnipy.invoke(self, "Add", _0_SALOMEDS.AttributeTarget._d_Add, args)

    def Get(self, *args):
        return _omnipy.invoke(self, "Get", _0_SALOMEDS.AttributeTarget._d_Get, args)

    def Remove(self, *args):
        return _omnipy.invoke(self, "Remove", _0_SALOMEDS.AttributeTarget._d_Remove, args)

    __methods__ = ["Add", "Get", "Remove"] + _0_SALOMEDS._objref_GenericAttribute.__methods__

omniORB.registerObjref(AttributeTarget._NP_RepositoryId, _objref_AttributeTarget)
_0_SALOMEDS._objref_AttributeTarget = _objref_AttributeTarget
del AttributeTarget, _objref_AttributeTarget

# AttributeTarget skeleton
__name__ = "SALOMEDS__POA"
class AttributeTarget (_0_SALOMEDS__POA.GenericAttribute):
    _NP_RepositoryId = _0_SALOMEDS.AttributeTarget._NP_RepositoryId


    _omni_op_d = {"Add": _0_SALOMEDS.AttributeTarget._d_Add, "Get": _0_SALOMEDS.AttributeTarget._d_Get, "Remove": _0_SALOMEDS.AttributeTarget._d_Remove}
    _omni_op_d.update(_0_SALOMEDS__POA.GenericAttribute._omni_op_d)

AttributeTarget._omni_skeleton = AttributeTarget
_0_SALOMEDS__POA.AttributeTarget = AttributeTarget
omniORB.registerSkeleton(AttributeTarget._NP_RepositoryId, AttributeTarget)
del AttributeTarget
__name__ = "SALOMEDS"

# interface AttributeTable
_0_SALOMEDS._d_AttributeTable = (omniORB.tcInternal.tv_objref, "IDL:SALOMEDS/AttributeTable:1.0", "AttributeTable")
omniORB.typeMapping["IDL:SALOMEDS/AttributeTable:1.0"] = _0_SALOMEDS._d_AttributeTable
_0_SALOMEDS.AttributeTable = omniORB.newEmptyClass()
class AttributeTable (_0_SALOMEDS.GenericAttribute):
    _NP_RepositoryId = _0_SALOMEDS._d_AttributeTable[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil

    
    # exception IncorrectIndex
    _0_SALOMEDS.AttributeTable.IncorrectIndex = omniORB.newEmptyClass()
    class IncorrectIndex (CORBA.UserException):
        _NP_RepositoryId = "IDL:SALOMEDS/AttributeTable/IncorrectIndex:1.0"

        _NP_ClassName = "SALOMEDS.AttributeTable.IncorrectIndex"

        def __init__(self):
            CORBA.UserException.__init__(self)
    
    _d_IncorrectIndex  = (omniORB.tcInternal.tv_except, IncorrectIndex, IncorrectIndex._NP_RepositoryId, "IncorrectIndex")
    _tc_IncorrectIndex = omniORB.tcInternal.createTypeCode(_d_IncorrectIndex)
    omniORB.registerType(IncorrectIndex._NP_RepositoryId, _d_IncorrectIndex, _tc_IncorrectIndex)
    
    # exception IncorrectArgumentLength
    _0_SALOMEDS.AttributeTable.IncorrectArgumentLength = omniORB.newEmptyClass()
    class IncorrectArgumentLength (CORBA.UserException):
        _NP_RepositoryId = "IDL:SALOMEDS/AttributeTable/IncorrectArgumentLength:1.0"

        _NP_ClassName = "SALOMEDS.AttributeTable.IncorrectArgumentLength"

        def __init__(self):
            CORBA.UserException.__init__(self)
    
    _d_IncorrectArgumentLength  = (omniORB.tcInternal.tv_except, IncorrectArgumentLength, IncorrectArgumentLength._NP_RepositoryId, "IncorrectArgumentLength")
    _tc_IncorrectArgumentLength = omniORB.tcInternal.createTypeCode(_d_IncorrectArgumentLength)
    omniORB.registerType(IncorrectArgumentLength._NP_RepositoryId, _d_IncorrectArgumentLength, _tc_IncorrectArgumentLength)
    
    # enum SortOrder
    AscendingOrder = omniORB.EnumItem("AscendingOrder", 0)
    DescendingOrder = omniORB.EnumItem("DescendingOrder", 1)
    SortOrder = omniORB.Enum("IDL:SALOMEDS/AttributeTable/SortOrder:1.0", (AscendingOrder, DescendingOrder,))

    _d_SortOrder  = (omniORB.tcInternal.tv_enum, SortOrder._NP_RepositoryId, "SortOrder", SortOrder._items)
    _tc_SortOrder = omniORB.tcInternal.createTypeCode(_d_SortOrder)
    omniORB.registerType(SortOrder._NP_RepositoryId, _d_SortOrder, _tc_SortOrder)
    
    # enum SortPolicy
    EmptyLowest = omniORB.EnumItem("EmptyLowest", 0)
    EmptyHighest = omniORB.EnumItem("EmptyHighest", 1)
    EmptyFirst = omniORB.EnumItem("EmptyFirst", 2)
    EmptyLast = omniORB.EnumItem("EmptyLast", 3)
    EmptyIgnore = omniORB.EnumItem("EmptyIgnore", 4)
    SortPolicy = omniORB.Enum("IDL:SALOMEDS/AttributeTable/SortPolicy:1.0", (EmptyLowest, EmptyHighest, EmptyFirst, EmptyLast, EmptyIgnore,))

    _d_SortPolicy  = (omniORB.tcInternal.tv_enum, SortPolicy._NP_RepositoryId, "SortPolicy", SortPolicy._items)
    _tc_SortPolicy = omniORB.tcInternal.createTypeCode(_d_SortPolicy)
    omniORB.registerType(SortPolicy._NP_RepositoryId, _d_SortPolicy, _tc_SortPolicy)


_0_SALOMEDS.AttributeTable = AttributeTable
_0_SALOMEDS._tc_AttributeTable = omniORB.tcInternal.createTypeCode(_0_SALOMEDS._d_AttributeTable)
omniORB.registerType(AttributeTable._NP_RepositoryId, _0_SALOMEDS._d_AttributeTable, _0_SALOMEDS._tc_AttributeTable)

# AttributeTable operations and attributes
AttributeTable._d_SetTitle = (((omniORB.tcInternal.tv_string,0), ), (), None)
AttributeTable._d_GetTitle = ((), ((omniORB.tcInternal.tv_string,0), ), None)
AttributeTable._d_SetRowTitle = ((omniORB.tcInternal.tv_long, (omniORB.tcInternal.tv_string,0)), (), {_0_SALOMEDS.AttributeTable.IncorrectIndex._NP_RepositoryId: _0_SALOMEDS.AttributeTable._d_IncorrectIndex})
AttributeTable._d_GetRowTitle = ((omniORB.tcInternal.tv_long, ), ((omniORB.tcInternal.tv_string,0), ), {_0_SALOMEDS.AttributeTable.IncorrectIndex._NP_RepositoryId: _0_SALOMEDS.AttributeTable._d_IncorrectIndex})
AttributeTable._d_SetRowTitles = ((omniORB.typeMapping["IDL:SALOMEDS/StringSeq:1.0"], ), (), {_0_SALOMEDS.AttributeTable.IncorrectArgumentLength._NP_RepositoryId: _0_SALOMEDS.AttributeTable._d_IncorrectArgumentLength})
AttributeTable._d_GetRowTitles = ((), (omniORB.typeMapping["IDL:SALOMEDS/StringSeq:1.0"], ), None)
AttributeTable._d_SetColumnTitle = ((omniORB.tcInternal.tv_long, (omniORB.tcInternal.tv_string,0)), (), {_0_SALOMEDS.AttributeTable.IncorrectIndex._NP_RepositoryId: _0_SALOMEDS.AttributeTable._d_IncorrectIndex})
AttributeTable._d_GetColumnTitle = ((omniORB.tcInternal.tv_long, ), ((omniORB.tcInternal.tv_string,0), ), {_0_SALOMEDS.AttributeTable.IncorrectIndex._NP_RepositoryId: _0_SALOMEDS.AttributeTable._d_IncorrectIndex})
AttributeTable._d_SetColumnTitles = ((omniORB.typeMapping["IDL:SALOMEDS/StringSeq:1.0"], ), (), {_0_SALOMEDS.AttributeTable.IncorrectArgumentLength._NP_RepositoryId: _0_SALOMEDS.AttributeTable._d_IncorrectArgumentLength})
AttributeTable._d_GetColumnTitles = ((), (omniORB.typeMapping["IDL:SALOMEDS/StringSeq:1.0"], ), None)
AttributeTable._d_SetRowUnit = ((omniORB.tcInternal.tv_long, (omniORB.tcInternal.tv_string,0)), (), {_0_SALOMEDS.AttributeTable.IncorrectIndex._NP_RepositoryId: _0_SALOMEDS.AttributeTable._d_IncorrectIndex})
AttributeTable._d_GetRowUnit = ((omniORB.tcInternal.tv_long, ), ((omniORB.tcInternal.tv_string,0), ), {_0_SALOMEDS.AttributeTable.IncorrectIndex._NP_RepositoryId: _0_SALOMEDS.AttributeTable._d_IncorrectIndex})
AttributeTable._d_SetRowUnits = ((omniORB.typeMapping["IDL:SALOMEDS/StringSeq:1.0"], ), (), {_0_SALOMEDS.AttributeTable.IncorrectArgumentLength._NP_RepositoryId: _0_SALOMEDS.AttributeTable._d_IncorrectArgumentLength})
AttributeTable._d_GetRowUnits = ((), (omniORB.typeMapping["IDL:SALOMEDS/StringSeq:1.0"], ), None)
AttributeTable._d_GetNbRows = ((), (omniORB.tcInternal.tv_long, ), None)
AttributeTable._d_GetNbColumns = ((), (omniORB.tcInternal.tv_long, ), None)
AttributeTable._d_HasValue = ((omniORB.tcInternal.tv_long, omniORB.tcInternal.tv_long), (omniORB.tcInternal.tv_boolean, ), None)
AttributeTable._d_RemoveValue = ((omniORB.tcInternal.tv_long, omniORB.tcInternal.tv_long), (), {_0_SALOMEDS.AttributeTable.IncorrectIndex._NP_RepositoryId: _0_SALOMEDS.AttributeTable._d_IncorrectIndex})
AttributeTable._d_SetNbColumns = ((omniORB.tcInternal.tv_long, ), (), None)
AttributeTable._d_GetRowSetIndices = ((omniORB.tcInternal.tv_long, ), (omniORB.typeMapping["IDL:SALOMEDS/LongSeq:1.0"], ), {_0_SALOMEDS.AttributeTable.IncorrectIndex._NP_RepositoryId: _0_SALOMEDS.AttributeTable._d_IncorrectIndex})
AttributeTable._d_SortRow = ((omniORB.tcInternal.tv_long, omniORB.typeMapping["IDL:SALOMEDS/AttributeTable/SortOrder:1.0"], omniORB.typeMapping["IDL:SALOMEDS/AttributeTable/SortPolicy:1.0"]), (omniORB.typeMapping["IDL:SALOMEDS/LongSeq:1.0"], ), {_0_SALOMEDS.AttributeTable.IncorrectIndex._NP_RepositoryId: _0_SALOMEDS.AttributeTable._d_IncorrectIndex})
AttributeTable._d_SortColumn = ((omniORB.tcInternal.tv_long, omniORB.typeMapping["IDL:SALOMEDS/AttributeTable/SortOrder:1.0"], omniORB.typeMapping["IDL:SALOMEDS/AttributeTable/SortPolicy:1.0"]), (omniORB.typeMapping["IDL:SALOMEDS/LongSeq:1.0"], ), {_0_SALOMEDS.AttributeTable.IncorrectIndex._NP_RepositoryId: _0_SALOMEDS.AttributeTable._d_IncorrectIndex})
AttributeTable._d_SortByRow = ((omniORB.tcInternal.tv_long, omniORB.typeMapping["IDL:SALOMEDS/AttributeTable/SortOrder:1.0"], omniORB.typeMapping["IDL:SALOMEDS/AttributeTable/SortPolicy:1.0"]), (omniORB.typeMapping["IDL:SALOMEDS/LongSeq:1.0"], ), {_0_SALOMEDS.AttributeTable.IncorrectIndex._NP_RepositoryId: _0_SALOMEDS.AttributeTable._d_IncorrectIndex})
AttributeTable._d_SortByColumn = ((omniORB.tcInternal.tv_long, omniORB.typeMapping["IDL:SALOMEDS/AttributeTable/SortOrder:1.0"], omniORB.typeMapping["IDL:SALOMEDS/AttributeTable/SortPolicy:1.0"]), (omniORB.typeMapping["IDL:SALOMEDS/LongSeq:1.0"], ), {_0_SALOMEDS.AttributeTable.IncorrectIndex._NP_RepositoryId: _0_SALOMEDS.AttributeTable._d_IncorrectIndex})
AttributeTable._d_SwapCells = ((omniORB.tcInternal.tv_long, omniORB.tcInternal.tv_long, omniORB.tcInternal.tv_long, omniORB.tcInternal.tv_long), (), {_0_SALOMEDS.AttributeTable.IncorrectIndex._NP_RepositoryId: _0_SALOMEDS.AttributeTable._d_IncorrectIndex})
AttributeTable._d_SwapRows = ((omniORB.tcInternal.tv_long, omniORB.tcInternal.tv_long), (), {_0_SALOMEDS.AttributeTable.IncorrectIndex._NP_RepositoryId: _0_SALOMEDS.AttributeTable._d_IncorrectIndex})
AttributeTable._d_SwapColumns = ((omniORB.tcInternal.tv_long, omniORB.tcInternal.tv_long), (), {_0_SALOMEDS.AttributeTable.IncorrectIndex._NP_RepositoryId: _0_SALOMEDS.AttributeTable._d_IncorrectIndex})
AttributeTable._d_ReadFromFile = ((omniORB.typeMapping["IDL:SALOMEDS/TMPFile:1.0"], ), (omniORB.tcInternal.tv_boolean, ), None)
AttributeTable._d_SaveToFile = ((), (omniORB.typeMapping["IDL:SALOMEDS/TMPFile:1.0"], ), None)

# AttributeTable object reference
class _objref_AttributeTable (_0_SALOMEDS._objref_GenericAttribute):
    _NP_RepositoryId = AttributeTable._NP_RepositoryId

    def __init__(self):
        _0_SALOMEDS._objref_GenericAttribute.__init__(self)

    def SetTitle(self, *args):
        return _omnipy.invoke(self, "SetTitle", _0_SALOMEDS.AttributeTable._d_SetTitle, args)

    def GetTitle(self, *args):
        return _omnipy.invoke(self, "GetTitle", _0_SALOMEDS.AttributeTable._d_GetTitle, args)

    def SetRowTitle(self, *args):
        return _omnipy.invoke(self, "SetRowTitle", _0_SALOMEDS.AttributeTable._d_SetRowTitle, args)

    def GetRowTitle(self, *args):
        return _omnipy.invoke(self, "GetRowTitle", _0_SALOMEDS.AttributeTable._d_GetRowTitle, args)

    def SetRowTitles(self, *args):
        return _omnipy.invoke(self, "SetRowTitles", _0_SALOMEDS.AttributeTable._d_SetRowTitles, args)

    def GetRowTitles(self, *args):
        return _omnipy.invoke(self, "GetRowTitles", _0_SALOMEDS.AttributeTable._d_GetRowTitles, args)

    def SetColumnTitle(self, *args):
        return _omnipy.invoke(self, "SetColumnTitle", _0_SALOMEDS.AttributeTable._d_SetColumnTitle, args)

    def GetColumnTitle(self, *args):
        return _omnipy.invoke(self, "GetColumnTitle", _0_SALOMEDS.AttributeTable._d_GetColumnTitle, args)

    def SetColumnTitles(self, *args):
        return _omnipy.invoke(self, "SetColumnTitles", _0_SALOMEDS.AttributeTable._d_SetColumnTitles, args)

    def GetColumnTitles(self, *args):
        return _omnipy.invoke(self, "GetColumnTitles", _0_SALOMEDS.AttributeTable._d_GetColumnTitles, args)

    def SetRowUnit(self, *args):
        return _omnipy.invoke(self, "SetRowUnit", _0_SALOMEDS.AttributeTable._d_SetRowUnit, args)

    def GetRowUnit(self, *args):
        return _omnipy.invoke(self, "GetRowUnit", _0_SALOMEDS.AttributeTable._d_GetRowUnit, args)

    def SetRowUnits(self, *args):
        return _omnipy.invoke(self, "SetRowUnits", _0_SALOMEDS.AttributeTable._d_SetRowUnits, args)

    def GetRowUnits(self, *args):
        return _omnipy.invoke(self, "GetRowUnits", _0_SALOMEDS.AttributeTable._d_GetRowUnits, args)

    def GetNbRows(self, *args):
        return _omnipy.invoke(self, "GetNbRows", _0_SALOMEDS.AttributeTable._d_GetNbRows, args)

    def GetNbColumns(self, *args):
        return _omnipy.invoke(self, "GetNbColumns", _0_SALOMEDS.AttributeTable._d_GetNbColumns, args)

    def HasValue(self, *args):
        return _omnipy.invoke(self, "HasValue", _0_SALOMEDS.AttributeTable._d_HasValue, args)

    def RemoveValue(self, *args):
        return _omnipy.invoke(self, "RemoveValue", _0_SALOMEDS.AttributeTable._d_RemoveValue, args)

    def SetNbColumns(self, *args):
        return _omnipy.invoke(self, "SetNbColumns", _0_SALOMEDS.AttributeTable._d_SetNbColumns, args)

    def GetRowSetIndices(self, *args):
        return _omnipy.invoke(self, "GetRowSetIndices", _0_SALOMEDS.AttributeTable._d_GetRowSetIndices, args)

    def SortRow(self, *args):
        return _omnipy.invoke(self, "SortRow", _0_SALOMEDS.AttributeTable._d_SortRow, args)

    def SortColumn(self, *args):
        return _omnipy.invoke(self, "SortColumn", _0_SALOMEDS.AttributeTable._d_SortColumn, args)

    def SortByRow(self, *args):
        return _omnipy.invoke(self, "SortByRow", _0_SALOMEDS.AttributeTable._d_SortByRow, args)

    def SortByColumn(self, *args):
        return _omnipy.invoke(self, "SortByColumn", _0_SALOMEDS.AttributeTable._d_SortByColumn, args)

    def SwapCells(self, *args):
        return _omnipy.invoke(self, "SwapCells", _0_SALOMEDS.AttributeTable._d_SwapCells, args)

    def SwapRows(self, *args):
        return _omnipy.invoke(self, "SwapRows", _0_SALOMEDS.AttributeTable._d_SwapRows, args)

    def SwapColumns(self, *args):
        return _omnipy.invoke(self, "SwapColumns", _0_SALOMEDS.AttributeTable._d_SwapColumns, args)

    def ReadFromFile(self, *args):
        return _omnipy.invoke(self, "ReadFromFile", _0_SALOMEDS.AttributeTable._d_ReadFromFile, args)

    def SaveToFile(self, *args):
        return _omnipy.invoke(self, "SaveToFile", _0_SALOMEDS.AttributeTable._d_SaveToFile, args)

    __methods__ = ["SetTitle", "GetTitle", "SetRowTitle", "GetRowTitle", "SetRowTitles", "GetRowTitles", "SetColumnTitle", "GetColumnTitle", "SetColumnTitles", "GetColumnTitles", "SetRowUnit", "GetRowUnit", "SetRowUnits", "GetRowUnits", "GetNbRows", "GetNbColumns", "HasValue", "RemoveValue", "SetNbColumns", "GetRowSetIndices", "SortRow", "SortColumn", "SortByRow", "SortByColumn", "SwapCells", "SwapRows", "SwapColumns", "ReadFromFile", "SaveToFile"] + _0_SALOMEDS._objref_GenericAttribute.__methods__

omniORB.registerObjref(AttributeTable._NP_RepositoryId, _objref_AttributeTable)
_0_SALOMEDS._objref_AttributeTable = _objref_AttributeTable
del AttributeTable, _objref_AttributeTable

# AttributeTable skeleton
__name__ = "SALOMEDS__POA"
class AttributeTable (_0_SALOMEDS__POA.GenericAttribute):
    _NP_RepositoryId = _0_SALOMEDS.AttributeTable._NP_RepositoryId


    _omni_op_d = {"SetTitle": _0_SALOMEDS.AttributeTable._d_SetTitle, "GetTitle": _0_SALOMEDS.AttributeTable._d_GetTitle, "SetRowTitle": _0_SALOMEDS.AttributeTable._d_SetRowTitle, "GetRowTitle": _0_SALOMEDS.AttributeTable._d_GetRowTitle, "SetRowTitles": _0_SALOMEDS.AttributeTable._d_SetRowTitles, "GetRowTitles": _0_SALOMEDS.AttributeTable._d_GetRowTitles, "SetColumnTitle": _0_SALOMEDS.AttributeTable._d_SetColumnTitle, "GetColumnTitle": _0_SALOMEDS.AttributeTable._d_GetColumnTitle, "SetColumnTitles": _0_SALOMEDS.AttributeTable._d_SetColumnTitles, "GetColumnTitles": _0_SALOMEDS.AttributeTable._d_GetColumnTitles, "SetRowUnit": _0_SALOMEDS.AttributeTable._d_SetRowUnit, "GetRowUnit": _0_SALOMEDS.AttributeTable._d_GetRowUnit, "SetRowUnits": _0_SALOMEDS.AttributeTable._d_SetRowUnits, "GetRowUnits": _0_SALOMEDS.AttributeTable._d_GetRowUnits, "GetNbRows": _0_SALOMEDS.AttributeTable._d_GetNbRows, "GetNbColumns": _0_SALOMEDS.AttributeTable._d_GetNbColumns, "HasValue": _0_SALOMEDS.AttributeTable._d_HasValue, "RemoveValue": _0_SALOMEDS.AttributeTable._d_RemoveValue, "SetNbColumns": _0_SALOMEDS.AttributeTable._d_SetNbColumns, "GetRowSetIndices": _0_SALOMEDS.AttributeTable._d_GetRowSetIndices, "SortRow": _0_SALOMEDS.AttributeTable._d_SortRow, "SortColumn": _0_SALOMEDS.AttributeTable._d_SortColumn, "SortByRow": _0_SALOMEDS.AttributeTable._d_SortByRow, "SortByColumn": _0_SALOMEDS.AttributeTable._d_SortByColumn, "SwapCells": _0_SALOMEDS.AttributeTable._d_SwapCells, "SwapRows": _0_SALOMEDS.AttributeTable._d_SwapRows, "SwapColumns": _0_SALOMEDS.AttributeTable._d_SwapColumns, "ReadFromFile": _0_SALOMEDS.AttributeTable._d_ReadFromFile, "SaveToFile": _0_SALOMEDS.AttributeTable._d_SaveToFile}
    _omni_op_d.update(_0_SALOMEDS__POA.GenericAttribute._omni_op_d)

AttributeTable._omni_skeleton = AttributeTable
_0_SALOMEDS__POA.AttributeTable = AttributeTable
omniORB.registerSkeleton(AttributeTable._NP_RepositoryId, AttributeTable)
del AttributeTable
__name__ = "SALOMEDS"

# interface AttributeTableOfInteger
_0_SALOMEDS._d_AttributeTableOfInteger = (omniORB.tcInternal.tv_objref, "IDL:SALOMEDS/AttributeTableOfInteger:1.0", "AttributeTableOfInteger")
omniORB.typeMapping["IDL:SALOMEDS/AttributeTableOfInteger:1.0"] = _0_SALOMEDS._d_AttributeTableOfInteger
_0_SALOMEDS.AttributeTableOfInteger = omniORB.newEmptyClass()
class AttributeTableOfInteger (_0_SALOMEDS.AttributeTable):
    _NP_RepositoryId = _0_SALOMEDS._d_AttributeTableOfInteger[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_SALOMEDS.AttributeTableOfInteger = AttributeTableOfInteger
_0_SALOMEDS._tc_AttributeTableOfInteger = omniORB.tcInternal.createTypeCode(_0_SALOMEDS._d_AttributeTableOfInteger)
omniORB.registerType(AttributeTableOfInteger._NP_RepositoryId, _0_SALOMEDS._d_AttributeTableOfInteger, _0_SALOMEDS._tc_AttributeTableOfInteger)

# AttributeTableOfInteger operations and attributes
AttributeTableOfInteger._d_AddRow = ((omniORB.typeMapping["IDL:SALOMEDS/LongSeq:1.0"], ), (), {_0_SALOMEDS.AttributeTable.IncorrectArgumentLength._NP_RepositoryId: _0_SALOMEDS.AttributeTable._d_IncorrectArgumentLength})
AttributeTableOfInteger._d_SetRow = ((omniORB.tcInternal.tv_long, omniORB.typeMapping["IDL:SALOMEDS/LongSeq:1.0"]), (), {_0_SALOMEDS.AttributeTable.IncorrectArgumentLength._NP_RepositoryId: _0_SALOMEDS.AttributeTable._d_IncorrectArgumentLength, _0_SALOMEDS.AttributeTable.IncorrectIndex._NP_RepositoryId: _0_SALOMEDS.AttributeTable._d_IncorrectIndex})
AttributeTableOfInteger._d_GetRow = ((omniORB.tcInternal.tv_long, ), (omniORB.typeMapping["IDL:SALOMEDS/LongSeq:1.0"], ), {_0_SALOMEDS.AttributeTable.IncorrectIndex._NP_RepositoryId: _0_SALOMEDS.AttributeTable._d_IncorrectIndex})
AttributeTableOfInteger._d_AddColumn = ((omniORB.typeMapping["IDL:SALOMEDS/LongSeq:1.0"], ), (), {_0_SALOMEDS.AttributeTable.IncorrectArgumentLength._NP_RepositoryId: _0_SALOMEDS.AttributeTable._d_IncorrectArgumentLength})
AttributeTableOfInteger._d_SetColumn = ((omniORB.tcInternal.tv_long, omniORB.typeMapping["IDL:SALOMEDS/LongSeq:1.0"]), (), {_0_SALOMEDS.AttributeTable.IncorrectArgumentLength._NP_RepositoryId: _0_SALOMEDS.AttributeTable._d_IncorrectArgumentLength, _0_SALOMEDS.AttributeTable.IncorrectIndex._NP_RepositoryId: _0_SALOMEDS.AttributeTable._d_IncorrectIndex})
AttributeTableOfInteger._d_GetColumn = ((omniORB.tcInternal.tv_long, ), (omniORB.typeMapping["IDL:SALOMEDS/LongSeq:1.0"], ), {_0_SALOMEDS.AttributeTable.IncorrectIndex._NP_RepositoryId: _0_SALOMEDS.AttributeTable._d_IncorrectIndex})
AttributeTableOfInteger._d_PutValue = ((omniORB.tcInternal.tv_long, omniORB.tcInternal.tv_long, omniORB.tcInternal.tv_long), (), {_0_SALOMEDS.AttributeTable.IncorrectIndex._NP_RepositoryId: _0_SALOMEDS.AttributeTable._d_IncorrectIndex})
AttributeTableOfInteger._d_GetValue = ((omniORB.tcInternal.tv_long, omniORB.tcInternal.tv_long), (omniORB.tcInternal.tv_long, ), {_0_SALOMEDS.AttributeTable.IncorrectIndex._NP_RepositoryId: _0_SALOMEDS.AttributeTable._d_IncorrectIndex})

# AttributeTableOfInteger object reference
class _objref_AttributeTableOfInteger (_0_SALOMEDS._objref_AttributeTable):
    _NP_RepositoryId = AttributeTableOfInteger._NP_RepositoryId

    def __init__(self):
        _0_SALOMEDS._objref_AttributeTable.__init__(self)

    def AddRow(self, *args):
        return _omnipy.invoke(self, "AddRow", _0_SALOMEDS.AttributeTableOfInteger._d_AddRow, args)

    def SetRow(self, *args):
        return _omnipy.invoke(self, "SetRow", _0_SALOMEDS.AttributeTableOfInteger._d_SetRow, args)

    def GetRow(self, *args):
        return _omnipy.invoke(self, "GetRow", _0_SALOMEDS.AttributeTableOfInteger._d_GetRow, args)

    def AddColumn(self, *args):
        return _omnipy.invoke(self, "AddColumn", _0_SALOMEDS.AttributeTableOfInteger._d_AddColumn, args)

    def SetColumn(self, *args):
        return _omnipy.invoke(self, "SetColumn", _0_SALOMEDS.AttributeTableOfInteger._d_SetColumn, args)

    def GetColumn(self, *args):
        return _omnipy.invoke(self, "GetColumn", _0_SALOMEDS.AttributeTableOfInteger._d_GetColumn, args)

    def PutValue(self, *args):
        return _omnipy.invoke(self, "PutValue", _0_SALOMEDS.AttributeTableOfInteger._d_PutValue, args)

    def GetValue(self, *args):
        return _omnipy.invoke(self, "GetValue", _0_SALOMEDS.AttributeTableOfInteger._d_GetValue, args)

    __methods__ = ["AddRow", "SetRow", "GetRow", "AddColumn", "SetColumn", "GetColumn", "PutValue", "GetValue"] + _0_SALOMEDS._objref_AttributeTable.__methods__

omniORB.registerObjref(AttributeTableOfInteger._NP_RepositoryId, _objref_AttributeTableOfInteger)
_0_SALOMEDS._objref_AttributeTableOfInteger = _objref_AttributeTableOfInteger
del AttributeTableOfInteger, _objref_AttributeTableOfInteger

# AttributeTableOfInteger skeleton
__name__ = "SALOMEDS__POA"
class AttributeTableOfInteger (_0_SALOMEDS__POA.AttributeTable):
    _NP_RepositoryId = _0_SALOMEDS.AttributeTableOfInteger._NP_RepositoryId


    _omni_op_d = {"AddRow": _0_SALOMEDS.AttributeTableOfInteger._d_AddRow, "SetRow": _0_SALOMEDS.AttributeTableOfInteger._d_SetRow, "GetRow": _0_SALOMEDS.AttributeTableOfInteger._d_GetRow, "AddColumn": _0_SALOMEDS.AttributeTableOfInteger._d_AddColumn, "SetColumn": _0_SALOMEDS.AttributeTableOfInteger._d_SetColumn, "GetColumn": _0_SALOMEDS.AttributeTableOfInteger._d_GetColumn, "PutValue": _0_SALOMEDS.AttributeTableOfInteger._d_PutValue, "GetValue": _0_SALOMEDS.AttributeTableOfInteger._d_GetValue}
    _omni_op_d.update(_0_SALOMEDS__POA.AttributeTable._omni_op_d)

AttributeTableOfInteger._omni_skeleton = AttributeTableOfInteger
_0_SALOMEDS__POA.AttributeTableOfInteger = AttributeTableOfInteger
omniORB.registerSkeleton(AttributeTableOfInteger._NP_RepositoryId, AttributeTableOfInteger)
del AttributeTableOfInteger
__name__ = "SALOMEDS"

# interface AttributeTableOfReal
_0_SALOMEDS._d_AttributeTableOfReal = (omniORB.tcInternal.tv_objref, "IDL:SALOMEDS/AttributeTableOfReal:1.0", "AttributeTableOfReal")
omniORB.typeMapping["IDL:SALOMEDS/AttributeTableOfReal:1.0"] = _0_SALOMEDS._d_AttributeTableOfReal
_0_SALOMEDS.AttributeTableOfReal = omniORB.newEmptyClass()
class AttributeTableOfReal (_0_SALOMEDS.AttributeTable):
    _NP_RepositoryId = _0_SALOMEDS._d_AttributeTableOfReal[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_SALOMEDS.AttributeTableOfReal = AttributeTableOfReal
_0_SALOMEDS._tc_AttributeTableOfReal = omniORB.tcInternal.createTypeCode(_0_SALOMEDS._d_AttributeTableOfReal)
omniORB.registerType(AttributeTableOfReal._NP_RepositoryId, _0_SALOMEDS._d_AttributeTableOfReal, _0_SALOMEDS._tc_AttributeTableOfReal)

# AttributeTableOfReal operations and attributes
AttributeTableOfReal._d_AddRow = ((omniORB.typeMapping["IDL:SALOMEDS/DoubleSeq:1.0"], ), (), {_0_SALOMEDS.AttributeTable.IncorrectArgumentLength._NP_RepositoryId: _0_SALOMEDS.AttributeTable._d_IncorrectArgumentLength})
AttributeTableOfReal._d_SetRow = ((omniORB.tcInternal.tv_long, omniORB.typeMapping["IDL:SALOMEDS/DoubleSeq:1.0"]), (), {_0_SALOMEDS.AttributeTable.IncorrectArgumentLength._NP_RepositoryId: _0_SALOMEDS.AttributeTable._d_IncorrectArgumentLength, _0_SALOMEDS.AttributeTable.IncorrectIndex._NP_RepositoryId: _0_SALOMEDS.AttributeTable._d_IncorrectIndex})
AttributeTableOfReal._d_GetRow = ((omniORB.tcInternal.tv_long, ), (omniORB.typeMapping["IDL:SALOMEDS/DoubleSeq:1.0"], ), {_0_SALOMEDS.AttributeTable.IncorrectIndex._NP_RepositoryId: _0_SALOMEDS.AttributeTable._d_IncorrectIndex})
AttributeTableOfReal._d_AddColumn = ((omniORB.typeMapping["IDL:SALOMEDS/DoubleSeq:1.0"], ), (), {_0_SALOMEDS.AttributeTable.IncorrectArgumentLength._NP_RepositoryId: _0_SALOMEDS.AttributeTable._d_IncorrectArgumentLength})
AttributeTableOfReal._d_SetColumn = ((omniORB.tcInternal.tv_long, omniORB.typeMapping["IDL:SALOMEDS/DoubleSeq:1.0"]), (), {_0_SALOMEDS.AttributeTable.IncorrectArgumentLength._NP_RepositoryId: _0_SALOMEDS.AttributeTable._d_IncorrectArgumentLength, _0_SALOMEDS.AttributeTable.IncorrectIndex._NP_RepositoryId: _0_SALOMEDS.AttributeTable._d_IncorrectIndex})
AttributeTableOfReal._d_GetColumn = ((omniORB.tcInternal.tv_long, ), (omniORB.typeMapping["IDL:SALOMEDS/DoubleSeq:1.0"], ), {_0_SALOMEDS.AttributeTable.IncorrectIndex._NP_RepositoryId: _0_SALOMEDS.AttributeTable._d_IncorrectIndex})
AttributeTableOfReal._d_PutValue = ((omniORB.tcInternal.tv_double, omniORB.tcInternal.tv_long, omniORB.tcInternal.tv_long), (), {_0_SALOMEDS.AttributeTable.IncorrectIndex._NP_RepositoryId: _0_SALOMEDS.AttributeTable._d_IncorrectIndex})
AttributeTableOfReal._d_GetValue = ((omniORB.tcInternal.tv_long, omniORB.tcInternal.tv_long), (omniORB.tcInternal.tv_double, ), {_0_SALOMEDS.AttributeTable.IncorrectIndex._NP_RepositoryId: _0_SALOMEDS.AttributeTable._d_IncorrectIndex})

# AttributeTableOfReal object reference
class _objref_AttributeTableOfReal (_0_SALOMEDS._objref_AttributeTable):
    _NP_RepositoryId = AttributeTableOfReal._NP_RepositoryId

    def __init__(self):
        _0_SALOMEDS._objref_AttributeTable.__init__(self)

    def AddRow(self, *args):
        return _omnipy.invoke(self, "AddRow", _0_SALOMEDS.AttributeTableOfReal._d_AddRow, args)

    def SetRow(self, *args):
        return _omnipy.invoke(self, "SetRow", _0_SALOMEDS.AttributeTableOfReal._d_SetRow, args)

    def GetRow(self, *args):
        return _omnipy.invoke(self, "GetRow", _0_SALOMEDS.AttributeTableOfReal._d_GetRow, args)

    def AddColumn(self, *args):
        return _omnipy.invoke(self, "AddColumn", _0_SALOMEDS.AttributeTableOfReal._d_AddColumn, args)

    def SetColumn(self, *args):
        return _omnipy.invoke(self, "SetColumn", _0_SALOMEDS.AttributeTableOfReal._d_SetColumn, args)

    def GetColumn(self, *args):
        return _omnipy.invoke(self, "GetColumn", _0_SALOMEDS.AttributeTableOfReal._d_GetColumn, args)

    def PutValue(self, *args):
        return _omnipy.invoke(self, "PutValue", _0_SALOMEDS.AttributeTableOfReal._d_PutValue, args)

    def GetValue(self, *args):
        return _omnipy.invoke(self, "GetValue", _0_SALOMEDS.AttributeTableOfReal._d_GetValue, args)

    __methods__ = ["AddRow", "SetRow", "GetRow", "AddColumn", "SetColumn", "GetColumn", "PutValue", "GetValue"] + _0_SALOMEDS._objref_AttributeTable.__methods__

omniORB.registerObjref(AttributeTableOfReal._NP_RepositoryId, _objref_AttributeTableOfReal)
_0_SALOMEDS._objref_AttributeTableOfReal = _objref_AttributeTableOfReal
del AttributeTableOfReal, _objref_AttributeTableOfReal

# AttributeTableOfReal skeleton
__name__ = "SALOMEDS__POA"
class AttributeTableOfReal (_0_SALOMEDS__POA.AttributeTable):
    _NP_RepositoryId = _0_SALOMEDS.AttributeTableOfReal._NP_RepositoryId


    _omni_op_d = {"AddRow": _0_SALOMEDS.AttributeTableOfReal._d_AddRow, "SetRow": _0_SALOMEDS.AttributeTableOfReal._d_SetRow, "GetRow": _0_SALOMEDS.AttributeTableOfReal._d_GetRow, "AddColumn": _0_SALOMEDS.AttributeTableOfReal._d_AddColumn, "SetColumn": _0_SALOMEDS.AttributeTableOfReal._d_SetColumn, "GetColumn": _0_SALOMEDS.AttributeTableOfReal._d_GetColumn, "PutValue": _0_SALOMEDS.AttributeTableOfReal._d_PutValue, "GetValue": _0_SALOMEDS.AttributeTableOfReal._d_GetValue}
    _omni_op_d.update(_0_SALOMEDS__POA.AttributeTable._omni_op_d)

AttributeTableOfReal._omni_skeleton = AttributeTableOfReal
_0_SALOMEDS__POA.AttributeTableOfReal = AttributeTableOfReal
omniORB.registerSkeleton(AttributeTableOfReal._NP_RepositoryId, AttributeTableOfReal)
del AttributeTableOfReal
__name__ = "SALOMEDS"

# interface AttributeTableOfString
_0_SALOMEDS._d_AttributeTableOfString = (omniORB.tcInternal.tv_objref, "IDL:SALOMEDS/AttributeTableOfString:1.0", "AttributeTableOfString")
omniORB.typeMapping["IDL:SALOMEDS/AttributeTableOfString:1.0"] = _0_SALOMEDS._d_AttributeTableOfString
_0_SALOMEDS.AttributeTableOfString = omniORB.newEmptyClass()
class AttributeTableOfString (_0_SALOMEDS.AttributeTable):
    _NP_RepositoryId = _0_SALOMEDS._d_AttributeTableOfString[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_SALOMEDS.AttributeTableOfString = AttributeTableOfString
_0_SALOMEDS._tc_AttributeTableOfString = omniORB.tcInternal.createTypeCode(_0_SALOMEDS._d_AttributeTableOfString)
omniORB.registerType(AttributeTableOfString._NP_RepositoryId, _0_SALOMEDS._d_AttributeTableOfString, _0_SALOMEDS._tc_AttributeTableOfString)

# AttributeTableOfString operations and attributes
AttributeTableOfString._d_AddRow = ((omniORB.typeMapping["IDL:SALOMEDS/StringSeq:1.0"], ), (), {_0_SALOMEDS.AttributeTable.IncorrectArgumentLength._NP_RepositoryId: _0_SALOMEDS.AttributeTable._d_IncorrectArgumentLength})
AttributeTableOfString._d_SetRow = ((omniORB.tcInternal.tv_long, omniORB.typeMapping["IDL:SALOMEDS/StringSeq:1.0"]), (), {_0_SALOMEDS.AttributeTable.IncorrectArgumentLength._NP_RepositoryId: _0_SALOMEDS.AttributeTable._d_IncorrectArgumentLength, _0_SALOMEDS.AttributeTable.IncorrectIndex._NP_RepositoryId: _0_SALOMEDS.AttributeTable._d_IncorrectIndex})
AttributeTableOfString._d_GetRow = ((omniORB.tcInternal.tv_long, ), (omniORB.typeMapping["IDL:SALOMEDS/StringSeq:1.0"], ), {_0_SALOMEDS.AttributeTable.IncorrectIndex._NP_RepositoryId: _0_SALOMEDS.AttributeTable._d_IncorrectIndex})
AttributeTableOfString._d_AddColumn = ((omniORB.typeMapping["IDL:SALOMEDS/StringSeq:1.0"], ), (), {_0_SALOMEDS.AttributeTable.IncorrectArgumentLength._NP_RepositoryId: _0_SALOMEDS.AttributeTable._d_IncorrectArgumentLength})
AttributeTableOfString._d_SetColumn = ((omniORB.tcInternal.tv_long, omniORB.typeMapping["IDL:SALOMEDS/StringSeq:1.0"]), (), {_0_SALOMEDS.AttributeTable.IncorrectArgumentLength._NP_RepositoryId: _0_SALOMEDS.AttributeTable._d_IncorrectArgumentLength, _0_SALOMEDS.AttributeTable.IncorrectIndex._NP_RepositoryId: _0_SALOMEDS.AttributeTable._d_IncorrectIndex})
AttributeTableOfString._d_GetColumn = ((omniORB.tcInternal.tv_long, ), (omniORB.typeMapping["IDL:SALOMEDS/StringSeq:1.0"], ), {_0_SALOMEDS.AttributeTable.IncorrectIndex._NP_RepositoryId: _0_SALOMEDS.AttributeTable._d_IncorrectIndex})
AttributeTableOfString._d_PutValue = (((omniORB.tcInternal.tv_string,0), omniORB.tcInternal.tv_long, omniORB.tcInternal.tv_long), (), {_0_SALOMEDS.AttributeTable.IncorrectIndex._NP_RepositoryId: _0_SALOMEDS.AttributeTable._d_IncorrectIndex})
AttributeTableOfString._d_GetValue = ((omniORB.tcInternal.tv_long, omniORB.tcInternal.tv_long), ((omniORB.tcInternal.tv_string,0), ), {_0_SALOMEDS.AttributeTable.IncorrectIndex._NP_RepositoryId: _0_SALOMEDS.AttributeTable._d_IncorrectIndex})

# AttributeTableOfString object reference
class _objref_AttributeTableOfString (_0_SALOMEDS._objref_AttributeTable):
    _NP_RepositoryId = AttributeTableOfString._NP_RepositoryId

    def __init__(self):
        _0_SALOMEDS._objref_AttributeTable.__init__(self)

    def AddRow(self, *args):
        return _omnipy.invoke(self, "AddRow", _0_SALOMEDS.AttributeTableOfString._d_AddRow, args)

    def SetRow(self, *args):
        return _omnipy.invoke(self, "SetRow", _0_SALOMEDS.AttributeTableOfString._d_SetRow, args)

    def GetRow(self, *args):
        return _omnipy.invoke(self, "GetRow", _0_SALOMEDS.AttributeTableOfString._d_GetRow, args)

    def AddColumn(self, *args):
        return _omnipy.invoke(self, "AddColumn", _0_SALOMEDS.AttributeTableOfString._d_AddColumn, args)

    def SetColumn(self, *args):
        return _omnipy.invoke(self, "SetColumn", _0_SALOMEDS.AttributeTableOfString._d_SetColumn, args)

    def GetColumn(self, *args):
        return _omnipy.invoke(self, "GetColumn", _0_SALOMEDS.AttributeTableOfString._d_GetColumn, args)

    def PutValue(self, *args):
        return _omnipy.invoke(self, "PutValue", _0_SALOMEDS.AttributeTableOfString._d_PutValue, args)

    def GetValue(self, *args):
        return _omnipy.invoke(self, "GetValue", _0_SALOMEDS.AttributeTableOfString._d_GetValue, args)

    __methods__ = ["AddRow", "SetRow", "GetRow", "AddColumn", "SetColumn", "GetColumn", "PutValue", "GetValue"] + _0_SALOMEDS._objref_AttributeTable.__methods__

omniORB.registerObjref(AttributeTableOfString._NP_RepositoryId, _objref_AttributeTableOfString)
_0_SALOMEDS._objref_AttributeTableOfString = _objref_AttributeTableOfString
del AttributeTableOfString, _objref_AttributeTableOfString

# AttributeTableOfString skeleton
__name__ = "SALOMEDS__POA"
class AttributeTableOfString (_0_SALOMEDS__POA.AttributeTable):
    _NP_RepositoryId = _0_SALOMEDS.AttributeTableOfString._NP_RepositoryId


    _omni_op_d = {"AddRow": _0_SALOMEDS.AttributeTableOfString._d_AddRow, "SetRow": _0_SALOMEDS.AttributeTableOfString._d_SetRow, "GetRow": _0_SALOMEDS.AttributeTableOfString._d_GetRow, "AddColumn": _0_SALOMEDS.AttributeTableOfString._d_AddColumn, "SetColumn": _0_SALOMEDS.AttributeTableOfString._d_SetColumn, "GetColumn": _0_SALOMEDS.AttributeTableOfString._d_GetColumn, "PutValue": _0_SALOMEDS.AttributeTableOfString._d_PutValue, "GetValue": _0_SALOMEDS.AttributeTableOfString._d_GetValue}
    _omni_op_d.update(_0_SALOMEDS__POA.AttributeTable._omni_op_d)

AttributeTableOfString._omni_skeleton = AttributeTableOfString
_0_SALOMEDS__POA.AttributeTableOfString = AttributeTableOfString
omniORB.registerSkeleton(AttributeTableOfString._NP_RepositoryId, AttributeTableOfString)
del AttributeTableOfString
__name__ = "SALOMEDS"

# interface AttributeStudyProperties
_0_SALOMEDS._d_AttributeStudyProperties = (omniORB.tcInternal.tv_objref, "IDL:SALOMEDS/AttributeStudyProperties:1.0", "AttributeStudyProperties")
omniORB.typeMapping["IDL:SALOMEDS/AttributeStudyProperties:1.0"] = _0_SALOMEDS._d_AttributeStudyProperties
_0_SALOMEDS.AttributeStudyProperties = omniORB.newEmptyClass()
class AttributeStudyProperties (_0_SALOMEDS.GenericAttribute):
    _NP_RepositoryId = _0_SALOMEDS._d_AttributeStudyProperties[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_SALOMEDS.AttributeStudyProperties = AttributeStudyProperties
_0_SALOMEDS._tc_AttributeStudyProperties = omniORB.tcInternal.createTypeCode(_0_SALOMEDS._d_AttributeStudyProperties)
omniORB.registerType(AttributeStudyProperties._NP_RepositoryId, _0_SALOMEDS._d_AttributeStudyProperties, _0_SALOMEDS._tc_AttributeStudyProperties)

# AttributeStudyProperties operations and attributes
AttributeStudyProperties._d_SetUserName = (((omniORB.tcInternal.tv_string,0), ), (), None)
AttributeStudyProperties._d_GetUserName = ((), ((omniORB.tcInternal.tv_string,0), ), None)
AttributeStudyProperties._d_SetCreationDate = ((omniORB.tcInternal.tv_long, omniORB.tcInternal.tv_long, omniORB.tcInternal.tv_long, omniORB.tcInternal.tv_long, omniORB.tcInternal.tv_long), (), None)
AttributeStudyProperties._d_GetCreationDate = ((), (omniORB.tcInternal.tv_boolean, omniORB.tcInternal.tv_long, omniORB.tcInternal.tv_long, omniORB.tcInternal.tv_long, omniORB.tcInternal.tv_long, omniORB.tcInternal.tv_long), None)
AttributeStudyProperties._d_SetCreationMode = (((omniORB.tcInternal.tv_string,0), ), (), None)
AttributeStudyProperties._d_GetCreationMode = ((), ((omniORB.tcInternal.tv_string,0), ), None)
AttributeStudyProperties._d_SetModified = ((omniORB.tcInternal.tv_long, ), (), None)
AttributeStudyProperties._d_IsModified = ((), (omniORB.tcInternal.tv_boolean, ), None)
AttributeStudyProperties._d_GetModified = ((), (omniORB.tcInternal.tv_long, ), None)
AttributeStudyProperties._d_SetLocked = ((omniORB.tcInternal.tv_boolean, ), (), None)
AttributeStudyProperties._d_IsLocked = ((), (omniORB.tcInternal.tv_boolean, ), None)
AttributeStudyProperties._d_SetModification = (((omniORB.tcInternal.tv_string,0), omniORB.tcInternal.tv_long, omniORB.tcInternal.tv_long, omniORB.tcInternal.tv_long, omniORB.tcInternal.tv_long, omniORB.tcInternal.tv_long), (), None)
AttributeStudyProperties._d_GetModificationsList = ((omniORB.tcInternal.tv_boolean, ), (omniORB.typeMapping["IDL:SALOMEDS/StringSeq:1.0"], omniORB.typeMapping["IDL:SALOMEDS/LongSeq:1.0"], omniORB.typeMapping["IDL:SALOMEDS/LongSeq:1.0"], omniORB.typeMapping["IDL:SALOMEDS/LongSeq:1.0"], omniORB.typeMapping["IDL:SALOMEDS/LongSeq:1.0"], omniORB.typeMapping["IDL:SALOMEDS/LongSeq:1.0"]), None)
AttributeStudyProperties._d_SetComment = (((omniORB.tcInternal.tv_string,0), ), (), None)
AttributeStudyProperties._d_GetComment = ((), ((omniORB.tcInternal.tv_string,0), ), None)
AttributeStudyProperties._d_SetUnits = (((omniORB.tcInternal.tv_string,0), ), (), None)
AttributeStudyProperties._d_GetUnits = ((), ((omniORB.tcInternal.tv_string,0), ), None)
AttributeStudyProperties._d_GetStoredComponents = ((), (omniORB.typeMapping["IDL:SALOMEDS/StringSeq:1.0"], ), None)
AttributeStudyProperties._d_GetComponentVersion = (((omniORB.tcInternal.tv_string,0), ), ((omniORB.tcInternal.tv_string,0), ), None)
AttributeStudyProperties._d_GetComponentVersions = (((omniORB.tcInternal.tv_string,0), ), (omniORB.typeMapping["IDL:SALOMEDS/StringSeq:1.0"], ), None)

# AttributeStudyProperties object reference
class _objref_AttributeStudyProperties (_0_SALOMEDS._objref_GenericAttribute):
    _NP_RepositoryId = AttributeStudyProperties._NP_RepositoryId

    def __init__(self):
        _0_SALOMEDS._objref_GenericAttribute.__init__(self)

    def SetUserName(self, *args):
        return _omnipy.invoke(self, "SetUserName", _0_SALOMEDS.AttributeStudyProperties._d_SetUserName, args)

    def GetUserName(self, *args):
        return _omnipy.invoke(self, "GetUserName", _0_SALOMEDS.AttributeStudyProperties._d_GetUserName, args)

    def SetCreationDate(self, *args):
        return _omnipy.invoke(self, "SetCreationDate", _0_SALOMEDS.AttributeStudyProperties._d_SetCreationDate, args)

    def GetCreationDate(self, *args):
        return _omnipy.invoke(self, "GetCreationDate", _0_SALOMEDS.AttributeStudyProperties._d_GetCreationDate, args)

    def SetCreationMode(self, *args):
        return _omnipy.invoke(self, "SetCreationMode", _0_SALOMEDS.AttributeStudyProperties._d_SetCreationMode, args)

    def GetCreationMode(self, *args):
        return _omnipy.invoke(self, "GetCreationMode", _0_SALOMEDS.AttributeStudyProperties._d_GetCreationMode, args)

    def SetModified(self, *args):
        return _omnipy.invoke(self, "SetModified", _0_SALOMEDS.AttributeStudyProperties._d_SetModified, args)

    def IsModified(self, *args):
        return _omnipy.invoke(self, "IsModified", _0_SALOMEDS.AttributeStudyProperties._d_IsModified, args)

    def GetModified(self, *args):
        return _omnipy.invoke(self, "GetModified", _0_SALOMEDS.AttributeStudyProperties._d_GetModified, args)

    def SetLocked(self, *args):
        return _omnipy.invoke(self, "SetLocked", _0_SALOMEDS.AttributeStudyProperties._d_SetLocked, args)

    def IsLocked(self, *args):
        return _omnipy.invoke(self, "IsLocked", _0_SALOMEDS.AttributeStudyProperties._d_IsLocked, args)

    def SetModification(self, *args):
        return _omnipy.invoke(self, "SetModification", _0_SALOMEDS.AttributeStudyProperties._d_SetModification, args)

    def GetModificationsList(self, *args):
        return _omnipy.invoke(self, "GetModificationsList", _0_SALOMEDS.AttributeStudyProperties._d_GetModificationsList, args)

    def SetComment(self, *args):
        return _omnipy.invoke(self, "SetComment", _0_SALOMEDS.AttributeStudyProperties._d_SetComment, args)

    def GetComment(self, *args):
        return _omnipy.invoke(self, "GetComment", _0_SALOMEDS.AttributeStudyProperties._d_GetComment, args)

    def SetUnits(self, *args):
        return _omnipy.invoke(self, "SetUnits", _0_SALOMEDS.AttributeStudyProperties._d_SetUnits, args)

    def GetUnits(self, *args):
        return _omnipy.invoke(self, "GetUnits", _0_SALOMEDS.AttributeStudyProperties._d_GetUnits, args)

    def GetStoredComponents(self, *args):
        return _omnipy.invoke(self, "GetStoredComponents", _0_SALOMEDS.AttributeStudyProperties._d_GetStoredComponents, args)

    def GetComponentVersion(self, *args):
        return _omnipy.invoke(self, "GetComponentVersion", _0_SALOMEDS.AttributeStudyProperties._d_GetComponentVersion, args)

    def GetComponentVersions(self, *args):
        return _omnipy.invoke(self, "GetComponentVersions", _0_SALOMEDS.AttributeStudyProperties._d_GetComponentVersions, args)

    __methods__ = ["SetUserName", "GetUserName", "SetCreationDate", "GetCreationDate", "SetCreationMode", "GetCreationMode", "SetModified", "IsModified", "GetModified", "SetLocked", "IsLocked", "SetModification", "GetModificationsList", "SetComment", "GetComment", "SetUnits", "GetUnits", "GetStoredComponents", "GetComponentVersion", "GetComponentVersions"] + _0_SALOMEDS._objref_GenericAttribute.__methods__

omniORB.registerObjref(AttributeStudyProperties._NP_RepositoryId, _objref_AttributeStudyProperties)
_0_SALOMEDS._objref_AttributeStudyProperties = _objref_AttributeStudyProperties
del AttributeStudyProperties, _objref_AttributeStudyProperties

# AttributeStudyProperties skeleton
__name__ = "SALOMEDS__POA"
class AttributeStudyProperties (_0_SALOMEDS__POA.GenericAttribute):
    _NP_RepositoryId = _0_SALOMEDS.AttributeStudyProperties._NP_RepositoryId


    _omni_op_d = {"SetUserName": _0_SALOMEDS.AttributeStudyProperties._d_SetUserName, "GetUserName": _0_SALOMEDS.AttributeStudyProperties._d_GetUserName, "SetCreationDate": _0_SALOMEDS.AttributeStudyProperties._d_SetCreationDate, "GetCreationDate": _0_SALOMEDS.AttributeStudyProperties._d_GetCreationDate, "SetCreationMode": _0_SALOMEDS.AttributeStudyProperties._d_SetCreationMode, "GetCreationMode": _0_SALOMEDS.AttributeStudyProperties._d_GetCreationMode, "SetModified": _0_SALOMEDS.AttributeStudyProperties._d_SetModified, "IsModified": _0_SALOMEDS.AttributeStudyProperties._d_IsModified, "GetModified": _0_SALOMEDS.AttributeStudyProperties._d_GetModified, "SetLocked": _0_SALOMEDS.AttributeStudyProperties._d_SetLocked, "IsLocked": _0_SALOMEDS.AttributeStudyProperties._d_IsLocked, "SetModification": _0_SALOMEDS.AttributeStudyProperties._d_SetModification, "GetModificationsList": _0_SALOMEDS.AttributeStudyProperties._d_GetModificationsList, "SetComment": _0_SALOMEDS.AttributeStudyProperties._d_SetComment, "GetComment": _0_SALOMEDS.AttributeStudyProperties._d_GetComment, "SetUnits": _0_SALOMEDS.AttributeStudyProperties._d_SetUnits, "GetUnits": _0_SALOMEDS.AttributeStudyProperties._d_GetUnits, "GetStoredComponents": _0_SALOMEDS.AttributeStudyProperties._d_GetStoredComponents, "GetComponentVersion": _0_SALOMEDS.AttributeStudyProperties._d_GetComponentVersion, "GetComponentVersions": _0_SALOMEDS.AttributeStudyProperties._d_GetComponentVersions}
    _omni_op_d.update(_0_SALOMEDS__POA.GenericAttribute._omni_op_d)

AttributeStudyProperties._omni_skeleton = AttributeStudyProperties
_0_SALOMEDS__POA.AttributeStudyProperties = AttributeStudyProperties
omniORB.registerSkeleton(AttributeStudyProperties._NP_RepositoryId, AttributeStudyProperties)
del AttributeStudyProperties
__name__ = "SALOMEDS"

# interface AttributePythonObject
_0_SALOMEDS._d_AttributePythonObject = (omniORB.tcInternal.tv_objref, "IDL:SALOMEDS/AttributePythonObject:1.0", "AttributePythonObject")
omniORB.typeMapping["IDL:SALOMEDS/AttributePythonObject:1.0"] = _0_SALOMEDS._d_AttributePythonObject
_0_SALOMEDS.AttributePythonObject = omniORB.newEmptyClass()
class AttributePythonObject (_0_SALOMEDS.GenericAttribute):
    _NP_RepositoryId = _0_SALOMEDS._d_AttributePythonObject[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_SALOMEDS.AttributePythonObject = AttributePythonObject
_0_SALOMEDS._tc_AttributePythonObject = omniORB.tcInternal.createTypeCode(_0_SALOMEDS._d_AttributePythonObject)
omniORB.registerType(AttributePythonObject._NP_RepositoryId, _0_SALOMEDS._d_AttributePythonObject, _0_SALOMEDS._tc_AttributePythonObject)

# AttributePythonObject operations and attributes
AttributePythonObject._d_SetObject = (((omniORB.tcInternal.tv_string,0), omniORB.tcInternal.tv_boolean), (), None)
AttributePythonObject._d_GetObject = ((), ((omniORB.tcInternal.tv_string,0), ), None)
AttributePythonObject._d_IsScript = ((), (omniORB.tcInternal.tv_boolean, ), None)

# AttributePythonObject object reference
class _objref_AttributePythonObject (_0_SALOMEDS._objref_GenericAttribute):
    _NP_RepositoryId = AttributePythonObject._NP_RepositoryId

    def __init__(self):
        _0_SALOMEDS._objref_GenericAttribute.__init__(self)

    def SetObject(self, *args):
        return _omnipy.invoke(self, "SetObject", _0_SALOMEDS.AttributePythonObject._d_SetObject, args)

    def GetObject(self, *args):
        return _omnipy.invoke(self, "GetObject", _0_SALOMEDS.AttributePythonObject._d_GetObject, args)

    def IsScript(self, *args):
        return _omnipy.invoke(self, "IsScript", _0_SALOMEDS.AttributePythonObject._d_IsScript, args)

    __methods__ = ["SetObject", "GetObject", "IsScript"] + _0_SALOMEDS._objref_GenericAttribute.__methods__

omniORB.registerObjref(AttributePythonObject._NP_RepositoryId, _objref_AttributePythonObject)
_0_SALOMEDS._objref_AttributePythonObject = _objref_AttributePythonObject
del AttributePythonObject, _objref_AttributePythonObject

# AttributePythonObject skeleton
__name__ = "SALOMEDS__POA"
class AttributePythonObject (_0_SALOMEDS__POA.GenericAttribute):
    _NP_RepositoryId = _0_SALOMEDS.AttributePythonObject._NP_RepositoryId


    _omni_op_d = {"SetObject": _0_SALOMEDS.AttributePythonObject._d_SetObject, "GetObject": _0_SALOMEDS.AttributePythonObject._d_GetObject, "IsScript": _0_SALOMEDS.AttributePythonObject._d_IsScript}
    _omni_op_d.update(_0_SALOMEDS__POA.GenericAttribute._omni_op_d)

AttributePythonObject._omni_skeleton = AttributePythonObject
_0_SALOMEDS__POA.AttributePythonObject = AttributePythonObject
omniORB.registerSkeleton(AttributePythonObject._NP_RepositoryId, AttributePythonObject)
del AttributePythonObject
__name__ = "SALOMEDS"

# interface AttributeParameter
_0_SALOMEDS._d_AttributeParameter = (omniORB.tcInternal.tv_objref, "IDL:SALOMEDS/AttributeParameter:1.0", "AttributeParameter")
omniORB.typeMapping["IDL:SALOMEDS/AttributeParameter:1.0"] = _0_SALOMEDS._d_AttributeParameter
_0_SALOMEDS.AttributeParameter = omniORB.newEmptyClass()
class AttributeParameter (_0_SALOMEDS.GenericAttribute):
    _NP_RepositoryId = _0_SALOMEDS._d_AttributeParameter[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil

    
    # exception InvalidIdentifier
    _0_SALOMEDS.AttributeParameter.InvalidIdentifier = omniORB.newEmptyClass()
    class InvalidIdentifier (CORBA.UserException):
        _NP_RepositoryId = "IDL:SALOMEDS/AttributeParameter/InvalidIdentifier:1.0"

        _NP_ClassName = "SALOMEDS.AttributeParameter.InvalidIdentifier"

        def __init__(self):
            CORBA.UserException.__init__(self)
    
    _d_InvalidIdentifier  = (omniORB.tcInternal.tv_except, InvalidIdentifier, InvalidIdentifier._NP_RepositoryId, "InvalidIdentifier")
    _tc_InvalidIdentifier = omniORB.tcInternal.createTypeCode(_d_InvalidIdentifier)
    omniORB.registerType(InvalidIdentifier._NP_RepositoryId, _d_InvalidIdentifier, _tc_InvalidIdentifier)


_0_SALOMEDS.AttributeParameter = AttributeParameter
_0_SALOMEDS._tc_AttributeParameter = omniORB.tcInternal.createTypeCode(_0_SALOMEDS._d_AttributeParameter)
omniORB.registerType(AttributeParameter._NP_RepositoryId, _0_SALOMEDS._d_AttributeParameter, _0_SALOMEDS._tc_AttributeParameter)

# AttributeParameter operations and attributes
AttributeParameter._d_SetInt = (((omniORB.tcInternal.tv_string,0), omniORB.tcInternal.tv_long), (), None)
AttributeParameter._d_GetInt = (((omniORB.tcInternal.tv_string,0), ), (omniORB.tcInternal.tv_long, ), {_0_SALOMEDS.AttributeParameter.InvalidIdentifier._NP_RepositoryId: _0_SALOMEDS.AttributeParameter._d_InvalidIdentifier})
AttributeParameter._d_SetReal = (((omniORB.tcInternal.tv_string,0), omniORB.tcInternal.tv_double), (), None)
AttributeParameter._d_GetReal = (((omniORB.tcInternal.tv_string,0), ), (omniORB.tcInternal.tv_double, ), {_0_SALOMEDS.AttributeParameter.InvalidIdentifier._NP_RepositoryId: _0_SALOMEDS.AttributeParameter._d_InvalidIdentifier})
AttributeParameter._d_SetString = (((omniORB.tcInternal.tv_string,0), (omniORB.tcInternal.tv_string,0)), (), None)
AttributeParameter._d_GetString = (((omniORB.tcInternal.tv_string,0), ), ((omniORB.tcInternal.tv_string,0), ), {_0_SALOMEDS.AttributeParameter.InvalidIdentifier._NP_RepositoryId: _0_SALOMEDS.AttributeParameter._d_InvalidIdentifier})
AttributeParameter._d_SetBool = (((omniORB.tcInternal.tv_string,0), omniORB.tcInternal.tv_boolean), (), None)
AttributeParameter._d_GetBool = (((omniORB.tcInternal.tv_string,0), ), (omniORB.tcInternal.tv_boolean, ), {_0_SALOMEDS.AttributeParameter.InvalidIdentifier._NP_RepositoryId: _0_SALOMEDS.AttributeParameter._d_InvalidIdentifier})
AttributeParameter._d_SetRealArray = (((omniORB.tcInternal.tv_string,0), omniORB.typeMapping["IDL:SALOMEDS/DoubleSeq:1.0"]), (), None)
AttributeParameter._d_GetRealArray = (((omniORB.tcInternal.tv_string,0), ), (omniORB.typeMapping["IDL:SALOMEDS/DoubleSeq:1.0"], ), {_0_SALOMEDS.AttributeParameter.InvalidIdentifier._NP_RepositoryId: _0_SALOMEDS.AttributeParameter._d_InvalidIdentifier})
AttributeParameter._d_SetIntArray = (((omniORB.tcInternal.tv_string,0), omniORB.typeMapping["IDL:SALOMEDS/LongSeq:1.0"]), (), None)
AttributeParameter._d_GetIntArray = (((omniORB.tcInternal.tv_string,0), ), (omniORB.typeMapping["IDL:SALOMEDS/LongSeq:1.0"], ), {_0_SALOMEDS.AttributeParameter.InvalidIdentifier._NP_RepositoryId: _0_SALOMEDS.AttributeParameter._d_InvalidIdentifier})
AttributeParameter._d_SetStrArray = (((omniORB.tcInternal.tv_string,0), omniORB.typeMapping["IDL:SALOMEDS/StringSeq:1.0"]), (), None)
AttributeParameter._d_GetStrArray = (((omniORB.tcInternal.tv_string,0), ), (omniORB.typeMapping["IDL:SALOMEDS/StringSeq:1.0"], ), {_0_SALOMEDS.AttributeParameter.InvalidIdentifier._NP_RepositoryId: _0_SALOMEDS.AttributeParameter._d_InvalidIdentifier})
AttributeParameter._d_IsSet = (((omniORB.tcInternal.tv_string,0), omniORB.tcInternal.tv_long), (omniORB.tcInternal.tv_boolean, ), None)
AttributeParameter._d_RemoveID = (((omniORB.tcInternal.tv_string,0), omniORB.tcInternal.tv_long), (omniORB.tcInternal.tv_boolean, ), None)
AttributeParameter._d_GetFather = ((), (omniORB.typeMapping["IDL:SALOMEDS/AttributeParameter:1.0"], ), None)
AttributeParameter._d_HasFather = ((), (omniORB.tcInternal.tv_boolean, ), None)
AttributeParameter._d_IsRoot = ((), (omniORB.tcInternal.tv_boolean, ), None)
AttributeParameter._d_Clear = ((), (), None)
AttributeParameter._d_GetIDs = ((omniORB.tcInternal.tv_long, ), (omniORB.typeMapping["IDL:SALOMEDS/StringSeq:1.0"], ), None)

# AttributeParameter object reference
class _objref_AttributeParameter (_0_SALOMEDS._objref_GenericAttribute):
    _NP_RepositoryId = AttributeParameter._NP_RepositoryId

    def __init__(self):
        _0_SALOMEDS._objref_GenericAttribute.__init__(self)

    def SetInt(self, *args):
        return _omnipy.invoke(self, "SetInt", _0_SALOMEDS.AttributeParameter._d_SetInt, args)

    def GetInt(self, *args):
        return _omnipy.invoke(self, "GetInt", _0_SALOMEDS.AttributeParameter._d_GetInt, args)

    def SetReal(self, *args):
        return _omnipy.invoke(self, "SetReal", _0_SALOMEDS.AttributeParameter._d_SetReal, args)

    def GetReal(self, *args):
        return _omnipy.invoke(self, "GetReal", _0_SALOMEDS.AttributeParameter._d_GetReal, args)

    def SetString(self, *args):
        return _omnipy.invoke(self, "SetString", _0_SALOMEDS.AttributeParameter._d_SetString, args)

    def GetString(self, *args):
        return _omnipy.invoke(self, "GetString", _0_SALOMEDS.AttributeParameter._d_GetString, args)

    def SetBool(self, *args):
        return _omnipy.invoke(self, "SetBool", _0_SALOMEDS.AttributeParameter._d_SetBool, args)

    def GetBool(self, *args):
        return _omnipy.invoke(self, "GetBool", _0_SALOMEDS.AttributeParameter._d_GetBool, args)

    def SetRealArray(self, *args):
        return _omnipy.invoke(self, "SetRealArray", _0_SALOMEDS.AttributeParameter._d_SetRealArray, args)

    def GetRealArray(self, *args):
        return _omnipy.invoke(self, "GetRealArray", _0_SALOMEDS.AttributeParameter._d_GetRealArray, args)

    def SetIntArray(self, *args):
        return _omnipy.invoke(self, "SetIntArray", _0_SALOMEDS.AttributeParameter._d_SetIntArray, args)

    def GetIntArray(self, *args):
        return _omnipy.invoke(self, "GetIntArray", _0_SALOMEDS.AttributeParameter._d_GetIntArray, args)

    def SetStrArray(self, *args):
        return _omnipy.invoke(self, "SetStrArray", _0_SALOMEDS.AttributeParameter._d_SetStrArray, args)

    def GetStrArray(self, *args):
        return _omnipy.invoke(self, "GetStrArray", _0_SALOMEDS.AttributeParameter._d_GetStrArray, args)

    def IsSet(self, *args):
        return _omnipy.invoke(self, "IsSet", _0_SALOMEDS.AttributeParameter._d_IsSet, args)

    def RemoveID(self, *args):
        return _omnipy.invoke(self, "RemoveID", _0_SALOMEDS.AttributeParameter._d_RemoveID, args)

    def GetFather(self, *args):
        return _omnipy.invoke(self, "GetFather", _0_SALOMEDS.AttributeParameter._d_GetFather, args)

    def HasFather(self, *args):
        return _omnipy.invoke(self, "HasFather", _0_SALOMEDS.AttributeParameter._d_HasFather, args)

    def IsRoot(self, *args):
        return _omnipy.invoke(self, "IsRoot", _0_SALOMEDS.AttributeParameter._d_IsRoot, args)

    def Clear(self, *args):
        return _omnipy.invoke(self, "Clear", _0_SALOMEDS.AttributeParameter._d_Clear, args)

    def GetIDs(self, *args):
        return _omnipy.invoke(self, "GetIDs", _0_SALOMEDS.AttributeParameter._d_GetIDs, args)

    __methods__ = ["SetInt", "GetInt", "SetReal", "GetReal", "SetString", "GetString", "SetBool", "GetBool", "SetRealArray", "GetRealArray", "SetIntArray", "GetIntArray", "SetStrArray", "GetStrArray", "IsSet", "RemoveID", "GetFather", "HasFather", "IsRoot", "Clear", "GetIDs"] + _0_SALOMEDS._objref_GenericAttribute.__methods__

omniORB.registerObjref(AttributeParameter._NP_RepositoryId, _objref_AttributeParameter)
_0_SALOMEDS._objref_AttributeParameter = _objref_AttributeParameter
del AttributeParameter, _objref_AttributeParameter

# AttributeParameter skeleton
__name__ = "SALOMEDS__POA"
class AttributeParameter (_0_SALOMEDS__POA.GenericAttribute):
    _NP_RepositoryId = _0_SALOMEDS.AttributeParameter._NP_RepositoryId


    _omni_op_d = {"SetInt": _0_SALOMEDS.AttributeParameter._d_SetInt, "GetInt": _0_SALOMEDS.AttributeParameter._d_GetInt, "SetReal": _0_SALOMEDS.AttributeParameter._d_SetReal, "GetReal": _0_SALOMEDS.AttributeParameter._d_GetReal, "SetString": _0_SALOMEDS.AttributeParameter._d_SetString, "GetString": _0_SALOMEDS.AttributeParameter._d_GetString, "SetBool": _0_SALOMEDS.AttributeParameter._d_SetBool, "GetBool": _0_SALOMEDS.AttributeParameter._d_GetBool, "SetRealArray": _0_SALOMEDS.AttributeParameter._d_SetRealArray, "GetRealArray": _0_SALOMEDS.AttributeParameter._d_GetRealArray, "SetIntArray": _0_SALOMEDS.AttributeParameter._d_SetIntArray, "GetIntArray": _0_SALOMEDS.AttributeParameter._d_GetIntArray, "SetStrArray": _0_SALOMEDS.AttributeParameter._d_SetStrArray, "GetStrArray": _0_SALOMEDS.AttributeParameter._d_GetStrArray, "IsSet": _0_SALOMEDS.AttributeParameter._d_IsSet, "RemoveID": _0_SALOMEDS.AttributeParameter._d_RemoveID, "GetFather": _0_SALOMEDS.AttributeParameter._d_GetFather, "HasFather": _0_SALOMEDS.AttributeParameter._d_HasFather, "IsRoot": _0_SALOMEDS.AttributeParameter._d_IsRoot, "Clear": _0_SALOMEDS.AttributeParameter._d_Clear, "GetIDs": _0_SALOMEDS.AttributeParameter._d_GetIDs}
    _omni_op_d.update(_0_SALOMEDS__POA.GenericAttribute._omni_op_d)

AttributeParameter._omni_skeleton = AttributeParameter
_0_SALOMEDS__POA.AttributeParameter = AttributeParameter
omniORB.registerSkeleton(AttributeParameter._NP_RepositoryId, AttributeParameter)
del AttributeParameter
__name__ = "SALOMEDS"

#
# End of module "SALOMEDS"
#
__name__ = "SALOMEDS_Attributes_idl"

_exported_modules = ( "SALOMEDS", )

# The end.
