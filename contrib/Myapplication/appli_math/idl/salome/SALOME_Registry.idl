// Copyright (C) 2007-2013  CEA/DEN, EDF R&D, OPEN CASCADE
//
// Copyright (C) 2003-2007  OPEN CASCADE, EADS/CCR, LIP6, CEA/DEN,
// CEDRAT, EDF R&D, LEG, PRINCIPIA R&D, BUREAU VERITAS
//
// This library is free software; you can redistribute it and/or
// modify it under the terms of the GNU Lesser General Public
// License as published by the Free Software Foundation; either
// version 2.1 of the License.
//
// This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public
// License along with this library; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
//
// See http://www.salome-platform.org/ or email : webmaster.salome@opencascade.com
//

//  File   : SALOME_Registry.idl
//
# ifndef __registry_idl__
# define __registry_idl__

/*! \file SALOME_Registry.idl \brief interfaces for %SALOME registry
*/

/*! \brief module that provides interface to %SALOME registry
*/
module Registry
{
  //! a struct to collect informations about servers (processes)
	struct Infos
	{
		string  name;
		long 	pid;
		string  machine;
		string  adip;
		long 	uid;
		string  pwname;
		long 	tc_start;
		long 	tc_hello;
		long 	tc_end;
		long 	difftime;
		string 	cdir;
		long 	status;
		string  ior;		//  client 
	};

  //! a list of informations
	typedef sequence<Infos> AllInfos;

/*! \brief interface to use %SALOME registry
*/
	interface Components
	{
    //! check if registry is running
		void ping();
    //! Get the pid of registry server
	  long getPID();
    //! Add one information to the registry
		unsigned long add ( in Infos lesInfos ) ;
    //! Remove an information from the registry
		void remove ( in unsigned long id ) ;
    //! Get the size of the registry
		unsigned long size() ;
    //! Get all informations from registry
		AllInfos getall () ;
    //! Get history information from registry
		AllInfos history () ;
    //! Stop the registry (hard exit)
		oneway void end() ;
    //! Say hello to registry from process id
		oneway void hello( in unsigned long id ) ;
    //! Shutdown registry server (CORBA exit)
	  void Shutdown();
	} ;
} ;

# endif
