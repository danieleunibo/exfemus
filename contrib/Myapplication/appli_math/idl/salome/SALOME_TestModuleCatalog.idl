// Copyright (C) 2007-2013  CEA/DEN, EDF R&D, OPEN CASCADE
//
// Copyright (C) 2003-2007  OPEN CASCADE, EADS/CCR, LIP6, CEA/DEN,
// CEDRAT, EDF R&D, LEG, PRINCIPIA R&D, BUREAU VERITAS
//
// This library is free software; you can redistribute it and/or
// modify it under the terms of the GNU Lesser General Public
// License as published by the Free Software Foundation; either
// version 2.1 of the License.
//
// This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public
// License along with this library; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
//
// See http://www.salome-platform.org/ or email : webmaster.salome@opencascade.com
//
//  File   : SALOME_TestModuleCatalog.idl
//  Author : 

#ifndef _TestModuleCatalog_IDL
#define _TestModuleCatalog_IDL

#include "SALOME_Component.idl"

/*! \file SALOME_TestModuleCatalog.idl \brief interfaces for %SALOME module catalog test
*/

/*! \brief module to test SALOME_ModuleCatalog
*/

module SALOME_TestModuleCatalog {

  interface Adder ;

  interface AddComponent : Engines::EngineComponent {

// DataStreamPorts Addition istream(INTEGER, in, T), ostream(STRING, out, I)
// DataStreamPorts Addition Ostream(FLOAT, out, T)
    Adder Addition() ;
    double Add( in double x , in double y , out double z ) ;
    long Sigma( in long n ) ;
    double LastResult() ;
  };

  interface Adder : Engines::EngineComponent {
    double Add( in double x , in double y , out double z ) ;
    double AddAndCompare( in double x , in double y , in Adder anOtherAdder,
                          out double z ) ;
    void SetLastResult( in double z ) ;
    void LastResult( out double z ) ;
  };

} ;

#endif
