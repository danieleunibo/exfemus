# Python stubs generated by omniidl from /dn60/series7x/KERNEL/CentOS63-64/KERNEL_SRC/idl/SALOME_Launcher.idl

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA

_omnipy.checkVersion(3,0, __file__)

# #include "SALOME_Exception.idl"
import SALOME_Exception_idl
_0_SALOME = omniORB.openModule("SALOME")
_0_SALOME__POA = omniORB.openModule("SALOME__POA")
# #include "SALOME_ResourcesManager.idl"
import SALOME_ResourcesManager_idl
_0_Engines = omniORB.openModule("Engines")
_0_Engines__POA = omniORB.openModule("Engines__POA")

#
# Start of module "Engines"
#
__name__ = "Engines"
_0_Engines = omniORB.openModule("Engines", r"/dn60/series7x/KERNEL/CentOS63-64/KERNEL_SRC/idl/SALOME_Launcher.idl")
_0_Engines__POA = omniORB.openModule("Engines__POA", r"/dn60/series7x/KERNEL/CentOS63-64/KERNEL_SRC/idl/SALOME_Launcher.idl")


# typedef ... FilesList
class FilesList:
    _NP_RepositoryId = "IDL:Engines/FilesList:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_Engines.FilesList = FilesList
_0_Engines._d_FilesList  = (omniORB.tcInternal.tv_sequence, (omniORB.tcInternal.tv_string,0), 0)
_0_Engines._ad_FilesList = (omniORB.tcInternal.tv_alias, FilesList._NP_RepositoryId, "FilesList", (omniORB.tcInternal.tv_sequence, (omniORB.tcInternal.tv_string,0), 0))
_0_Engines._tc_FilesList = omniORB.tcInternal.createTypeCode(_0_Engines._ad_FilesList)
omniORB.registerType(FilesList._NP_RepositoryId, _0_Engines._ad_FilesList, _0_Engines._tc_FilesList)
del FilesList

# struct Parameter
_0_Engines.Parameter = omniORB.newEmptyClass()
class Parameter (omniORB.StructBase):
    _NP_RepositoryId = "IDL:Engines/Parameter:1.0"

    def __init__(self, name, value):
        self.name = name
        self.value = value

_0_Engines.Parameter = Parameter
_0_Engines._d_Parameter  = (omniORB.tcInternal.tv_struct, Parameter, Parameter._NP_RepositoryId, "Parameter", "name", (omniORB.tcInternal.tv_string,0), "value", (omniORB.tcInternal.tv_string,0))
_0_Engines._tc_Parameter = omniORB.tcInternal.createTypeCode(_0_Engines._d_Parameter)
omniORB.registerType(Parameter._NP_RepositoryId, _0_Engines._d_Parameter, _0_Engines._tc_Parameter)
del Parameter

# typedef ... ParameterList
class ParameterList:
    _NP_RepositoryId = "IDL:Engines/ParameterList:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_Engines.ParameterList = ParameterList
_0_Engines._d_ParameterList  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:Engines/Parameter:1.0"], 0)
_0_Engines._ad_ParameterList = (omniORB.tcInternal.tv_alias, ParameterList._NP_RepositoryId, "ParameterList", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:Engines/Parameter:1.0"], 0))
_0_Engines._tc_ParameterList = omniORB.tcInternal.createTypeCode(_0_Engines._ad_ParameterList)
omniORB.registerType(ParameterList._NP_RepositoryId, _0_Engines._ad_ParameterList, _0_Engines._tc_ParameterList)
del ParameterList

# struct JobParameters
_0_Engines.JobParameters = omniORB.newEmptyClass()
class JobParameters (omniORB.StructBase):
    _NP_RepositoryId = "IDL:Engines/JobParameters:1.0"

    def __init__(self, job_name, job_type, job_file, env_file, in_files, out_files, work_directory, local_directory, result_directory, maximum_duration, resource_required, queue, exclusive, mem_per_cpu, specific_parameters, launcher_file, launcher_args):
        self.job_name = job_name
        self.job_type = job_type
        self.job_file = job_file
        self.env_file = env_file
        self.in_files = in_files
        self.out_files = out_files
        self.work_directory = work_directory
        self.local_directory = local_directory
        self.result_directory = result_directory
        self.maximum_duration = maximum_duration
        self.resource_required = resource_required
        self.queue = queue
        self.exclusive = exclusive
        self.mem_per_cpu = mem_per_cpu
        self.specific_parameters = specific_parameters
        self.launcher_file = launcher_file
        self.launcher_args = launcher_args

_0_Engines.JobParameters = JobParameters
_0_Engines._d_JobParameters  = (omniORB.tcInternal.tv_struct, JobParameters, JobParameters._NP_RepositoryId, "JobParameters", "job_name", (omniORB.tcInternal.tv_string,0), "job_type", (omniORB.tcInternal.tv_string,0), "job_file", (omniORB.tcInternal.tv_string,0), "env_file", (omniORB.tcInternal.tv_string,0), "in_files", omniORB.typeMapping["IDL:Engines/FilesList:1.0"], "out_files", omniORB.typeMapping["IDL:Engines/FilesList:1.0"], "work_directory", (omniORB.tcInternal.tv_string,0), "local_directory", (omniORB.tcInternal.tv_string,0), "result_directory", (omniORB.tcInternal.tv_string,0), "maximum_duration", (omniORB.tcInternal.tv_string,0), "resource_required", omniORB.typeMapping["IDL:Engines/ResourceParameters:1.0"], "queue", (omniORB.tcInternal.tv_string,0), "exclusive", omniORB.tcInternal.tv_boolean, "mem_per_cpu", omniORB.tcInternal.tv_ulong, "specific_parameters", omniORB.typeMapping["IDL:Engines/ParameterList:1.0"], "launcher_file", (omniORB.tcInternal.tv_string,0), "launcher_args", (omniORB.tcInternal.tv_string,0))
_0_Engines._tc_JobParameters = omniORB.tcInternal.createTypeCode(_0_Engines._d_JobParameters)
omniORB.registerType(JobParameters._NP_RepositoryId, _0_Engines._d_JobParameters, _0_Engines._tc_JobParameters)
del JobParameters

# struct JobDescription
_0_Engines.JobDescription = omniORB.newEmptyClass()
class JobDescription (omniORB.StructBase):
    _NP_RepositoryId = "IDL:Engines/JobDescription:1.0"

    def __init__(self, job_id, job_parameters):
        self.job_id = job_id
        self.job_parameters = job_parameters

_0_Engines.JobDescription = JobDescription
_0_Engines._d_JobDescription  = (omniORB.tcInternal.tv_struct, JobDescription, JobDescription._NP_RepositoryId, "JobDescription", "job_id", omniORB.tcInternal.tv_long, "job_parameters", omniORB.typeMapping["IDL:Engines/JobParameters:1.0"])
_0_Engines._tc_JobDescription = omniORB.tcInternal.createTypeCode(_0_Engines._d_JobDescription)
omniORB.registerType(JobDescription._NP_RepositoryId, _0_Engines._d_JobDescription, _0_Engines._tc_JobDescription)
del JobDescription

# typedef ... JobsList
class JobsList:
    _NP_RepositoryId = "IDL:Engines/JobsList:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_Engines.JobsList = JobsList
_0_Engines._d_JobsList  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:Engines/JobDescription:1.0"], 0)
_0_Engines._ad_JobsList = (omniORB.tcInternal.tv_alias, JobsList._NP_RepositoryId, "JobsList", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:Engines/JobDescription:1.0"], 0))
_0_Engines._tc_JobsList = omniORB.tcInternal.createTypeCode(_0_Engines._ad_JobsList)
omniORB.registerType(JobsList._NP_RepositoryId, _0_Engines._ad_JobsList, _0_Engines._tc_JobsList)
del JobsList

# interface SalomeLauncherObserver
_0_Engines._d_SalomeLauncherObserver = (omniORB.tcInternal.tv_objref, "IDL:Engines/SalomeLauncherObserver:1.0", "SalomeLauncherObserver")
omniORB.typeMapping["IDL:Engines/SalomeLauncherObserver:1.0"] = _0_Engines._d_SalomeLauncherObserver
_0_Engines.SalomeLauncherObserver = omniORB.newEmptyClass()
class SalomeLauncherObserver :
    _NP_RepositoryId = _0_Engines._d_SalomeLauncherObserver[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_Engines.SalomeLauncherObserver = SalomeLauncherObserver
_0_Engines._tc_SalomeLauncherObserver = omniORB.tcInternal.createTypeCode(_0_Engines._d_SalomeLauncherObserver)
omniORB.registerType(SalomeLauncherObserver._NP_RepositoryId, _0_Engines._d_SalomeLauncherObserver, _0_Engines._tc_SalomeLauncherObserver)

# SalomeLauncherObserver operations and attributes
SalomeLauncherObserver._d_notify = (((omniORB.tcInternal.tv_string,0), (omniORB.tcInternal.tv_string,0)), (), None)

# SalomeLauncherObserver object reference
class _objref_SalomeLauncherObserver (CORBA.Object):
    _NP_RepositoryId = SalomeLauncherObserver._NP_RepositoryId

    def __init__(self):
        CORBA.Object.__init__(self)

    def notify(self, *args):
        return _omnipy.invoke(self, "notify", _0_Engines.SalomeLauncherObserver._d_notify, args)

    __methods__ = ["notify"] + CORBA.Object.__methods__

omniORB.registerObjref(SalomeLauncherObserver._NP_RepositoryId, _objref_SalomeLauncherObserver)
_0_Engines._objref_SalomeLauncherObserver = _objref_SalomeLauncherObserver
del SalomeLauncherObserver, _objref_SalomeLauncherObserver

# SalomeLauncherObserver skeleton
__name__ = "Engines__POA"
class SalomeLauncherObserver (PortableServer.Servant):
    _NP_RepositoryId = _0_Engines.SalomeLauncherObserver._NP_RepositoryId


    _omni_op_d = {"notify": _0_Engines.SalomeLauncherObserver._d_notify}

SalomeLauncherObserver._omni_skeleton = SalomeLauncherObserver
_0_Engines__POA.SalomeLauncherObserver = SalomeLauncherObserver
omniORB.registerSkeleton(SalomeLauncherObserver._NP_RepositoryId, SalomeLauncherObserver)
del SalomeLauncherObserver
__name__ = "Engines"

# interface SalomeLauncher
_0_Engines._d_SalomeLauncher = (omniORB.tcInternal.tv_objref, "IDL:Engines/SalomeLauncher:1.0", "SalomeLauncher")
omniORB.typeMapping["IDL:Engines/SalomeLauncher:1.0"] = _0_Engines._d_SalomeLauncher
_0_Engines.SalomeLauncher = omniORB.newEmptyClass()
class SalomeLauncher :
    _NP_RepositoryId = _0_Engines._d_SalomeLauncher[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_Engines.SalomeLauncher = SalomeLauncher
_0_Engines._tc_SalomeLauncher = omniORB.tcInternal.createTypeCode(_0_Engines._d_SalomeLauncher)
omniORB.registerType(SalomeLauncher._NP_RepositoryId, _0_Engines._d_SalomeLauncher, _0_Engines._tc_SalomeLauncher)

# SalomeLauncher operations and attributes
SalomeLauncher._d_createJob = ((omniORB.typeMapping["IDL:Engines/JobParameters:1.0"], ), (omniORB.tcInternal.tv_long, ), {_0_SALOME.SALOME_Exception._NP_RepositoryId: _0_SALOME._d_SALOME_Exception})
SalomeLauncher._d_launchJob = ((omniORB.tcInternal.tv_long, ), (), {_0_SALOME.SALOME_Exception._NP_RepositoryId: _0_SALOME._d_SALOME_Exception})
SalomeLauncher._d_getJobState = ((omniORB.tcInternal.tv_long, ), ((omniORB.tcInternal.tv_string,0), ), {_0_SALOME.SALOME_Exception._NP_RepositoryId: _0_SALOME._d_SALOME_Exception})
SalomeLauncher._d_getAssignedHostnames = ((omniORB.tcInternal.tv_long, ), ((omniORB.tcInternal.tv_string,0), ), {_0_SALOME.SALOME_Exception._NP_RepositoryId: _0_SALOME._d_SALOME_Exception})
SalomeLauncher._d_getJobResults = ((omniORB.tcInternal.tv_long, (omniORB.tcInternal.tv_string,0)), (), {_0_SALOME.SALOME_Exception._NP_RepositoryId: _0_SALOME._d_SALOME_Exception})
SalomeLauncher._d_getJobDumpState = ((omniORB.tcInternal.tv_long, (omniORB.tcInternal.tv_string,0)), (omniORB.tcInternal.tv_boolean, ), {_0_SALOME.SALOME_Exception._NP_RepositoryId: _0_SALOME._d_SALOME_Exception})
SalomeLauncher._d_stopJob = ((omniORB.tcInternal.tv_long, ), (), {_0_SALOME.SALOME_Exception._NP_RepositoryId: _0_SALOME._d_SALOME_Exception})
SalomeLauncher._d_removeJob = ((omniORB.tcInternal.tv_long, ), (), {_0_SALOME.SALOME_Exception._NP_RepositoryId: _0_SALOME._d_SALOME_Exception})
SalomeLauncher._d_createJobWithFile = (((omniORB.tcInternal.tv_string,0), (omniORB.tcInternal.tv_string,0)), (omniORB.tcInternal.tv_long, ), {_0_SALOME.SALOME_Exception._NP_RepositoryId: _0_SALOME._d_SALOME_Exception})
SalomeLauncher._d_testBatch = ((omniORB.typeMapping["IDL:Engines/ResourceParameters:1.0"], ), (omniORB.tcInternal.tv_boolean, ), {_0_SALOME.SALOME_Exception._NP_RepositoryId: _0_SALOME._d_SALOME_Exception})
SalomeLauncher._d_Shutdown = ((), (), None)
SalomeLauncher._d_getPID = ((), (omniORB.tcInternal.tv_long, ), None)
SalomeLauncher._d_addObserver = ((omniORB.typeMapping["IDL:Engines/SalomeLauncherObserver:1.0"], ), (), None)
SalomeLauncher._d_removeObserver = ((omniORB.typeMapping["IDL:Engines/SalomeLauncherObserver:1.0"], ), (), None)
SalomeLauncher._d_getJobsList = ((), (omniORB.typeMapping["IDL:Engines/JobsList:1.0"], ), None)
SalomeLauncher._d_getJobParameters = ((omniORB.tcInternal.tv_long, ), (omniORB.typeMapping["IDL:Engines/JobParameters:1.0"], ), {_0_SALOME.SALOME_Exception._NP_RepositoryId: _0_SALOME._d_SALOME_Exception})
SalomeLauncher._d_loadJobs = (((omniORB.tcInternal.tv_string,0), ), (), {_0_SALOME.SALOME_Exception._NP_RepositoryId: _0_SALOME._d_SALOME_Exception})
SalomeLauncher._d_saveJobs = (((omniORB.tcInternal.tv_string,0), ), (), {_0_SALOME.SALOME_Exception._NP_RepositoryId: _0_SALOME._d_SALOME_Exception})

# SalomeLauncher object reference
class _objref_SalomeLauncher (CORBA.Object):
    _NP_RepositoryId = SalomeLauncher._NP_RepositoryId

    def __init__(self):
        CORBA.Object.__init__(self)

    def createJob(self, *args):
        return _omnipy.invoke(self, "createJob", _0_Engines.SalomeLauncher._d_createJob, args)

    def launchJob(self, *args):
        return _omnipy.invoke(self, "launchJob", _0_Engines.SalomeLauncher._d_launchJob, args)

    def getJobState(self, *args):
        return _omnipy.invoke(self, "getJobState", _0_Engines.SalomeLauncher._d_getJobState, args)

    def getAssignedHostnames(self, *args):
        return _omnipy.invoke(self, "getAssignedHostnames", _0_Engines.SalomeLauncher._d_getAssignedHostnames, args)

    def getJobResults(self, *args):
        return _omnipy.invoke(self, "getJobResults", _0_Engines.SalomeLauncher._d_getJobResults, args)

    def getJobDumpState(self, *args):
        return _omnipy.invoke(self, "getJobDumpState", _0_Engines.SalomeLauncher._d_getJobDumpState, args)

    def stopJob(self, *args):
        return _omnipy.invoke(self, "stopJob", _0_Engines.SalomeLauncher._d_stopJob, args)

    def removeJob(self, *args):
        return _omnipy.invoke(self, "removeJob", _0_Engines.SalomeLauncher._d_removeJob, args)

    def createJobWithFile(self, *args):
        return _omnipy.invoke(self, "createJobWithFile", _0_Engines.SalomeLauncher._d_createJobWithFile, args)

    def testBatch(self, *args):
        return _omnipy.invoke(self, "testBatch", _0_Engines.SalomeLauncher._d_testBatch, args)

    def Shutdown(self, *args):
        return _omnipy.invoke(self, "Shutdown", _0_Engines.SalomeLauncher._d_Shutdown, args)

    def getPID(self, *args):
        return _omnipy.invoke(self, "getPID", _0_Engines.SalomeLauncher._d_getPID, args)

    def addObserver(self, *args):
        return _omnipy.invoke(self, "addObserver", _0_Engines.SalomeLauncher._d_addObserver, args)

    def removeObserver(self, *args):
        return _omnipy.invoke(self, "removeObserver", _0_Engines.SalomeLauncher._d_removeObserver, args)

    def getJobsList(self, *args):
        return _omnipy.invoke(self, "getJobsList", _0_Engines.SalomeLauncher._d_getJobsList, args)

    def getJobParameters(self, *args):
        return _omnipy.invoke(self, "getJobParameters", _0_Engines.SalomeLauncher._d_getJobParameters, args)

    def loadJobs(self, *args):
        return _omnipy.invoke(self, "loadJobs", _0_Engines.SalomeLauncher._d_loadJobs, args)

    def saveJobs(self, *args):
        return _omnipy.invoke(self, "saveJobs", _0_Engines.SalomeLauncher._d_saveJobs, args)

    __methods__ = ["createJob", "launchJob", "getJobState", "getAssignedHostnames", "getJobResults", "getJobDumpState", "stopJob", "removeJob", "createJobWithFile", "testBatch", "Shutdown", "getPID", "addObserver", "removeObserver", "getJobsList", "getJobParameters", "loadJobs", "saveJobs"] + CORBA.Object.__methods__

omniORB.registerObjref(SalomeLauncher._NP_RepositoryId, _objref_SalomeLauncher)
_0_Engines._objref_SalomeLauncher = _objref_SalomeLauncher
del SalomeLauncher, _objref_SalomeLauncher

# SalomeLauncher skeleton
__name__ = "Engines__POA"
class SalomeLauncher (PortableServer.Servant):
    _NP_RepositoryId = _0_Engines.SalomeLauncher._NP_RepositoryId


    _omni_op_d = {"createJob": _0_Engines.SalomeLauncher._d_createJob, "launchJob": _0_Engines.SalomeLauncher._d_launchJob, "getJobState": _0_Engines.SalomeLauncher._d_getJobState, "getAssignedHostnames": _0_Engines.SalomeLauncher._d_getAssignedHostnames, "getJobResults": _0_Engines.SalomeLauncher._d_getJobResults, "getJobDumpState": _0_Engines.SalomeLauncher._d_getJobDumpState, "stopJob": _0_Engines.SalomeLauncher._d_stopJob, "removeJob": _0_Engines.SalomeLauncher._d_removeJob, "createJobWithFile": _0_Engines.SalomeLauncher._d_createJobWithFile, "testBatch": _0_Engines.SalomeLauncher._d_testBatch, "Shutdown": _0_Engines.SalomeLauncher._d_Shutdown, "getPID": _0_Engines.SalomeLauncher._d_getPID, "addObserver": _0_Engines.SalomeLauncher._d_addObserver, "removeObserver": _0_Engines.SalomeLauncher._d_removeObserver, "getJobsList": _0_Engines.SalomeLauncher._d_getJobsList, "getJobParameters": _0_Engines.SalomeLauncher._d_getJobParameters, "loadJobs": _0_Engines.SalomeLauncher._d_loadJobs, "saveJobs": _0_Engines.SalomeLauncher._d_saveJobs}

SalomeLauncher._omni_skeleton = SalomeLauncher
_0_Engines__POA.SalomeLauncher = SalomeLauncher
omniORB.registerSkeleton(SalomeLauncher._NP_RepositoryId, SalomeLauncher)
del SalomeLauncher
__name__ = "Engines"

#
# End of module "Engines"
#
__name__ = "SALOME_Launcher_idl"

_exported_modules = ( "Engines", )

# The end.
