
//this file was generated by yacsgen
#ifndef __MATH_hxx2salome__
#define __MATH_hxx2salome__

#include <SALOMEconfig.h>
#include CORBA_SERVER_HEADER(MATHEMATICS)
#include "SALOME_Component_i.hxx"
#include "SALOMEMultiComm.hxx"
#include <memory>  // for std::auto_ptr
//COMPODEFS

//ENDDEF

class MATH;  // forward declaration

class MATH_i: 
  public POA_MATHEMATICS_ORB::MATH_Gen,
  public Engines_Component_i
{

public:
    MATH_i(CORBA::ORB_ptr orb,
	    PortableServer::POA_ptr poa,
	    PortableServer::ObjectId * contId, 
	    const char *instanceName, 
	    const char *interfaceName);
    virtual ~MATH_i();

    CORBA::Double sum(const MATHEMATICS_ORB::dblevec& tab) throw (SALOME::SALOME_Exception);
    CORBA::Double squareroot(CORBA::Double x) throw (SALOME::SALOME_Exception);
    CORBA::Double plus(CORBA::Double x,CORBA::Double y) throw (SALOME::SALOME_Exception);
    CORBA::Double minus(CORBA::Double x,CORBA::Double y) throw (SALOME::SALOME_Exception);
    CORBA::Double times(CORBA::Double x,CORBA::Double y) throw (SALOME::SALOME_Exception);
    CORBA::Double sinx(CORBA::Double x) throw (SALOME::SALOME_Exception);

// (re)defined methods of Driver
    virtual Engines::EngineComponent_ptr GetComponentInstance();
    char* ComponentDataType();

private:
    std::auto_ptr<MATH> cppCompo_;

};


extern "C"
    PortableServer::ObjectId * MATHEngine_factory(
	    CORBA::ORB_ptr orb,
	    PortableServer::POA_ptr poa,
	    PortableServer::ObjectId * contId,
	    const char *instanceName,
	    const char *interfaceName);


#endif
